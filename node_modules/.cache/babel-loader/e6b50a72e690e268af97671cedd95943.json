{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/param/OneDrive/Documents/sem3/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\param\\\\OneDrive\\\\Documents\\\\sem3\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import jwt from\"jwt-decode\";import{Upload}from\"@aws-sdk/lib-storage\";import{S3Client,S3}from\"@aws-sdk/client-s3\";var tokenTimeout;export var getApiPath=function getApiPath(){return\"http://localhost:5000/\";};export var getToken=function getToken(){var token=localStorage.getItem(\"token\");if(token!==\"undefined\"&&token!==null){return jwt(token);}else{return null;}};export function isValidEmail(email){return /\\S+@\\S+\\.\\S+/.test(email);}export var UploadFile=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(file){var credentials,parallelUploads3,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;credentials={accessKeyId:\"AKIAXGG575DZRYM2U7X5\",secretAccessKey:\"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\"};parallelUploads3=new Upload({client:new S3({region:\"us-east-1\",credentials:credentials})||new S3Client({region:\"us-east-1\",credentials:credentials}),params:{Bucket:\"dustypaws-storage-bucket\",Key:file.name,Body:file},tags:[/*...*/],// optional tags\nqueueSize:4,// optional concurrency configuration\npartSize:1024*1024*5,// optional size of each part, in bytes, at least 5MB\nleavePartsOnError:false// optional manually handle dropped parts\n});parallelUploads3.on(\"httpUploadProgress\",function(progress){// console.log(progress);\n});_context.next=6;return parallelUploads3.done();case 6:data=_context.sent;return _context.abrupt(\"return\",data.Location);case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);alert(\"Error occured, cannot upload image.\");console.log(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function UploadFile(_x){return _ref.apply(this,arguments);};}();export var getLoggedInUser=function getLoggedInUser(){var userToken=getToken();var loggedInUser=\"\";if(userToken!==null&&userToken!==\"undefined\"&&userToken!==\"\"){loggedInUser=userToken.user;}return loggedInUser;};export var setToken=function setToken(token){localStorage.setItem(\"token\",token);};export var isTokenTimeOut=function isTokenTimeOut(tokenTime){var currentTokenTime=new Date(tokenTime.iat);if(currentTokenTime>=tokenTimeout)return true;else return false;};export var setTokenTimeout=function setTokenTimeout(token){var tokenTime=new Date(token.iat);tokenTimeout=tokenTime.setHours(tokenTime.getHours(),tokenTime.getMinutes()+8,0,0);};export var deleteToken=function deleteToken(){localStorage.removeItem(\"token\");};","map":{"version":3,"names":["jwt","Upload","S3Client","S3","tokenTimeout","getApiPath","getToken","token","localStorage","getItem","isValidEmail","email","test","UploadFile","file","credentials","accessKeyId","secretAccessKey","parallelUploads3","client","region","params","Bucket","Key","name","Body","tags","queueSize","partSize","leavePartsOnError","on","progress","done","data","Location","alert","console","log","getLoggedInUser","userToken","loggedInUser","user","setToken","setItem","isTokenTimeOut","tokenTime","currentTokenTime","Date","iat","setTokenTimeout","setHours","getHours","getMinutes","deleteToken","removeItem"],"sources":["C:/Users/param/OneDrive/Documents/sem3/client/src/Common.js"],"sourcesContent":["import jwt from \"jwt-decode\";\r\nimport { Upload } from \"@aws-sdk/lib-storage\";\r\nimport { S3Client, S3 } from \"@aws-sdk/client-s3\";\r\nlet tokenTimeout;\r\nexport const getApiPath = () => {\r\n  return \"http://localhost:5000/\";\r\n};\r\n\r\nexport const getToken = () => {\r\n  let token = localStorage.getItem(\"token\");\r\n\r\n  if (token !== \"undefined\" && token !== null) {\r\n    return jwt(token);\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport function isValidEmail(email) {\r\n  return /\\S+@\\S+\\.\\S+/.test(email);\r\n}\r\n\r\nexport const UploadFile = async (file) => {\r\n  try {\r\n    const credentials = {\r\n      accessKeyId: \"AKIAXGG575DZRYM2U7X5\",\r\n      secretAccessKey: \"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\",\r\n    };\r\n    const parallelUploads3 = new Upload({\r\n      client:\r\n        new S3({ region: \"us-east-1\", credentials: credentials }) ||\r\n        new S3Client({ region: \"us-east-1\", credentials: credentials }),\r\n      params: {\r\n        Bucket: \"dustypaws-storage-bucket\",\r\n        Key: file.name,\r\n        Body: file,\r\n      },\r\n\r\n      tags: [\r\n        /*...*/\r\n      ], // optional tags\r\n      queueSize: 4, // optional concurrency configuration\r\n      partSize: 1024 * 1024 * 5, // optional size of each part, in bytes, at least 5MB\r\n      leavePartsOnError: false, // optional manually handle dropped parts\r\n    });\r\n\r\n    parallelUploads3.on(\"httpUploadProgress\", (progress) => {\r\n      // console.log(progress);\r\n    });\r\n\r\n    let data = await parallelUploads3.done();\r\n    return data.Location;\r\n  } catch (e) {\r\n    alert(\"Error occured, cannot upload image.\");\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getLoggedInUser = () => {\r\n  let userToken = getToken();\r\n  let loggedInUser = \"\";\r\n  if (userToken !== null && userToken !== \"undefined\" && userToken !== \"\") {\r\n    loggedInUser = userToken.user;\r\n  }\r\n  return loggedInUser;\r\n};\r\n\r\nexport const setToken = (token) => {\r\n  localStorage.setItem(\"token\", token);\r\n};\r\n\r\nexport const isTokenTimeOut = (tokenTime) => {\r\n  let currentTokenTime = new Date(tokenTime.iat);\r\n  if (currentTokenTime >= tokenTimeout) return true;\r\n  else return false;\r\n};\r\n\r\nexport const setTokenTimeout = (token) => {\r\n  let tokenTime = new Date(token.iat);\r\n\r\n  tokenTimeout = tokenTime.setHours(\r\n    tokenTime.getHours(),\r\n    tokenTime.getMinutes() + 8,\r\n    0,\r\n    0\r\n  );\r\n};\r\n\r\nexport const deleteToken = () => {\r\n  localStorage.removeItem(\"token\");\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}