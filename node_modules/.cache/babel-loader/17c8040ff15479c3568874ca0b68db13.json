{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest, isValidHostname as __isValidHostname } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, expectUnion as __expectUnion, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode, parseBoolean as __parseBoolean, parseRfc3339DateTime as __parseRfc3339DateTime, parseRfc7231DateTime as __parseRfc7231DateTime, strictParseInt32 as __strictParseInt32, strictParseLong as __strictParseLong } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { decodeHTML } from \"entities\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nimport { AnalyticsFilter, BucketAlreadyExists, BucketAlreadyOwnedByYou, InvalidObjectState, LifecycleRuleFilter, MetricsFilter, NoSuchBucket, NoSuchKey, NoSuchUpload, NotFound, ObjectNotInActiveTierError, ReplicationRuleFilter } from \"../models/models_0\";\nimport { ObjectAlreadyInActiveTierError } from \"../models/models_1\";\nimport { S3ServiceException as __BaseException } from \"../models/S3ServiceException\";\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function serializeAws_restXmlAbortMultipartUploadCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"AbortMultipartUpload\"\n          }, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function serializeAws_restXmlCompleteMultipartUploadCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ChecksumCRC32) && {\n            \"x-amz-checksum-crc32\": input.ChecksumCRC32\n          }), isSerializableHeaderValue(input.ChecksumCRC32C) && {\n            \"x-amz-checksum-crc32c\": input.ChecksumCRC32C\n          }), isSerializableHeaderValue(input.ChecksumSHA1) && {\n            \"x-amz-checksum-sha1\": input.ChecksumSHA1\n          }), isSerializableHeaderValue(input.ChecksumSHA256) && {\n            \"x-amz-checksum-sha256\": input.ChecksumSHA256\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"CompleteMultipartUpload\"\n          }, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.MultipartUpload !== undefined) {\n            body = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n          }\n\n          if (input.MultipartUpload !== undefined) {\n            contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n            contents = contents.withName(\"CompleteMultipartUpload\");\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCopyObjectCommand = function serializeAws_restXmlCopyObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.MetadataDirective) && {\n            \"x-amz-metadata-directive\": input.MetadataDirective\n          }), isSerializableHeaderValue(input.TaggingDirective) && {\n            \"x-amz-tagging-directive\": input.TaggingDirective\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\".concat(suffix.toLowerCase())] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"CopyObject\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateBucketCommand = function serializeAws_restXmlCreateBucketCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n            \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString()\n          }), isSerializableHeaderValue(input.ObjectOwnership) && {\n            \"x-amz-object-ownership\": input.ObjectOwnership\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.CreateBucketConfiguration !== undefined) {\n            body = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n          }\n\n          if (input.CreateBucketConfiguration !== undefined) {\n            contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function serializeAws_restXmlCreateMultipartUploadCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-checksum-algorithm\": input.ChecksumAlgorithm\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\".concat(suffix.toLowerCase())] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            uploads: \"\",\n            \"x-id\": \"CreateMultipartUpload\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCommand = function serializeAws_restXmlDeleteBucketCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function serializeAws_restXmlDeleteBucketCorsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function serializeAws_restXmlDeleteBucketEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function serializeAws_restXmlDeleteBucketInventoryConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function serializeAws_restXmlDeleteBucketLifecycleCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function serializeAws_restXmlDeleteBucketMetricsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function serializeAws_restXmlDeleteBucketOwnershipControlsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function serializeAws_restXmlDeleteBucketPolicyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function serializeAws_restXmlDeleteBucketReplicationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function serializeAws_restXmlDeleteBucketTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function serializeAws_restXmlDeleteBucketWebsiteCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectCommand = function serializeAws_restXmlDeleteObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"DeleteObject\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectsCommand = function serializeAws_restXmlDeleteObjectsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            delete: \"\",\n            \"x-id\": \"DeleteObjects\"\n          };\n\n          if (input.Delete !== undefined) {\n            body = serializeAws_restXmlDelete(input.Delete, context);\n          }\n\n          if (input.Delete !== undefined) {\n            contents = serializeAws_restXmlDelete(input.Delete, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function serializeAws_restXmlDeleteObjectTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function serializeAws_restXmlDeletePublicAccessBlockCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function serializeAws_restXmlGetBucketAccelerateConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAclCommand = function serializeAws_restXmlGetBucketAclCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function serializeAws_restXmlGetBucketAnalyticsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"GetBucketAnalyticsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketCorsCommand = function serializeAws_restXmlGetBucketCorsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function serializeAws_restXmlGetBucketEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"GetBucketIntelligentTieringConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function serializeAws_restXmlGetBucketInventoryConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"GetBucketInventoryConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function serializeAws_restXmlGetBucketLifecycleConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLocationCommand = function serializeAws_restXmlGetBucketLocationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            location: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLoggingCommand = function serializeAws_restXmlGetBucketLoggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function serializeAws_restXmlGetBucketMetricsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"GetBucketMetricsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function serializeAws_restXmlGetBucketNotificationConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketOwnershipControlsCommand = function serializeAws_restXmlGetBucketOwnershipControlsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyCommand = function serializeAws_restXmlGetBucketPolicyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function serializeAws_restXmlGetBucketPolicyStatusCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policyStatus: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketReplicationCommand = function serializeAws_restXmlGetBucketReplicationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function serializeAws_restXmlGetBucketRequestPaymentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketTaggingCommand = function serializeAws_restXmlGetBucketTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketVersioningCommand = function serializeAws_restXmlGetBucketVersioningCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function serializeAws_restXmlGetBucketWebsiteCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectCommand = function serializeAws_restXmlGetObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ChecksumMode) && {\n            \"x-amz-checksum-mode\": input.ChecksumMode\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"x-id\": \"GetObject\"\n          }, input.ResponseCacheControl !== undefined && {\n            \"response-cache-control\": input.ResponseCacheControl\n          }), input.ResponseContentDisposition !== undefined && {\n            \"response-content-disposition\": input.ResponseContentDisposition\n          }), input.ResponseContentEncoding !== undefined && {\n            \"response-content-encoding\": input.ResponseContentEncoding\n          }), input.ResponseContentLanguage !== undefined && {\n            \"response-content-language\": input.ResponseContentLanguage\n          }), input.ResponseContentType !== undefined && {\n            \"response-content-type\": input.ResponseContentType\n          }), input.ResponseExpires !== undefined && {\n            \"response-expires\": __dateToUtcString(input.ResponseExpires).toString()\n          }), input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectAclCommand = function serializeAws_restXmlGetObjectAclCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectAttributesCommand = function serializeAws_restXmlGetObjectAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.MaxParts) && {\n            \"x-amz-max-parts\": input.MaxParts.toString()\n          }), isSerializableHeaderValue(input.PartNumberMarker) && {\n            \"x-amz-part-number-marker\": input.PartNumberMarker\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ObjectAttributes) && {\n            \"x-amz-object-attributes\": (input.ObjectAttributes || []).map(function (_entry) {\n              return _entry;\n            }).join(\", \")\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            attributes: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function serializeAws_restXmlGetObjectLegalHoldCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function serializeAws_restXmlGetObjectLockConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectRetentionCommand = function serializeAws_restXmlGetObjectRetentionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTaggingCommand = function serializeAws_restXmlGetObjectTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTorrentCommand = function serializeAws_restXmlGetObjectTorrentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            torrent: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function serializeAws_restXmlGetPublicAccessBlockCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadBucketCommand = function serializeAws_restXmlHeadBucketCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadObjectCommand = function serializeAws_restXmlHeadObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ChecksumMode) && {\n            \"x-amz-checksum-mode\": input.ChecksumMode\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({}, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function serializeAws_restXmlListBucketAnalyticsConfigurationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"ListBucketAnalyticsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"ListBucketIntelligentTieringConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function serializeAws_restXmlListBucketInventoryConfigurationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"ListBucketInventoryConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function serializeAws_restXmlListBucketMetricsConfigurationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"ListBucketMetricsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketsCommand = function serializeAws_restXmlListBucketsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/xml\"\n          };\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/\";\n          body = \"\";\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListMultipartUploadsCommand = function serializeAws_restXmlListMultipartUploadsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            uploads: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxUploads !== undefined && {\n            \"max-uploads\": input.MaxUploads.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.UploadIdMarker !== undefined && {\n            \"upload-id-marker\": input.UploadIdMarker\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsCommand = function serializeAws_restXmlListObjectsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign({}, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.Marker !== undefined && {\n            marker: input.Marker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsV2Command = function serializeAws_restXmlListObjectsV2Command(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"list-type\": \"2\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          }), input.FetchOwner !== undefined && {\n            \"fetch-owner\": input.FetchOwner.toString()\n          }), input.StartAfter !== undefined && {\n            \"start-after\": input.StartAfter\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectVersionsCommand = function serializeAws_restXmlListObjectVersionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            versions: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.VersionIdMarker !== undefined && {\n            \"version-id-marker\": input.VersionIdMarker\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListPartsCommand = function serializeAws_restXmlListPartsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign({\n            \"x-id\": \"ListParts\"\n          }, input.MaxParts !== undefined && {\n            \"max-parts\": input.MaxParts.toString()\n          }), input.PartNumberMarker !== undefined && {\n            \"part-number-marker\": input.PartNumberMarker\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function serializeAws_restXmlPutBucketAccelerateConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n\n          if (input.AccelerateConfiguration !== undefined) {\n            body = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n          }\n\n          if (input.AccelerateConfiguration !== undefined) {\n            contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAclCommand = function serializeAws_restXmlPutBucketAclCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n\n          if (input.AccessControlPolicy !== undefined) {\n            body = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n          }\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function serializeAws_restXmlPutBucketAnalyticsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.AnalyticsConfiguration !== undefined) {\n            body = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n          }\n\n          if (input.AnalyticsConfiguration !== undefined) {\n            contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketCorsCommand = function serializeAws_restXmlPutBucketCorsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n\n          if (input.CORSConfiguration !== undefined) {\n            body = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n          }\n\n          if (input.CORSConfiguration !== undefined) {\n            contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function serializeAws_restXmlPutBucketEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n\n          if (input.ServerSideEncryptionConfiguration !== undefined) {\n            body = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n          }\n\n          if (input.ServerSideEncryptionConfiguration !== undefined) {\n            contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/xml\"\n          };\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.IntelligentTieringConfiguration !== undefined) {\n            body = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n          }\n\n          if (input.IntelligentTieringConfiguration !== undefined) {\n            contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.InventoryConfiguration !== undefined) {\n            body = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n          }\n\n          if (input.InventoryConfiguration !== undefined) {\n            contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function serializeAws_restXmlPutBucketLifecycleConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n\n          if (input.LifecycleConfiguration !== undefined) {\n            body = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n          }\n\n          if (input.LifecycleConfiguration !== undefined) {\n            contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n            contents = contents.withName(\"LifecycleConfiguration\");\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLoggingCommand = function serializeAws_restXmlPutBucketLoggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n\n          if (input.BucketLoggingStatus !== undefined) {\n            body = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n          }\n\n          if (input.BucketLoggingStatus !== undefined) {\n            contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function serializeAws_restXmlPutBucketMetricsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.MetricsConfiguration !== undefined) {\n            body = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n          }\n\n          if (input.MetricsConfiguration !== undefined) {\n            contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function serializeAws_restXmlPutBucketNotificationConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.SkipDestinationValidation) && {\n            \"x-amz-skip-destination-validation\": input.SkipDestinationValidation.toString()\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n\n          if (input.NotificationConfiguration !== undefined) {\n            body = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n          }\n\n          if (input.NotificationConfiguration !== undefined) {\n            contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketOwnershipControlsCommand = function serializeAws_restXmlPutBucketOwnershipControlsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n\n          if (input.OwnershipControls !== undefined) {\n            body = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n          }\n\n          if (input.OwnershipControls !== undefined) {\n            contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketPolicyCommand = function serializeAws_restXmlPutBucketPolicyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"text/plain\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n            \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n\n          if (input.Policy !== undefined) {\n            body = input.Policy;\n          }\n\n          if (input.Policy !== undefined) {\n            contents = input.Policy;\n            body = contents;\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketReplicationCommand = function serializeAws_restXmlPutBucketReplicationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n\n          if (input.ReplicationConfiguration !== undefined) {\n            body = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n          }\n\n          if (input.ReplicationConfiguration !== undefined) {\n            contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function serializeAws_restXmlPutBucketRequestPaymentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n\n          if (input.RequestPaymentConfiguration !== undefined) {\n            body = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n          }\n\n          if (input.RequestPaymentConfiguration !== undefined) {\n            contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketTaggingCommand = function serializeAws_restXmlPutBucketTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n\n          if (input.Tagging !== undefined) {\n            body = serializeAws_restXmlTagging(input.Tagging, context);\n          }\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketVersioningCommand = function serializeAws_restXmlPutBucketVersioningCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n\n          if (input.VersioningConfiguration !== undefined) {\n            body = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n          }\n\n          if (input.VersioningConfiguration !== undefined) {\n            contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function serializeAws_restXmlPutBucketWebsiteCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n\n          if (input.WebsiteConfiguration !== undefined) {\n            body = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n          }\n\n          if (input.WebsiteConfiguration !== undefined) {\n            contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectCommand = function serializeAws_restXmlPutObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ChecksumCRC32) && {\n            \"x-amz-checksum-crc32\": input.ChecksumCRC32\n          }), isSerializableHeaderValue(input.ChecksumCRC32C) && {\n            \"x-amz-checksum-crc32c\": input.ChecksumCRC32C\n          }), isSerializableHeaderValue(input.ChecksumSHA1) && {\n            \"x-amz-checksum-sha1\": input.ChecksumSHA1\n          }), isSerializableHeaderValue(input.ChecksumSHA256) && {\n            \"x-amz-checksum-sha256\": input.ChecksumSHA256\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\".concat(suffix.toLowerCase())] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"PutObject\"\n          };\n\n          if (input.Body !== undefined) {\n            body = input.Body;\n          }\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectAclCommand = function serializeAws_restXmlPutObjectAclCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.AccessControlPolicy !== undefined) {\n            body = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n          }\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function serializeAws_restXmlPutObjectLegalHoldCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.LegalHold !== undefined) {\n            body = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n          }\n\n          if (input.LegalHold !== undefined) {\n            contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n            contents = contents.withName(\"LegalHold\");\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function serializeAws_restXmlPutObjectLockConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n\n          if (input.ObjectLockConfiguration !== undefined) {\n            body = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n          }\n\n          if (input.ObjectLockConfiguration !== undefined) {\n            contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectRetentionCommand = function serializeAws_restXmlPutObjectRetentionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Retention !== undefined) {\n            body = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n          }\n\n          if (input.Retention !== undefined) {\n            contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n            contents = contents.withName(\"Retention\");\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectTaggingCommand = function serializeAws_restXmlPutObjectTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Tagging !== undefined) {\n            body = serializeAws_restXmlTagging(input.Tagging, context);\n          }\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function serializeAws_restXmlPutPublicAccessBlockCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n\n          if (input.PublicAccessBlockConfiguration !== undefined) {\n            body = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n          }\n\n          if (input.PublicAccessBlockConfiguration !== undefined) {\n            contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlRestoreObjectCommand = function serializeAws_restXmlRestoreObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            restore: \"\",\n            \"x-id\": \"RestoreObject\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.RestoreRequest !== undefined) {\n            body = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n          }\n\n          if (input.RestoreRequest !== undefined) {\n            contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlSelectObjectContentCommand = function serializeAws_restXmlSelectObjectContentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            select: \"\",\n            \"select-type\": \"2\",\n            \"x-id\": \"SelectObjectContent\"\n          };\n          body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n          bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n          bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n\n          if (input.Expression !== undefined) {\n            node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ExpressionType !== undefined) {\n            node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.InputSerialization !== undefined) {\n            node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.OutputSerialization !== undefined) {\n            node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.RequestProgress !== undefined) {\n            node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ScanRange !== undefined) {\n            node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n            bodyNode.addChildNode(node);\n          }\n\n          body += bodyNode.toString();\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCommand = function serializeAws_restXmlUploadPartCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n            \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm\n          }), isSerializableHeaderValue(input.ChecksumCRC32) && {\n            \"x-amz-checksum-crc32\": input.ChecksumCRC32\n          }), isSerializableHeaderValue(input.ChecksumCRC32C) && {\n            \"x-amz-checksum-crc32c\": input.ChecksumCRC32C\n          }), isSerializableHeaderValue(input.ChecksumSHA1) && {\n            \"x-amz-checksum-sha1\": input.ChecksumSHA1\n          }), isSerializableHeaderValue(input.ChecksumSHA256) && {\n            \"x-amz-checksum-sha256\": input.ChecksumSHA256\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPart\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.Body !== undefined) {\n            body = input.Body;\n          }\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCopyCommand = function serializeAws_restXmlUploadPartCopyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceRange) && {\n            \"x-amz-copy-source-range\": input.CopySourceRange\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPartCopy\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlWriteGetObjectResponseCommand = function serializeAws_restXmlWriteGetObjectResponseCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body, contents, resolvedHostname;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\",\n            \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\"\n          }, isSerializableHeaderValue(input.RequestRoute) && {\n            \"x-amz-request-route\": input.RequestRoute\n          }), isSerializableHeaderValue(input.RequestToken) && {\n            \"x-amz-request-token\": input.RequestToken\n          }), isSerializableHeaderValue(input.StatusCode) && {\n            \"x-amz-fwd-status\": input.StatusCode.toString()\n          }), isSerializableHeaderValue(input.ErrorCode) && {\n            \"x-amz-fwd-error-code\": input.ErrorCode\n          }), isSerializableHeaderValue(input.ErrorMessage) && {\n            \"x-amz-fwd-error-message\": input.ErrorMessage\n          }), isSerializableHeaderValue(input.AcceptRanges) && {\n            \"x-amz-fwd-header-accept-ranges\": input.AcceptRanges\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"x-amz-fwd-header-cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"x-amz-fwd-header-content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"x-amz-fwd-header-content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"x-amz-fwd-header-content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentRange) && {\n            \"x-amz-fwd-header-content-range\": input.ContentRange\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"x-amz-fwd-header-content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.ChecksumCRC32) && {\n            \"x-amz-fwd-header-x-amz-checksum-crc32\": input.ChecksumCRC32\n          }), isSerializableHeaderValue(input.ChecksumCRC32C) && {\n            \"x-amz-fwd-header-x-amz-checksum-crc32c\": input.ChecksumCRC32C\n          }), isSerializableHeaderValue(input.ChecksumSHA1) && {\n            \"x-amz-fwd-header-x-amz-checksum-sha1\": input.ChecksumSHA1\n          }), isSerializableHeaderValue(input.ChecksumSHA256) && {\n            \"x-amz-fwd-header-x-amz-checksum-sha256\": input.ChecksumSHA256\n          }), isSerializableHeaderValue(input.DeleteMarker) && {\n            \"x-amz-fwd-header-x-amz-delete-marker\": input.DeleteMarker.toString()\n          }), isSerializableHeaderValue(input.ETag) && {\n            \"x-amz-fwd-header-etag\": input.ETag\n          }), isSerializableHeaderValue(input.Expires) && {\n            \"x-amz-fwd-header-expires\": __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.Expiration) && {\n            \"x-amz-fwd-header-x-amz-expiration\": input.Expiration\n          }), isSerializableHeaderValue(input.LastModified) && {\n            \"x-amz-fwd-header-last-modified\": __dateToUtcString(input.LastModified).toString()\n          }), isSerializableHeaderValue(input.MissingMeta) && {\n            \"x-amz-fwd-header-x-amz-missing-meta\": input.MissingMeta.toString()\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-fwd-header-x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-fwd-header-x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-fwd-header-x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.PartsCount) && {\n            \"x-amz-fwd-header-x-amz-mp-parts-count\": input.PartsCount.toString()\n          }), isSerializableHeaderValue(input.ReplicationStatus) && {\n            \"x-amz-fwd-header-x-amz-replication-status\": input.ReplicationStatus\n          }), isSerializableHeaderValue(input.RequestCharged) && {\n            \"x-amz-fwd-header-x-amz-request-charged\": input.RequestCharged\n          }), isSerializableHeaderValue(input.Restore) && {\n            \"x-amz-fwd-header-x-amz-restore\": input.Restore\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-fwd-header-x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.TagCount) && {\n            \"x-amz-fwd-header-x-amz-tagging-count\": input.TagCount.toString()\n          }), isSerializableHeaderValue(input.VersionId) && {\n            \"x-amz-fwd-header-x-amz-version-id\": input.VersionId\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\".concat(suffix.toLowerCase())] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/WriteGetObjectResponse\";\n          query = {\n            \"x-id\": \"WriteGetObjectResponse\"\n          };\n\n          if (input.Body !== undefined) {\n            body = input.Body;\n          }\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [4, context.endpoint()];\n\n        case 2:\n          resolvedHostname = _c.sent().hostname;\n\n          if (context.disableHostPrefix !== true) {\n            resolvedHostname = \"{RequestRoute}.\" + resolvedHostname;\n\n            if (input.RequestRoute === undefined) {\n              throw new Error(\"Empty value provided for input host prefix: RequestRoute.\");\n            }\n\n            resolvedHostname = resolvedHostname.replace(\"{RequestRoute}\", input.RequestRoute);\n\n            if (!__isValidHostname(resolvedHostname)) {\n              throw new Error(\"ValidationError: prefixed hostname must be hostname compatible.\");\n            }\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: resolvedHostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function deserializeAws_restXmlAbortMultipartUploadCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function deserializeAws_restXmlAbortMultipartUploadCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchUpload\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchUpload\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function deserializeAws_restXmlCompleteMultipartUploadCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            ChecksumCRC32: undefined,\n            ChecksumCRC32C: undefined,\n            ChecksumSHA1: undefined,\n            ChecksumSHA256: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Key: undefined,\n            Location: undefined,\n            RequestCharged: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = __expectString(data[\"Bucket\"]);\n          }\n\n          if (data[\"ChecksumCRC32\"] !== undefined) {\n            contents.ChecksumCRC32 = __expectString(data[\"ChecksumCRC32\"]);\n          }\n\n          if (data[\"ChecksumCRC32C\"] !== undefined) {\n            contents.ChecksumCRC32C = __expectString(data[\"ChecksumCRC32C\"]);\n          }\n\n          if (data[\"ChecksumSHA1\"] !== undefined) {\n            contents.ChecksumSHA1 = __expectString(data[\"ChecksumSHA1\"]);\n          }\n\n          if (data[\"ChecksumSHA256\"] !== undefined) {\n            contents.ChecksumSHA256 = __expectString(data[\"ChecksumSHA256\"]);\n          }\n\n          if (data[\"ETag\"] !== undefined) {\n            contents.ETag = __expectString(data[\"ETag\"]);\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = __expectString(data[\"Key\"]);\n          }\n\n          if (data[\"Location\"] !== undefined) {\n            contents.Location = __expectString(data[\"Location\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCopyObjectCommand = function deserializeAws_restXmlCopyObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlCopyObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyObjectResult: undefined,\n            CopySourceVersionId: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCopyObjectCommandError = function deserializeAws_restXmlCopyObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ObjectNotInActiveTierError\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateBucketCommand = function deserializeAws_restXmlCreateBucketCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlCreateBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Location: undefined\n          };\n\n          if (output.headers[\"location\"] !== undefined) {\n            contents.Location = output.headers[\"location\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateBucketCommandError = function deserializeAws_restXmlCreateBucketCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BucketAlreadyExists\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#BucketAlreadyExists\":\n              return [3, 2];\n\n            case \"BucketAlreadyOwnedByYou\":\n              return [3, 4];\n\n            case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          return [4, deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function deserializeAws_restXmlCreateMultipartUploadCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            ChecksumAlgorithm: undefined,\n            Key: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"]));\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-algorithm\"] !== undefined) {\n            contents.ChecksumAlgorithm = output.headers[\"x-amz-checksum-algorithm\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = __expectString(data[\"Bucket\"]);\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = __expectString(data[\"Key\"]);\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = __expectString(data[\"UploadId\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function deserializeAws_restXmlCreateMultipartUploadCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCommand = function deserializeAws_restXmlDeleteBucketCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCommandError = function deserializeAws_restXmlDeleteBucketCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function deserializeAws_restXmlDeleteBucketCorsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function deserializeAws_restXmlDeleteBucketCorsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function deserializeAws_restXmlDeleteBucketEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = function deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function deserializeAws_restXmlDeleteBucketLifecycleCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function deserializeAws_restXmlDeleteBucketOwnershipControlsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function deserializeAws_restXmlDeleteBucketPolicyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function deserializeAws_restXmlDeleteBucketReplicationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function deserializeAws_restXmlDeleteBucketTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function deserializeAws_restXmlDeleteBucketWebsiteCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectCommand = function deserializeAws_restXmlDeleteObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DeleteMarker: undefined,\n            RequestCharged: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectCommandError = function deserializeAws_restXmlDeleteObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectsCommand = function deserializeAws_restXmlDeleteObjectsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Deleted: undefined,\n            Errors: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.Deleted === \"\") {\n            contents.Deleted = [];\n          } else if (data[\"Deleted\"] !== undefined) {\n            contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n          }\n\n          if (data.Error === \"\") {\n            contents.Errors = [];\n          } else if (data[\"Error\"] !== undefined) {\n            contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectsCommandError = function deserializeAws_restXmlDeleteObjectsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function deserializeAws_restXmlDeleteObjectTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function deserializeAws_restXmlDeletePublicAccessBlockCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function deserializeAws_restXmlGetBucketAccelerateConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Status: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = __expectString(data[\"Status\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAclCommand = function deserializeAws_restXmlGetBucketAclCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          } else if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAclCommandError = function deserializeAws_restXmlGetBucketAclCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketCorsCommand = function deserializeAws_restXmlGetBucketCorsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CORSRules: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CORSRule === \"\") {\n            contents.CORSRules = [];\n          } else if (data[\"CORSRule\"] !== undefined) {\n            contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketCorsCommandError = function deserializeAws_restXmlGetBucketCorsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function deserializeAws_restXmlGetBucketEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ServerSideEncryptionConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function deserializeAws_restXmlGetBucketEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            IntelligentTieringConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = function deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function deserializeAws_restXmlGetBucketInventoryConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            InventoryConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function deserializeAws_restXmlGetBucketLifecycleConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Rules: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.Rule === \"\") {\n            contents.Rules = [];\n          } else if (data[\"Rule\"] !== undefined) {\n            contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLocationCommand = function deserializeAws_restXmlGetBucketLocationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LocationConstraint: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"LocationConstraint\"] !== undefined) {\n            contents.LocationConstraint = __expectString(data[\"LocationConstraint\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLocationCommandError = function deserializeAws_restXmlGetBucketLocationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function deserializeAws_restXmlGetBucketLoggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LoggingEnabled: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"LoggingEnabled\"] !== undefined) {\n            contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function deserializeAws_restXmlGetBucketLoggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function deserializeAws_restXmlGetBucketMetricsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MetricsConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function deserializeAws_restXmlGetBucketNotificationConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventBridgeConfiguration: undefined,\n            LambdaFunctionConfigurations: undefined,\n            QueueConfigurations: undefined,\n            TopicConfigurations: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"EventBridgeConfiguration\"] !== undefined) {\n            contents.EventBridgeConfiguration = deserializeAws_restXmlEventBridgeConfiguration(data[\"EventBridgeConfiguration\"], context);\n          }\n\n          if (data.CloudFunctionConfiguration === \"\") {\n            contents.LambdaFunctionConfigurations = [];\n          } else if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n            contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n          }\n\n          if (data.QueueConfiguration === \"\") {\n            contents.QueueConfigurations = [];\n          } else if (data[\"QueueConfiguration\"] !== undefined) {\n            contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n          }\n\n          if (data.TopicConfiguration === \"\") {\n            contents.TopicConfigurations = [];\n          } else if (data[\"TopicConfiguration\"] !== undefined) {\n            contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function deserializeAws_restXmlGetBucketOwnershipControlsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            OwnershipControls: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function deserializeAws_restXmlGetBucketPolicyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Policy: undefined\n          };\n          return [4, collectBodyString(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.Policy = __expectString(data);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function deserializeAws_restXmlGetBucketPolicyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function deserializeAws_restXmlGetBucketPolicyStatusCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PolicyStatus: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function deserializeAws_restXmlGetBucketReplicationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ReplicationConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function deserializeAws_restXmlGetBucketReplicationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function deserializeAws_restXmlGetBucketRequestPaymentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Payer: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Payer\"] !== undefined) {\n            contents.Payer = __expectString(data[\"Payer\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function deserializeAws_restXmlGetBucketTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          } else if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function deserializeAws_restXmlGetBucketTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function deserializeAws_restXmlGetBucketVersioningCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MFADelete: undefined,\n            Status: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"MfaDelete\"] !== undefined) {\n            contents.MFADelete = __expectString(data[\"MfaDelete\"]);\n          }\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = __expectString(data[\"Status\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function deserializeAws_restXmlGetBucketVersioningCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function deserializeAws_restXmlGetBucketWebsiteCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ErrorDocument: undefined,\n            IndexDocument: undefined,\n            RedirectAllRequestsTo: undefined,\n            RoutingRules: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"ErrorDocument\"] !== undefined) {\n            contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n          }\n\n          if (data[\"IndexDocument\"] !== undefined) {\n            contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n          }\n\n          if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n            contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n          }\n\n          if (data.RoutingRules === \"\") {\n            contents.RoutingRules = [];\n          } else if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n            contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function deserializeAws_restXmlGetBucketWebsiteCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectCommand = function deserializeAws_restXmlGetObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restXmlGetObjectCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        AcceptRanges: undefined,\n        Body: undefined,\n        BucketKeyEnabled: undefined,\n        CacheControl: undefined,\n        ChecksumCRC32: undefined,\n        ChecksumCRC32C: undefined,\n        ChecksumSHA1: undefined,\n        ChecksumSHA256: undefined,\n        ContentDisposition: undefined,\n        ContentEncoding: undefined,\n        ContentLanguage: undefined,\n        ContentLength: undefined,\n        ContentRange: undefined,\n        ContentType: undefined,\n        DeleteMarker: undefined,\n        ETag: undefined,\n        Expiration: undefined,\n        Expires: undefined,\n        LastModified: undefined,\n        Metadata: undefined,\n        MissingMeta: undefined,\n        ObjectLockLegalHoldStatus: undefined,\n        ObjectLockMode: undefined,\n        ObjectLockRetainUntilDate: undefined,\n        PartsCount: undefined,\n        ReplicationStatus: undefined,\n        RequestCharged: undefined,\n        Restore: undefined,\n        SSECustomerAlgorithm: undefined,\n        SSECustomerKeyMD5: undefined,\n        SSEKMSKeyId: undefined,\n        ServerSideEncryption: undefined,\n        StorageClass: undefined,\n        TagCount: undefined,\n        VersionId: undefined,\n        WebsiteRedirectLocation: undefined\n      };\n\n      if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n        contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n      }\n\n      if (output.headers[\"accept-ranges\"] !== undefined) {\n        contents.AcceptRanges = output.headers[\"accept-ranges\"];\n      }\n\n      if (output.headers[\"x-amz-expiration\"] !== undefined) {\n        contents.Expiration = output.headers[\"x-amz-expiration\"];\n      }\n\n      if (output.headers[\"x-amz-restore\"] !== undefined) {\n        contents.Restore = output.headers[\"x-amz-restore\"];\n      }\n\n      if (output.headers[\"last-modified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n      }\n\n      if (output.headers[\"content-length\"] !== undefined) {\n        contents.ContentLength = __strictParseLong(output.headers[\"content-length\"]);\n      }\n\n      if (output.headers[\"etag\"] !== undefined) {\n        contents.ETag = output.headers[\"etag\"];\n      }\n\n      if (output.headers[\"x-amz-checksum-crc32\"] !== undefined) {\n        contents.ChecksumCRC32 = output.headers[\"x-amz-checksum-crc32\"];\n      }\n\n      if (output.headers[\"x-amz-checksum-crc32c\"] !== undefined) {\n        contents.ChecksumCRC32C = output.headers[\"x-amz-checksum-crc32c\"];\n      }\n\n      if (output.headers[\"x-amz-checksum-sha1\"] !== undefined) {\n        contents.ChecksumSHA1 = output.headers[\"x-amz-checksum-sha1\"];\n      }\n\n      if (output.headers[\"x-amz-checksum-sha256\"] !== undefined) {\n        contents.ChecksumSHA256 = output.headers[\"x-amz-checksum-sha256\"];\n      }\n\n      if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n        contents.MissingMeta = __strictParseInt32(output.headers[\"x-amz-missing-meta\"]);\n      }\n\n      if (output.headers[\"x-amz-version-id\"] !== undefined) {\n        contents.VersionId = output.headers[\"x-amz-version-id\"];\n      }\n\n      if (output.headers[\"cache-control\"] !== undefined) {\n        contents.CacheControl = output.headers[\"cache-control\"];\n      }\n\n      if (output.headers[\"content-disposition\"] !== undefined) {\n        contents.ContentDisposition = output.headers[\"content-disposition\"];\n      }\n\n      if (output.headers[\"content-encoding\"] !== undefined) {\n        contents.ContentEncoding = output.headers[\"content-encoding\"];\n      }\n\n      if (output.headers[\"content-language\"] !== undefined) {\n        contents.ContentLanguage = output.headers[\"content-language\"];\n      }\n\n      if (output.headers[\"content-range\"] !== undefined) {\n        contents.ContentRange = output.headers[\"content-range\"];\n      }\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.ContentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"expires\"] !== undefined) {\n        contents.Expires = __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"]));\n      }\n\n      if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n        contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n        contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n        contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n        contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n        contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n        contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n      }\n\n      if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n        contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n      }\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n        contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n      }\n\n      if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n        contents.PartsCount = __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]);\n      }\n\n      if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n        contents.TagCount = __strictParseInt32(output.headers[\"x-amz-tagging-count\"]);\n      }\n\n      if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n        contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n      }\n\n      if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n        contents.ObjectLockRetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output.headers[\"x-amz-object-lock-retain-until-date\"]));\n      }\n\n      if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n        contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n      }\n\n      Object.keys(output.headers).forEach(function (header) {\n        if (contents.Metadata === undefined) {\n          contents.Metadata = {};\n        }\n\n        if (header.startsWith(\"x-amz-meta-\")) {\n          contents.Metadata[header.substring(11)] = output.headers[header];\n        }\n      });\n      data = output.body;\n      contents.Body = data;\n      return [2, Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectCommandError = function deserializeAws_restXmlGetObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidObjectState\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#InvalidObjectState\":\n              return [3, 2];\n\n            case \"NoSuchKey\":\n              return [3, 4];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          return [4, deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectAclCommand = function deserializeAws_restXmlGetObjectAclCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          } else if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectAclCommandError = function deserializeAws_restXmlGetObjectAclCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectAttributesCommand = function deserializeAws_restXmlGetObjectAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Checksum: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            LastModified: undefined,\n            ObjectParts: undefined,\n            ObjectSize: undefined,\n            RequestCharged: undefined,\n            StorageClass: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n          }\n\n          if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Checksum\"] !== undefined) {\n            contents.Checksum = deserializeAws_restXmlChecksum(data[\"Checksum\"], context);\n          }\n\n          if (data[\"ETag\"] !== undefined) {\n            contents.ETag = __expectString(data[\"ETag\"]);\n          }\n\n          if (data[\"ObjectParts\"] !== undefined) {\n            contents.ObjectParts = deserializeAws_restXmlGetObjectAttributesParts(data[\"ObjectParts\"], context);\n          }\n\n          if (data[\"ObjectSize\"] !== undefined) {\n            contents.ObjectSize = __strictParseLong(data[\"ObjectSize\"]);\n          }\n\n          if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = __expectString(data[\"StorageClass\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectAttributesCommandError = function deserializeAws_restXmlGetObjectAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function deserializeAws_restXmlGetObjectLegalHoldCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LegalHold: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function deserializeAws_restXmlGetObjectLockConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ObjectLockConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function deserializeAws_restXmlGetObjectRetentionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Retention: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function deserializeAws_restXmlGetObjectRetentionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function deserializeAws_restXmlGetObjectTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          } else if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function deserializeAws_restXmlGetObjectTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function deserializeAws_restXmlGetObjectTorrentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Body: undefined,\n        RequestCharged: undefined\n      };\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      data = output.body;\n      contents.Body = data;\n      return [2, Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function deserializeAws_restXmlGetObjectTorrentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function deserializeAws_restXmlGetPublicAccessBlockCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PublicAccessBlockConfiguration: undefined\n          };\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadBucketCommand = function deserializeAws_restXmlHeadBucketCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlHeadBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadBucketCommandError = function deserializeAws_restXmlHeadBucketCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NotFound\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NotFound\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlNotFoundResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadObjectCommand = function deserializeAws_restXmlHeadObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlHeadObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AcceptRanges: undefined,\n            ArchiveStatus: undefined,\n            BucketKeyEnabled: undefined,\n            CacheControl: undefined,\n            ChecksumCRC32: undefined,\n            ChecksumCRC32C: undefined,\n            ChecksumSHA1: undefined,\n            ChecksumSHA256: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n          }\n\n          if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n          }\n\n          if (output.headers[\"x-amz-archive-status\"] !== undefined) {\n            contents.ArchiveStatus = output.headers[\"x-amz-archive-status\"];\n          }\n\n          if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n          }\n\n          if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = __strictParseLong(output.headers[\"content-length\"]);\n          }\n\n          if (output.headers[\"x-amz-checksum-crc32\"] !== undefined) {\n            contents.ChecksumCRC32 = output.headers[\"x-amz-checksum-crc32\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-crc32c\"] !== undefined) {\n            contents.ChecksumCRC32C = output.headers[\"x-amz-checksum-crc32c\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-sha1\"] !== undefined) {\n            contents.ChecksumSHA1 = output.headers[\"x-amz-checksum-sha1\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-sha256\"] !== undefined) {\n            contents.ChecksumSHA256 = output.headers[\"x-amz-checksum-sha256\"];\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = __strictParseInt32(output.headers[\"x-amz-missing-meta\"]);\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n          }\n\n          if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n          }\n\n          if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n          }\n\n          if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n          }\n\n          if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n          }\n\n          if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"]));\n          }\n\n          if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n          }\n\n          if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]);\n          }\n\n          if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n          }\n\n          if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output.headers[\"x-amz-object-lock-retain-until-date\"]));\n          }\n\n          if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n          }\n\n          Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n              contents.Metadata = {};\n            }\n\n            if (header.startsWith(\"x-amz-meta-\")) {\n              contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n          });\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadObjectCommandError = function deserializeAws_restXmlHeadObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NotFound\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NotFound\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlNotFoundResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfigurationList: undefined,\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.AnalyticsConfiguration === \"\") {\n            contents.AnalyticsConfigurationList = [];\n          } else if (data[\"AnalyticsConfiguration\"] !== undefined) {\n            contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IntelligentTieringConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data.IntelligentTieringConfiguration === \"\") {\n            contents.IntelligentTieringConfigurationList = [];\n          } else if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n            contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList(__getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]), context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = function deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function deserializeAws_restXmlListBucketInventoryConfigurationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            InventoryConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data.InventoryConfiguration === \"\") {\n            contents.InventoryConfigurationList = [];\n          } else if (data[\"InventoryConfiguration\"] !== undefined) {\n            contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function deserializeAws_restXmlListBucketMetricsConfigurationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            MetricsConfigurationList: undefined,\n            NextContinuationToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data.MetricsConfiguration === \"\") {\n            contents.MetricsConfigurationList = [];\n          } else if (data[\"MetricsConfiguration\"] !== undefined) {\n            contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketsCommand = function deserializeAws_restXmlListBucketsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListBucketsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Buckets: undefined,\n            Owner: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.Buckets === \"\") {\n            contents.Buckets = [];\n          } else if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n            contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketsCommandError = function deserializeAws_restXmlListBucketsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function deserializeAws_restXmlListMultipartUploadsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            CommonPrefixes: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxUploads: undefined,\n            NextKeyMarker: undefined,\n            NextUploadIdMarker: undefined,\n            Prefix: undefined,\n            UploadIdMarker: undefined,\n            Uploads: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = __expectString(data[\"Bucket\"]);\n          }\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          } else if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = __expectString(data[\"Delimiter\"]);\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = __expectString(data[\"EncodingType\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n          }\n\n          if (data[\"MaxUploads\"] !== undefined) {\n            contents.MaxUploads = __strictParseInt32(data[\"MaxUploads\"]);\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n          }\n\n          if (data[\"NextUploadIdMarker\"] !== undefined) {\n            contents.NextUploadIdMarker = __expectString(data[\"NextUploadIdMarker\"]);\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = __expectString(data[\"Prefix\"]);\n          }\n\n          if (data[\"UploadIdMarker\"] !== undefined) {\n            contents.UploadIdMarker = __expectString(data[\"UploadIdMarker\"]);\n          }\n\n          if (data.Upload === \"\") {\n            contents.Uploads = [];\n          } else if (data[\"Upload\"] !== undefined) {\n            contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function deserializeAws_restXmlListMultipartUploadsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsCommand = function deserializeAws_restXmlListObjectsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            Marker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextMarker: undefined,\n            Prefix: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          } else if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          } else if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = __expectString(data[\"Delimiter\"]);\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = __expectString(data[\"EncodingType\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"Marker\"] !== undefined) {\n            contents.Marker = __expectString(data[\"Marker\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = __expectString(data[\"Name\"]);\n          }\n\n          if (data[\"NextMarker\"] !== undefined) {\n            contents.NextMarker = __expectString(data[\"NextMarker\"]);\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = __expectString(data[\"Prefix\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsCommandError = function deserializeAws_restXmlListObjectsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsV2Command = function deserializeAws_restXmlListObjectsV2Command(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            ContinuationToken: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyCount: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextContinuationToken: undefined,\n            Prefix: undefined,\n            StartAfter: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          } else if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          } else if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = __expectString(data[\"Delimiter\"]);\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = __expectString(data[\"EncodingType\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"KeyCount\"] !== undefined) {\n            contents.KeyCount = __strictParseInt32(data[\"KeyCount\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = __expectString(data[\"Name\"]);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = __expectString(data[\"Prefix\"]);\n          }\n\n          if (data[\"StartAfter\"] !== undefined) {\n            contents.StartAfter = __expectString(data[\"StartAfter\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsV2CommandError = function deserializeAws_restXmlListObjectsV2CommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectVersionsCommand = function deserializeAws_restXmlListObjectVersionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            DeleteMarkers: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextKeyMarker: undefined,\n            NextVersionIdMarker: undefined,\n            Prefix: undefined,\n            VersionIdMarker: undefined,\n            Versions: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          } else if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.DeleteMarker === \"\") {\n            contents.DeleteMarkers = [];\n          } else if (data[\"DeleteMarker\"] !== undefined) {\n            contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = __expectString(data[\"Delimiter\"]);\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = __expectString(data[\"EncodingType\"]);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = __expectString(data[\"Name\"]);\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n          }\n\n          if (data[\"NextVersionIdMarker\"] !== undefined) {\n            contents.NextVersionIdMarker = __expectString(data[\"NextVersionIdMarker\"]);\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = __expectString(data[\"Prefix\"]);\n          }\n\n          if (data[\"VersionIdMarker\"] !== undefined) {\n            contents.VersionIdMarker = __expectString(data[\"VersionIdMarker\"]);\n          }\n\n          if (data.Version === \"\") {\n            contents.Versions = [];\n          } else if (data[\"Version\"] !== undefined) {\n            contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectVersionsCommandError = function deserializeAws_restXmlListObjectVersionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListPartsCommand = function deserializeAws_restXmlListPartsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlListPartsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            ChecksumAlgorithm: undefined,\n            Initiator: undefined,\n            IsTruncated: undefined,\n            Key: undefined,\n            MaxParts: undefined,\n            NextPartNumberMarker: undefined,\n            Owner: undefined,\n            PartNumberMarker: undefined,\n            Parts: undefined,\n            RequestCharged: undefined,\n            StorageClass: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"]));\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = __expectString(data[\"Bucket\"]);\n          }\n\n          if (data[\"ChecksumAlgorithm\"] !== undefined) {\n            contents.ChecksumAlgorithm = __expectString(data[\"ChecksumAlgorithm\"]);\n          }\n\n          if (data[\"Initiator\"] !== undefined) {\n            contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = __expectString(data[\"Key\"]);\n          }\n\n          if (data[\"MaxParts\"] !== undefined) {\n            contents.MaxParts = __strictParseInt32(data[\"MaxParts\"]);\n          }\n\n          if (data[\"NextPartNumberMarker\"] !== undefined) {\n            contents.NextPartNumberMarker = __expectString(data[\"NextPartNumberMarker\"]);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          if (data[\"PartNumberMarker\"] !== undefined) {\n            contents.PartNumberMarker = __expectString(data[\"PartNumberMarker\"]);\n          }\n\n          if (data.Part === \"\") {\n            contents.Parts = [];\n          } else if (data[\"Part\"] !== undefined) {\n            contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n          }\n\n          if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = __expectString(data[\"StorageClass\"]);\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = __expectString(data[\"UploadId\"]);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListPartsCommandError = function deserializeAws_restXmlListPartsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function deserializeAws_restXmlPutBucketAccelerateConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAclCommand = function deserializeAws_restXmlPutBucketAclCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAclCommandError = function deserializeAws_restXmlPutBucketAclCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketCorsCommand = function deserializeAws_restXmlPutBucketCorsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketCorsCommandError = function deserializeAws_restXmlPutBucketCorsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function deserializeAws_restXmlPutBucketEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function deserializeAws_restXmlPutBucketEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = function deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function deserializeAws_restXmlPutBucketLifecycleConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function deserializeAws_restXmlPutBucketLoggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function deserializeAws_restXmlPutBucketLoggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function deserializeAws_restXmlPutBucketMetricsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function deserializeAws_restXmlPutBucketNotificationConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function deserializeAws_restXmlPutBucketOwnershipControlsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function deserializeAws_restXmlPutBucketPolicyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function deserializeAws_restXmlPutBucketPolicyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function deserializeAws_restXmlPutBucketReplicationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function deserializeAws_restXmlPutBucketReplicationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function deserializeAws_restXmlPutBucketRequestPaymentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function deserializeAws_restXmlPutBucketTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function deserializeAws_restXmlPutBucketTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function deserializeAws_restXmlPutBucketVersioningCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function deserializeAws_restXmlPutBucketVersioningCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function deserializeAws_restXmlPutBucketWebsiteCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function deserializeAws_restXmlPutBucketWebsiteCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectCommand = function deserializeAws_restXmlPutObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ChecksumCRC32: undefined,\n            ChecksumCRC32C: undefined,\n            ChecksumSHA1: undefined,\n            ChecksumSHA256: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-crc32\"] !== undefined) {\n            contents.ChecksumCRC32 = output.headers[\"x-amz-checksum-crc32\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-crc32c\"] !== undefined) {\n            contents.ChecksumCRC32C = output.headers[\"x-amz-checksum-crc32c\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-sha1\"] !== undefined) {\n            contents.ChecksumSHA1 = output.headers[\"x-amz-checksum-sha1\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-sha256\"] !== undefined) {\n            contents.ChecksumSHA256 = output.headers[\"x-amz-checksum-sha256\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectCommandError = function deserializeAws_restXmlPutObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectAclCommand = function deserializeAws_restXmlPutObjectAclCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectAclCommandError = function deserializeAws_restXmlPutObjectAclCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function deserializeAws_restXmlPutObjectLegalHoldCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function deserializeAws_restXmlPutObjectLockConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function deserializeAws_restXmlPutObjectRetentionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function deserializeAws_restXmlPutObjectRetentionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function deserializeAws_restXmlPutObjectTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function deserializeAws_restXmlPutObjectTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function deserializeAws_restXmlPutPublicAccessBlockCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlRestoreObjectCommand = function deserializeAws_restXmlRestoreObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined,\n            RestoreOutputPath: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n            contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRestoreObjectCommandError = function deserializeAws_restXmlRestoreObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ObjectAlreadyInActiveTierError\":\n              return [3, 2];\n\n            case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n              return [3, 2];\n          }\n\n          return [3, 4];\n\n        case 2:\n          return [4, deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlSelectObjectContentCommand = function deserializeAws_restXmlSelectObjectContentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Payload: undefined\n      };\n      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var eventName, eventHeaders, eventMessage, parsedEvent;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                eventName = Object.keys(event)[0];\n                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                  accummulator[curr[0]] = curr[1].value;\n                  return accummulator;\n                }, {});\n                eventMessage = {\n                  headers: eventHeaders,\n                  body: event[eventName].body\n                };\n                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);\n                return [4, deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n\n              case 1:\n                return [2, _b.sent()];\n            }\n          });\n        });\n      });\n      contents.Payload = data;\n      return [2, Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentCommandError = function deserializeAws_restXmlSelectObjectContentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCommand = function deserializeAws_restXmlUploadPartCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlUploadPartCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ChecksumCRC32: undefined,\n            ChecksumCRC32C: undefined,\n            ChecksumSHA1: undefined,\n            ChecksumSHA256: undefined,\n            ETag: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-crc32\"] !== undefined) {\n            contents.ChecksumCRC32 = output.headers[\"x-amz-checksum-crc32\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-crc32c\"] !== undefined) {\n            contents.ChecksumCRC32C = output.headers[\"x-amz-checksum-crc32c\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-sha1\"] !== undefined) {\n            contents.ChecksumSHA1 = output.headers[\"x-amz-checksum-sha1\"];\n          }\n\n          if (output.headers[\"x-amz-checksum-sha256\"] !== undefined) {\n            contents.ChecksumSHA256 = output.headers[\"x-amz-checksum-sha256\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCommandError = function deserializeAws_restXmlUploadPartCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCopyCommand = function deserializeAws_restXmlUploadPartCopyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyPartResult: undefined,\n            CopySourceVersionId: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          _a = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.sent()]);\n          contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCopyCommandError = function deserializeAws_restXmlUploadPartCopyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlWriteGetObjectResponseCommand = function deserializeAws_restXmlWriteGetObjectResponseCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlWriteGetObjectResponseCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlWriteGetObjectResponseCommandError = function deserializeAws_restXmlWriteGetObjectResponseCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              response = new __BaseException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n              throw __decorateServiceException(response, parsedBody);\n          }\n\n          return [2];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function deserializeAws_restXmlSelectObjectContentEventStream_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          if (!(output[\"Records\"] !== undefined)) return [3, 2];\n          _a = {};\n          return [4, deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n\n        case 1:\n          return [2, (_a.Records = _f.sent(), _a)];\n\n        case 2:\n          if (!(output[\"Stats\"] !== undefined)) return [3, 4];\n          _b = {};\n          return [4, deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n\n        case 3:\n          return [2, (_b.Stats = _f.sent(), _b)];\n\n        case 4:\n          if (!(output[\"Progress\"] !== undefined)) return [3, 6];\n          _c = {};\n          return [4, deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n\n        case 5:\n          return [2, (_c.Progress = _f.sent(), _c)];\n\n        case 6:\n          if (!(output[\"Cont\"] !== undefined)) return [3, 8];\n          _d = {};\n          return [4, deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n\n        case 7:\n          return [2, (_d.Cont = _f.sent(), _d)];\n\n        case 8:\n          if (!(output[\"End\"] !== undefined)) return [3, 10];\n          _e = {};\n          return [4, deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n\n        case 9:\n          return [2, (_e.End = _f.sent(), _e)];\n\n        case 10:\n          return [2, {\n            $unknown: output\n          }];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlContinuationEvent_event = function deserializeAws_restXmlContinuationEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlEndEvent_event = function deserializeAws_restXmlEndEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlProgressEvent_event = function deserializeAws_restXmlProgressEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRecordsEvent_event = function deserializeAws_restXmlRecordsEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      contents.Payload = output.body;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlStatsEvent_event = function deserializeAws_restXmlStatsEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n      exception = new BucketAlreadyExists(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n      exception = new BucketAlreadyOwnedByYou(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlInvalidObjectStateResponse = function deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n\n      if (data[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = __expectString(data[\"AccessTier\"]);\n      }\n\n      if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(data[\"StorageClass\"]);\n      }\n\n      exception = new InvalidObjectState(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchBucketResponse = function deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n      exception = new NoSuchBucket(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchKeyResponse = function deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n      exception = new NoSuchKey(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchUploadResponse = function deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n      exception = new NoSuchUpload(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNotFoundResponse = function deserializeAws_restXmlNotFoundResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n      exception = new NotFound(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n      exception = new ObjectAlreadyInActiveTierError(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n      exception = new ObjectNotInActiveTierError(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function serializeAws_restXmlAbortIncompleteMultipartUpload(input, context) {\n  var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n\n  if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {\n    var node = new __XmlNode(\"DaysAfterInitiation\").addChildNode(new __XmlText(String(input.DaysAfterInitiation))).withName(\"DaysAfterInitiation\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccelerateConfiguration = function serializeAws_restXmlAccelerateConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlPolicy = function serializeAws_restXmlAccessControlPolicy(input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n\n  if (input.Grants !== undefined && input.Grants !== null) {\n    var nodes = serializeAws_restXmlGrants(input.Grants, context);\n    var containerNode_1 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_1.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_1);\n  }\n\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlTranslation = function serializeAws_restXmlAccessControlTranslation(input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAllowedHeaders = function serializeAws_restXmlAllowedHeaders(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedMethods = function serializeAws_restXmlAllowedMethods(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedOrigins = function serializeAws_restXmlAllowedOrigins(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAnalyticsAndOperator = function serializeAws_restXmlAnalyticsAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsConfiguration = function serializeAws_restXmlAnalyticsConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsExportDestination = function serializeAws_restXmlAnalyticsExportDestination(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsFilter = function serializeAws_restXmlAnalyticsFilter(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n  AnalyticsFilter.visit(input, {\n    Prefix: function Prefix(value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function Tag(value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function And(value) {\n      var node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function _(name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function serializeAws_restXmlAnalyticsS3BucketDestination(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.BucketAccountId)).withName(\"BucketAccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLifecycleConfiguration = function serializeAws_restXmlBucketLifecycleConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLoggingStatus = function serializeAws_restXmlBucketLoggingStatus(input, context) {\n  var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n\n  if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {\n    var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedMultipartUpload = function serializeAws_restXmlCompletedMultipartUpload(input, context) {\n  var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n\n  if (input.Parts !== undefined && input.Parts !== null) {\n    var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Part\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPart = function serializeAws_restXmlCompletedPart(input, context) {\n  var bodyNode = new __XmlNode(\"CompletedPart\");\n\n  if (input.ETag !== undefined && input.ETag !== null) {\n    var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ChecksumCRC32 !== undefined && input.ChecksumCRC32 !== null) {\n    var node = new __XmlNode(\"ChecksumCRC32\").addChildNode(new __XmlText(input.ChecksumCRC32)).withName(\"ChecksumCRC32\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ChecksumCRC32C !== undefined && input.ChecksumCRC32C !== null) {\n    var node = new __XmlNode(\"ChecksumCRC32C\").addChildNode(new __XmlText(input.ChecksumCRC32C)).withName(\"ChecksumCRC32C\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ChecksumSHA1 !== undefined && input.ChecksumSHA1 !== null) {\n    var node = new __XmlNode(\"ChecksumSHA1\").addChildNode(new __XmlText(input.ChecksumSHA1)).withName(\"ChecksumSHA1\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ChecksumSHA256 !== undefined && input.ChecksumSHA256 !== null) {\n    var node = new __XmlNode(\"ChecksumSHA256\").addChildNode(new __XmlText(input.ChecksumSHA256)).withName(\"ChecksumSHA256\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.PartNumber !== undefined && input.PartNumber !== null) {\n    var node = new __XmlNode(\"PartNumber\").addChildNode(new __XmlText(String(input.PartNumber))).withName(\"PartNumber\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPartList = function serializeAws_restXmlCompletedPartList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlCompletedPart(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCondition = function serializeAws_restXmlCondition(input, context) {\n  var bodyNode = new __XmlNode(\"Condition\");\n\n  if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {\n    var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\").addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals)).withName(\"HttpErrorCodeReturnedEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {\n    var node = new __XmlNode(\"KeyPrefixEquals\").addChildNode(new __XmlText(input.KeyPrefixEquals)).withName(\"KeyPrefixEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSConfiguration = function serializeAws_restXmlCORSConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"CORSConfiguration\");\n\n  if (input.CORSRules !== undefined && input.CORSRules !== null) {\n    var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CORSRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRule = function serializeAws_restXmlCORSRule(input, context) {\n  var bodyNode = new __XmlNode(\"CORSRule\");\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {\n    var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {\n    var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedMethod\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {\n    var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedOrigin\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {\n    var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"ExposeHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {\n    var node = new __XmlNode(\"MaxAgeSeconds\").addChildNode(new __XmlText(String(input.MaxAgeSeconds))).withName(\"MaxAgeSeconds\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRules = function serializeAws_restXmlCORSRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlCORSRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCreateBucketConfiguration = function serializeAws_restXmlCreateBucketConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n\n  if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {\n    var node = new __XmlNode(\"BucketLocationConstraint\").addChildNode(new __XmlText(input.LocationConstraint)).withName(\"LocationConstraint\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVInput = function serializeAws_restXmlCSVInput(input, context) {\n  var bodyNode = new __XmlNode(\"CSVInput\");\n\n  if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {\n    var node = new __XmlNode(\"FileHeaderInfo\").addChildNode(new __XmlText(input.FileHeaderInfo)).withName(\"FileHeaderInfo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Comments !== undefined && input.Comments !== null) {\n    var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {\n    var node = new __XmlNode(\"AllowQuotedRecordDelimiter\").addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter))).withName(\"AllowQuotedRecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVOutput = function serializeAws_restXmlCSVOutput(input, context) {\n  var bodyNode = new __XmlNode(\"CSVOutput\");\n\n  if (input.QuoteFields !== undefined && input.QuoteFields !== null) {\n    var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDefaultRetention = function serializeAws_restXmlDefaultRetention(input, context) {\n  var bodyNode = new __XmlNode(\"DefaultRetention\");\n\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Years !== undefined && input.Years !== null) {\n    var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDelete = function serializeAws_restXmlDelete(input, context) {\n  var bodyNode = new __XmlNode(\"Delete\");\n\n  if (input.Objects !== undefined && input.Objects !== null) {\n    var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Object\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Quiet !== undefined && input.Quiet !== null) {\n    var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDeleteMarkerReplication = function serializeAws_restXmlDeleteMarkerReplication(input, context) {\n  var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"DeleteMarkerReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDestination = function serializeAws_restXmlDestination(input, context) {\n  var bodyNode = new __XmlNode(\"Destination\");\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Account !== undefined && input.Account !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {\n    var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {\n    var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {\n    var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Metrics !== undefined && input.Metrics !== null) {\n    var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryption = function serializeAws_restXmlEncryption(input, context) {\n  var bodyNode = new __XmlNode(\"Encryption\");\n\n  if (input.EncryptionType !== undefined && input.EncryptionType !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.EncryptionType)).withName(\"EncryptionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSContext !== undefined && input.KMSContext !== null) {\n    var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryptionConfiguration = function serializeAws_restXmlEncryptionConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n\n  if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {\n    var node = new __XmlNode(\"ReplicaKmsKeyID\").addChildNode(new __XmlText(input.ReplicaKmsKeyID)).withName(\"ReplicaKmsKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlErrorDocument = function serializeAws_restXmlErrorDocument(input, context) {\n  var bodyNode = new __XmlNode(\"ErrorDocument\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEventBridgeConfiguration = function serializeAws_restXmlEventBridgeConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"EventBridgeConfiguration\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEventList = function serializeAws_restXmlEventList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlExistingObjectReplication = function serializeAws_restXmlExistingObjectReplication(input, context) {\n  var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExistingObjectReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlExposeHeaders = function serializeAws_restXmlExposeHeaders(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlFilterRule = function serializeAws_restXmlFilterRule(input, context) {\n  var bodyNode = new __XmlNode(\"FilterRule\");\n\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlFilterRuleList = function serializeAws_restXmlFilterRuleList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlFilterRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlGlacierJobParameters = function serializeAws_restXmlGlacierJobParameters(input, context) {\n  var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrant = function serializeAws_restXmlGrant(input, context) {\n  var bodyNode = new __XmlNode(\"Grant\");\n\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrantee = function serializeAws_restXmlGrantee(input, context) {\n  var bodyNode = new __XmlNode(\"Grantee\");\n\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EmailAddress !== undefined && input.EmailAddress !== null) {\n    var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.URI !== undefined && input.URI !== null) {\n    var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined && input.Type !== null) {\n    bodyNode.addAttribute(\"xsi:type\", input.Type);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrants = function serializeAws_restXmlGrants(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlIndexDocument = function serializeAws_restXmlIndexDocument(input, context) {\n  var bodyNode = new __XmlNode(\"IndexDocument\");\n\n  if (input.Suffix !== undefined && input.Suffix !== null) {\n    var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInputSerialization = function serializeAws_restXmlInputSerialization(input, context) {\n  var bodyNode = new __XmlNode(\"InputSerialization\");\n\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CompressionType !== undefined && input.CompressionType !== null) {\n    var node = new __XmlNode(\"CompressionType\").addChildNode(new __XmlText(input.CompressionType)).withName(\"CompressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Parquet !== undefined && input.Parquet !== null) {\n    var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringAndOperator = function serializeAws_restXmlIntelligentTieringAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringConfiguration = function serializeAws_restXmlIntelligentTieringConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"IntelligentTieringId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"IntelligentTieringStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tierings !== undefined && input.Tierings !== null) {\n    var nodes = serializeAws_restXmlTieringList(input.Tierings, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tiering\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringFilter = function serializeAws_restXmlIntelligentTieringFilter(input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tag !== undefined && input.Tag !== null) {\n    var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.And !== undefined && input.And !== null) {\n    var node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryConfiguration = function serializeAws_restXmlInventoryConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IsEnabled !== undefined && input.IsEnabled !== null) {\n    var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {\n    var node = new __XmlNode(\"InventoryIncludedObjectVersions\").addChildNode(new __XmlText(input.IncludedObjectVersions)).withName(\"IncludedObjectVersions\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OptionalFields !== undefined && input.OptionalFields !== null) {\n    var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n    var containerNode_2 = new __XmlNode(\"OptionalFields\");\n    nodes.map(function (node) {\n      containerNode_2.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_2);\n  }\n\n  if (input.Schedule !== undefined && input.Schedule !== null) {\n    var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryDestination = function serializeAws_restXmlInventoryDestination(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryDestination\");\n\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryEncryption = function serializeAws_restXmlInventoryEncryption(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryEncryption\");\n\n  if (input.SSES3 !== undefined && input.SSES3 !== null) {\n    var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SSEKMS !== undefined && input.SSEKMS !== null) {\n    var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryFilter = function serializeAws_restXmlInventoryFilter(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryFilter\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryOptionalFields = function serializeAws_restXmlInventoryOptionalFields(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n    return node.withName(\"Field\");\n  });\n};\n\nvar serializeAws_restXmlInventoryS3BucketDestination = function serializeAws_restXmlInventoryS3BucketDestination(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n\n  if (input.AccountId !== undefined && input.AccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventorySchedule = function serializeAws_restXmlInventorySchedule(input, context) {\n  var bodyNode = new __XmlNode(\"InventorySchedule\");\n\n  if (input.Frequency !== undefined && input.Frequency !== null) {\n    var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONInput = function serializeAws_restXmlJSONInput(input, context) {\n  var bodyNode = new __XmlNode(\"JSONInput\");\n\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONOutput = function serializeAws_restXmlJSONOutput(input, context) {\n  var bodyNode = new __XmlNode(\"JSONOutput\");\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfiguration = function serializeAws_restXmlLambdaFunctionConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {\n    var node = new __XmlNode(\"LambdaFunctionArn\").addChildNode(new __XmlText(input.LambdaFunctionArn)).withName(\"CloudFunction\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function serializeAws_restXmlLambdaFunctionConfigurationList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLifecycleExpiration = function serializeAws_restXmlLifecycleExpiration(input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {\n    var node = new __XmlNode(\"ExpiredObjectDeleteMarker\").addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker))).withName(\"ExpiredObjectDeleteMarker\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRule = function serializeAws_restXmlLifecycleRule(input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRule\");\n\n  if (input.Expiration !== undefined && input.Expiration !== null) {\n    var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Transitions !== undefined && input.Transitions !== null) {\n    var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Transition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {\n    var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"NoncurrentVersionTransition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {\n    var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {\n    var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleAndOperator = function serializeAws_restXmlLifecycleRuleAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.ObjectSizeGreaterThan !== undefined && input.ObjectSizeGreaterThan !== null) {\n    var node = new __XmlNode(\"ObjectSizeGreaterThanBytes\").addChildNode(new __XmlText(String(input.ObjectSizeGreaterThan))).withName(\"ObjectSizeGreaterThan\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ObjectSizeLessThan !== undefined && input.ObjectSizeLessThan !== null) {\n    var node = new __XmlNode(\"ObjectSizeLessThanBytes\").addChildNode(new __XmlText(String(input.ObjectSizeLessThan))).withName(\"ObjectSizeLessThan\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleFilter = function serializeAws_restXmlLifecycleRuleFilter(input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n  LifecycleRuleFilter.visit(input, {\n    Prefix: function Prefix(value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function Tag(value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    ObjectSizeGreaterThan: function ObjectSizeGreaterThan(value) {\n      var node = new __XmlNode(\"ObjectSizeGreaterThanBytes\").addChildNode(new __XmlText(String(value))).withName(\"ObjectSizeGreaterThan\");\n      bodyNode.addChildNode(node);\n    },\n    ObjectSizeLessThan: function ObjectSizeLessThan(value) {\n      var node = new __XmlNode(\"ObjectSizeLessThanBytes\").addChildNode(new __XmlText(String(value))).withName(\"ObjectSizeLessThan\");\n      bodyNode.addChildNode(node);\n    },\n    And: function And(value) {\n      var node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function _(name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRules = function serializeAws_restXmlLifecycleRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlLifecycleRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLoggingEnabled = function serializeAws_restXmlLoggingEnabled(input, context) {\n  var bodyNode = new __XmlNode(\"LoggingEnabled\");\n\n  if (input.TargetBucket !== undefined && input.TargetBucket !== null) {\n    var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TargetGrants !== undefined && input.TargetGrants !== null) {\n    var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n    var containerNode_3 = new __XmlNode(\"TargetGrants\");\n    nodes.map(function (node) {\n      containerNode_3.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_3);\n  }\n\n  if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {\n    var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetadataEntry = function serializeAws_restXmlMetadataEntry(input, context) {\n  var bodyNode = new __XmlNode(\"MetadataEntry\");\n\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetrics = function serializeAws_restXmlMetrics(input, context) {\n  var bodyNode = new __XmlNode(\"Metrics\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EventThreshold !== undefined && input.EventThreshold !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsAndOperator = function serializeAws_restXmlMetricsAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AccessPointArn !== undefined && input.AccessPointArn !== null) {\n    var node = new __XmlNode(\"AccessPointArn\").addChildNode(new __XmlText(input.AccessPointArn)).withName(\"AccessPointArn\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsConfiguration = function serializeAws_restXmlMetricsConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsFilter = function serializeAws_restXmlMetricsFilter(input, context) {\n  var bodyNode = new __XmlNode(\"MetricsFilter\");\n  MetricsFilter.visit(input, {\n    Prefix: function Prefix(value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function Tag(value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    AccessPointArn: function AccessPointArn(value) {\n      var node = new __XmlNode(\"AccessPointArn\").addChildNode(new __XmlText(value)).withName(\"AccessPointArn\");\n      bodyNode.addChildNode(node);\n    },\n    And: function And(value) {\n      var node = serializeAws_restXmlMetricsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function _(name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionExpiration = function serializeAws_restXmlNoncurrentVersionExpiration(input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.NewerNoncurrentVersions !== undefined && input.NewerNoncurrentVersions !== null) {\n    var node = new __XmlNode(\"VersionCount\").addChildNode(new __XmlText(String(input.NewerNoncurrentVersions))).withName(\"NewerNoncurrentVersions\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransition = function serializeAws_restXmlNoncurrentVersionTransition(input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.NewerNoncurrentVersions !== undefined && input.NewerNoncurrentVersions !== null) {\n    var node = new __XmlNode(\"VersionCount\").addChildNode(new __XmlText(String(input.NewerNoncurrentVersions))).withName(\"NewerNoncurrentVersions\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function serializeAws_restXmlNoncurrentVersionTransitionList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlNotificationConfiguration = function serializeAws_restXmlNotificationConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n\n  if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {\n    var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"TopicConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {\n    var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"QueueConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {\n    var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CloudFunctionConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.EventBridgeConfiguration !== undefined && input.EventBridgeConfiguration !== null) {\n    var node = serializeAws_restXmlEventBridgeConfiguration(input.EventBridgeConfiguration, context).withName(\"EventBridgeConfiguration\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNotificationConfigurationFilter = function serializeAws_restXmlNotificationConfigurationFilter(input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifier = function serializeAws_restXmlObjectIdentifier(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.VersionId !== undefined && input.VersionId !== null) {\n    var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifierList = function serializeAws_restXmlObjectIdentifierList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlObjectIdentifier(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlObjectLockConfiguration = function serializeAws_restXmlObjectLockConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n\n  if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {\n    var node = new __XmlNode(\"ObjectLockEnabled\").addChildNode(new __XmlText(input.ObjectLockEnabled)).withName(\"ObjectLockEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rule !== undefined && input.Rule !== null) {\n    var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockLegalHold = function serializeAws_restXmlObjectLockLegalHold(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ObjectLockLegalHoldStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRetention = function serializeAws_restXmlObjectLockRetention(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\")).withName(\"RetainUntilDate\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRule = function serializeAws_restXmlObjectLockRule(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRule\");\n\n  if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {\n    var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputLocation = function serializeAws_restXmlOutputLocation(input, context) {\n  var bodyNode = new __XmlNode(\"OutputLocation\");\n\n  if (input.S3 !== undefined && input.S3 !== null) {\n    var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputSerialization = function serializeAws_restXmlOutputSerialization(input, context) {\n  var bodyNode = new __XmlNode(\"OutputSerialization\");\n\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwner = function serializeAws_restXmlOwner(input, context) {\n  var bodyNode = new __XmlNode(\"Owner\");\n\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControls = function serializeAws_restXmlOwnershipControls(input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControls\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControlsRule = function serializeAws_restXmlOwnershipControlsRule(input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n\n  if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {\n    var node = new __XmlNode(\"ObjectOwnership\").addChildNode(new __XmlText(input.ObjectOwnership)).withName(\"ObjectOwnership\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControlsRules = function serializeAws_restXmlOwnershipControlsRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlOwnershipControlsRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlParquetInput = function serializeAws_restXmlParquetInput(input, context) {\n  var bodyNode = new __XmlNode(\"ParquetInput\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function serializeAws_restXmlPublicAccessBlockConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n\n  if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicAcls))).withName(\"BlockPublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.IgnorePublicAcls))).withName(\"IgnorePublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicPolicy))).withName(\"BlockPublicPolicy\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.RestrictPublicBuckets))).withName(\"RestrictPublicBuckets\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfiguration = function serializeAws_restXmlQueueConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"QueueConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QueueArn !== undefined && input.QueueArn !== null) {\n    var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfigurationList = function serializeAws_restXmlQueueConfigurationList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlQueueConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlRedirect = function serializeAws_restXmlRedirect(input, context) {\n  var bodyNode = new __XmlNode(\"Redirect\");\n\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {\n    var node = new __XmlNode(\"HttpRedirectCode\").addChildNode(new __XmlText(input.HttpRedirectCode)).withName(\"HttpRedirectCode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyPrefixWith\").addChildNode(new __XmlText(input.ReplaceKeyPrefixWith)).withName(\"ReplaceKeyPrefixWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyWith\").addChildNode(new __XmlText(input.ReplaceKeyWith)).withName(\"ReplaceKeyWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRedirectAllRequestsTo = function serializeAws_restXmlRedirectAllRequestsTo(input, context) {\n  var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicaModifications = function serializeAws_restXmlReplicaModifications(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicaModifications\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicaModificationsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationConfiguration = function serializeAws_restXmlReplicationConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n\n  if (input.Role !== undefined && input.Role !== null) {\n    var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRule = function serializeAws_restXmlReplicationRule(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRule\");\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Priority !== undefined && input.Priority !== null) {\n    var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {\n    var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {\n    var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {\n    var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleAndOperator = function serializeAws_restXmlReplicationRuleAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleFilter = function serializeAws_restXmlReplicationRuleFilter(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n  ReplicationRuleFilter.visit(input, {\n    Prefix: function Prefix(value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function Tag(value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function And(value) {\n      var node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function _(name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRules = function serializeAws_restXmlReplicationRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlReplicationRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlReplicationTime = function serializeAws_restXmlReplicationTime(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTime\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Time !== undefined && input.Time !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationTimeValue = function serializeAws_restXmlReplicationTimeValue(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n\n  if (input.Minutes !== undefined && input.Minutes !== null) {\n    var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestPaymentConfiguration = function serializeAws_restXmlRequestPaymentConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n\n  if (input.Payer !== undefined && input.Payer !== null) {\n    var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestProgress = function serializeAws_restXmlRequestProgress(input, context) {\n  var bodyNode = new __XmlNode(\"RequestProgress\");\n\n  if (input.Enabled !== undefined && input.Enabled !== null) {\n    var node = new __XmlNode(\"EnableRequestProgress\").addChildNode(new __XmlText(String(input.Enabled))).withName(\"Enabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRestoreRequest = function serializeAws_restXmlRestoreRequest(input, context) {\n  var bodyNode = new __XmlNode(\"RestoreRequest\");\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {\n    var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Description !== undefined && input.Description !== null) {\n    var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SelectParameters !== undefined && input.SelectParameters !== null) {\n    var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputLocation !== undefined && input.OutputLocation !== null) {\n    var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRule = function serializeAws_restXmlRoutingRule(input, context) {\n  var bodyNode = new __XmlNode(\"RoutingRule\");\n\n  if (input.Condition !== undefined && input.Condition !== null) {\n    var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Redirect !== undefined && input.Redirect !== null) {\n    var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRules = function serializeAws_restXmlRoutingRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlRoutingRule(entry, context);\n    return node.withName(\"RoutingRule\");\n  });\n};\n\nvar serializeAws_restXmlS3KeyFilter = function serializeAws_restXmlS3KeyFilter(input, context) {\n  var bodyNode = new __XmlNode(\"S3KeyFilter\");\n\n  if (input.FilterRules !== undefined && input.FilterRules !== null) {\n    var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"FilterRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlS3Location = function serializeAws_restXmlS3Location(input, context) {\n  var bodyNode = new __XmlNode(\"S3Location\");\n\n  if (input.BucketName !== undefined && input.BucketName !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CannedACL !== undefined && input.CannedACL !== null) {\n    var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessControlList !== undefined && input.AccessControlList !== null) {\n    var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n    var containerNode_4 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_4.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_4);\n  }\n\n  if (input.Tagging !== undefined && input.Tagging !== null) {\n    var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.UserMetadata !== undefined && input.UserMetadata !== null) {\n    var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n    var containerNode_5 = new __XmlNode(\"UserMetadata\");\n    nodes.map(function (node) {\n      containerNode_5.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_5);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlScanRange = function serializeAws_restXmlScanRange(input, context) {\n  var bodyNode = new __XmlNode(\"ScanRange\");\n\n  if (input.Start !== undefined && input.Start !== null) {\n    var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.End !== undefined && input.End !== null) {\n    var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSelectParameters = function serializeAws_restXmlSelectParameters(input, context) {\n  var bodyNode = new __XmlNode(\"SelectParameters\");\n\n  if (input.InputSerialization !== undefined && input.InputSerialization !== null) {\n    var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpressionType !== undefined && input.ExpressionType !== null) {\n    var node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Expression !== undefined && input.Expression !== null) {\n    var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {\n    var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionByDefault = function serializeAws_restXmlServerSideEncryptionByDefault(input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n\n  if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.SSEAlgorithm)).withName(\"SSEAlgorithm\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSMasterKeyID)).withName(\"KMSMasterKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function serializeAws_restXmlServerSideEncryptionConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRule = function serializeAws_restXmlServerSideEncryptionRule(input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n\n  if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {\n    var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {\n    var node = new __XmlNode(\"BucketKeyEnabled\").addChildNode(new __XmlText(String(input.BucketKeyEnabled))).withName(\"BucketKeyEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRules = function serializeAws_restXmlServerSideEncryptionRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlSourceSelectionCriteria = function serializeAws_restXmlSourceSelectionCriteria(input, context) {\n  var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n\n  if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {\n    var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {\n    var node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSEKMS = function serializeAws_restXmlSSEKMS(input, context) {\n  var bodyNode = new __XmlNode(\"SSE-KMS\");\n\n  if (input.KeyId !== undefined && input.KeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSseKmsEncryptedObjects = function serializeAws_restXmlSseKmsEncryptedObjects(input, context) {\n  var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSES3 = function serializeAws_restXmlSSES3(input, context) {\n  var bodyNode = new __XmlNode(\"SSE-S3\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysis = function serializeAws_restXmlStorageClassAnalysis(input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n\n  if (input.DataExport !== undefined && input.DataExport !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function serializeAws_restXmlStorageClassAnalysisDataExport(input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n\n  if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {\n    var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\").addChildNode(new __XmlText(input.OutputSchemaVersion)).withName(\"OutputSchemaVersion\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTag = function serializeAws_restXmlTag(input, context) {\n  var bodyNode = new __XmlNode(\"Tag\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagging = function serializeAws_restXmlTagging(input, context) {\n  var bodyNode = new __XmlNode(\"Tagging\");\n\n  if (input.TagSet !== undefined && input.TagSet !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n    var containerNode_6 = new __XmlNode(\"TagSet\");\n    nodes.map(function (node) {\n      containerNode_6.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_6);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagSet = function serializeAws_restXmlTagSet(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTag(entry, context);\n    return node.withName(\"Tag\");\n  });\n};\n\nvar serializeAws_restXmlTargetGrant = function serializeAws_restXmlTargetGrant(input, context) {\n  var bodyNode = new __XmlNode(\"TargetGrant\");\n\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"BucketLogsPermission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTargetGrants = function serializeAws_restXmlTargetGrants(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTargetGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlTiering = function serializeAws_restXmlTiering(input, context) {\n  var bodyNode = new __XmlNode(\"Tiering\");\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"IntelligentTieringDays\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessTier !== undefined && input.AccessTier !== null) {\n    var node = new __XmlNode(\"IntelligentTieringAccessTier\").addChildNode(new __XmlText(input.AccessTier)).withName(\"AccessTier\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTieringList = function serializeAws_restXmlTieringList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTiering(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlTopicConfiguration = function serializeAws_restXmlTopicConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"TopicConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TopicArn !== undefined && input.TopicArn !== null) {\n    var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTopicConfigurationList = function serializeAws_restXmlTopicConfigurationList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTopicConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlTransition = function serializeAws_restXmlTransition(input, context) {\n  var bodyNode = new __XmlNode(\"Transition\");\n\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTransitionList = function serializeAws_restXmlTransitionList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlUserMetadata = function serializeAws_restXmlUserMetadata(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlMetadataEntry(entry, context);\n    return node.withName(\"MetadataEntry\");\n  });\n};\n\nvar serializeAws_restXmlVersioningConfiguration = function serializeAws_restXmlVersioningConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n\n  if (input.MFADelete !== undefined && input.MFADelete !== null) {\n    var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlWebsiteConfiguration = function serializeAws_restXmlWebsiteConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n\n  if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {\n    var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IndexDocument !== undefined && input.IndexDocument !== null) {\n    var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {\n    var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RoutingRules !== undefined && input.RoutingRules !== null) {\n    var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n    var containerNode_7 = new __XmlNode(\"RoutingRules\");\n    nodes.map(function (node) {\n      containerNode_7.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_7);\n  }\n\n  return bodyNode;\n};\n\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function deserializeAws_restXmlAbortIncompleteMultipartUpload(output, context) {\n  var contents = {\n    DaysAfterInitiation: undefined\n  };\n\n  if (output[\"DaysAfterInitiation\"] !== undefined) {\n    contents.DaysAfterInitiation = __strictParseInt32(output[\"DaysAfterInitiation\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAccessControlTranslation = function deserializeAws_restXmlAccessControlTranslation(output, context) {\n  var contents = {\n    Owner: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = __expectString(output[\"Owner\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAllowedHeaders = function deserializeAws_restXmlAllowedHeaders(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlAllowedMethods = function deserializeAws_restXmlAllowedMethods(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlAllowedOrigins = function deserializeAws_restXmlAllowedOrigins(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsAndOperator = function deserializeAws_restXmlAnalyticsAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  } else if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfiguration = function deserializeAws_restXmlAnalyticsConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    StorageClassAnalysis: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output.Filter === \"\") {} else if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlAnalyticsFilter(__expectUnion(output[\"Filter\"]), context);\n  }\n\n  if (output[\"StorageClassAnalysis\"] !== undefined) {\n    contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfigurationList = function deserializeAws_restXmlAnalyticsConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsExportDestination = function deserializeAws_restXmlAnalyticsExportDestination(output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsFilter = function deserializeAws_restXmlAnalyticsFilter(output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: __expectString(output[\"Prefix\"])\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function deserializeAws_restXmlAnalyticsS3BucketDestination(output, context) {\n  var contents = {\n    Format: undefined,\n    BucketAccountId: undefined,\n    Bucket: undefined,\n    Prefix: undefined\n  };\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = __expectString(output[\"Format\"]);\n  }\n\n  if (output[\"BucketAccountId\"] !== undefined) {\n    contents.BucketAccountId = __expectString(output[\"BucketAccountId\"]);\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = __expectString(output[\"Bucket\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBucket = function deserializeAws_restXmlBucket(output, context) {\n  var contents = {\n    Name: undefined,\n    CreationDate: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = __expectString(output[\"Name\"]);\n  }\n\n  if (output[\"CreationDate\"] !== undefined) {\n    contents.CreationDate = __expectNonNull(__parseRfc3339DateTime(output[\"CreationDate\"]));\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBuckets = function deserializeAws_restXmlBuckets(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlBucket(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlChecksum = function deserializeAws_restXmlChecksum(output, context) {\n  var contents = {\n    ChecksumCRC32: undefined,\n    ChecksumCRC32C: undefined,\n    ChecksumSHA1: undefined,\n    ChecksumSHA256: undefined\n  };\n\n  if (output[\"ChecksumCRC32\"] !== undefined) {\n    contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n  }\n\n  if (output[\"ChecksumCRC32C\"] !== undefined) {\n    contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n  }\n\n  if (output[\"ChecksumSHA1\"] !== undefined) {\n    contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n  }\n\n  if (output[\"ChecksumSHA256\"] !== undefined) {\n    contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlChecksumAlgorithmList = function deserializeAws_restXmlChecksumAlgorithmList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlCommonPrefix = function deserializeAws_restXmlCommonPrefix(output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCommonPrefixList = function deserializeAws_restXmlCommonPrefixList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlCommonPrefix(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlCondition = function deserializeAws_restXmlCondition(output, context) {\n  var contents = {\n    HttpErrorCodeReturnedEquals: undefined,\n    KeyPrefixEquals: undefined\n  };\n\n  if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n    contents.HttpErrorCodeReturnedEquals = __expectString(output[\"HttpErrorCodeReturnedEquals\"]);\n  }\n\n  if (output[\"KeyPrefixEquals\"] !== undefined) {\n    contents.KeyPrefixEquals = __expectString(output[\"KeyPrefixEquals\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlContinuationEvent = function deserializeAws_restXmlContinuationEvent(output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyObjectResult = function deserializeAws_restXmlCopyObjectResult(output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined,\n    ChecksumCRC32: undefined,\n    ChecksumCRC32C: undefined,\n    ChecksumSHA1: undefined,\n    ChecksumSHA256: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  if (output[\"ChecksumCRC32\"] !== undefined) {\n    contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n  }\n\n  if (output[\"ChecksumCRC32C\"] !== undefined) {\n    contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n  }\n\n  if (output[\"ChecksumSHA1\"] !== undefined) {\n    contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n  }\n\n  if (output[\"ChecksumSHA256\"] !== undefined) {\n    contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyPartResult = function deserializeAws_restXmlCopyPartResult(output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined,\n    ChecksumCRC32: undefined,\n    ChecksumCRC32C: undefined,\n    ChecksumSHA1: undefined,\n    ChecksumSHA256: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  if (output[\"ChecksumCRC32\"] !== undefined) {\n    contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n  }\n\n  if (output[\"ChecksumCRC32C\"] !== undefined) {\n    contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n  }\n\n  if (output[\"ChecksumSHA1\"] !== undefined) {\n    contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n  }\n\n  if (output[\"ChecksumSHA256\"] !== undefined) {\n    contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRule = function deserializeAws_restXmlCORSRule(output, context) {\n  var contents = {\n    ID: undefined,\n    AllowedHeaders: undefined,\n    AllowedMethods: undefined,\n    AllowedOrigins: undefined,\n    ExposeHeaders: undefined,\n    MaxAgeSeconds: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output.AllowedHeader === \"\") {\n    contents.AllowedHeaders = [];\n  } else if (output[\"AllowedHeader\"] !== undefined) {\n    contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n  }\n\n  if (output.AllowedMethod === \"\") {\n    contents.AllowedMethods = [];\n  } else if (output[\"AllowedMethod\"] !== undefined) {\n    contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n  }\n\n  if (output.AllowedOrigin === \"\") {\n    contents.AllowedOrigins = [];\n  } else if (output[\"AllowedOrigin\"] !== undefined) {\n    contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n  }\n\n  if (output.ExposeHeader === \"\") {\n    contents.ExposeHeaders = [];\n  } else if (output[\"ExposeHeader\"] !== undefined) {\n    contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n  }\n\n  if (output[\"MaxAgeSeconds\"] !== undefined) {\n    contents.MaxAgeSeconds = __strictParseInt32(output[\"MaxAgeSeconds\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRules = function deserializeAws_restXmlCORSRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlCORSRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDefaultRetention = function deserializeAws_restXmlDefaultRetention(output, context) {\n  var contents = {\n    Mode: undefined,\n    Days: undefined,\n    Years: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = __expectString(output[\"Mode\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = __strictParseInt32(output[\"Days\"]);\n  }\n\n  if (output[\"Years\"] !== undefined) {\n    contents.Years = __strictParseInt32(output[\"Years\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObject = function deserializeAws_restXmlDeletedObject(output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    DeleteMarker: undefined,\n    DeleteMarkerVersionId: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = __expectString(output[\"VersionId\"]);\n  }\n\n  if (output[\"DeleteMarker\"] !== undefined) {\n    contents.DeleteMarker = __parseBoolean(output[\"DeleteMarker\"]);\n  }\n\n  if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n    contents.DeleteMarkerVersionId = __expectString(output[\"DeleteMarkerVersionId\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObjects = function deserializeAws_restXmlDeletedObjects(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlDeletedObject(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDeleteMarkerEntry = function deserializeAws_restXmlDeleteMarkerEntry(output, context) {\n  var contents = {\n    Owner: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = __expectString(output[\"VersionId\"]);\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkerReplication = function deserializeAws_restXmlDeleteMarkerReplication(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkers = function deserializeAws_restXmlDeleteMarkers(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDestination = function deserializeAws_restXmlDestination(output, context) {\n  var contents = {\n    Bucket: undefined,\n    Account: undefined,\n    StorageClass: undefined,\n    AccessControlTranslation: undefined,\n    EncryptionConfiguration: undefined,\n    ReplicationTime: undefined,\n    Metrics: undefined\n  };\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = __expectString(output[\"Bucket\"]);\n  }\n\n  if (output[\"Account\"] !== undefined) {\n    contents.Account = __expectString(output[\"Account\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"AccessControlTranslation\"] !== undefined) {\n    contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n  }\n\n  if (output[\"EncryptionConfiguration\"] !== undefined) {\n    contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n  }\n\n  if (output[\"ReplicationTime\"] !== undefined) {\n    contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n  }\n\n  if (output[\"Metrics\"] !== undefined) {\n    contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlEncryptionConfiguration = function deserializeAws_restXmlEncryptionConfiguration(output, context) {\n  var contents = {\n    ReplicaKmsKeyID: undefined\n  };\n\n  if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n    contents.ReplicaKmsKeyID = __expectString(output[\"ReplicaKmsKeyID\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlEndEvent = function deserializeAws_restXmlEndEvent(output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXml_Error = function deserializeAws_restXml_Error(output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    Code: undefined,\n    Message: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = __expectString(output[\"VersionId\"]);\n  }\n\n  if (output[\"Code\"] !== undefined) {\n    contents.Code = __expectString(output[\"Code\"]);\n  }\n\n  if (output[\"Message\"] !== undefined) {\n    contents.Message = __expectString(output[\"Message\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrorDocument = function deserializeAws_restXmlErrorDocument(output, context) {\n  var contents = {\n    Key: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrors = function deserializeAws_restXmlErrors(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXml_Error(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlEventBridgeConfiguration = function deserializeAws_restXmlEventBridgeConfiguration(output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXmlEventList = function deserializeAws_restXmlEventList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlExistingObjectReplication = function deserializeAws_restXmlExistingObjectReplication(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlExposeHeaders = function deserializeAws_restXmlExposeHeaders(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlFilterRule = function deserializeAws_restXmlFilterRule(output, context) {\n  var contents = {\n    Name: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = __expectString(output[\"Name\"]);\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = __expectString(output[\"Value\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlFilterRuleList = function deserializeAws_restXmlFilterRuleList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlFilterRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlGetObjectAttributesParts = function deserializeAws_restXmlGetObjectAttributesParts(output, context) {\n  var contents = {\n    TotalPartsCount: undefined,\n    PartNumberMarker: undefined,\n    NextPartNumberMarker: undefined,\n    MaxParts: undefined,\n    IsTruncated: undefined,\n    Parts: undefined\n  };\n\n  if (output[\"PartsCount\"] !== undefined) {\n    contents.TotalPartsCount = __strictParseInt32(output[\"PartsCount\"]);\n  }\n\n  if (output[\"PartNumberMarker\"] !== undefined) {\n    contents.PartNumberMarker = __expectString(output[\"PartNumberMarker\"]);\n  }\n\n  if (output[\"NextPartNumberMarker\"] !== undefined) {\n    contents.NextPartNumberMarker = __expectString(output[\"NextPartNumberMarker\"]);\n  }\n\n  if (output[\"MaxParts\"] !== undefined) {\n    contents.MaxParts = __strictParseInt32(output[\"MaxParts\"]);\n  }\n\n  if (output[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = __parseBoolean(output[\"IsTruncated\"]);\n  }\n\n  if (output.Part === \"\") {\n    contents.Parts = [];\n  } else if (output[\"Part\"] !== undefined) {\n    contents.Parts = deserializeAws_restXmlPartsList(__getArrayIfSingleItem(output[\"Part\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrant = function deserializeAws_restXmlGrant(output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = __expectString(output[\"Permission\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrantee = function deserializeAws_restXmlGrantee(output, context) {\n  var contents = {\n    DisplayName: undefined,\n    EmailAddress: undefined,\n    ID: undefined,\n    URI: undefined,\n    Type: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = __expectString(output[\"DisplayName\"]);\n  }\n\n  if (output[\"EmailAddress\"] !== undefined) {\n    contents.EmailAddress = __expectString(output[\"EmailAddress\"]);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output[\"URI\"] !== undefined) {\n    contents.URI = __expectString(output[\"URI\"]);\n  }\n\n  if (output[\"xsi:type\"] !== undefined) {\n    contents.Type = __expectString(output[\"xsi:type\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrants = function deserializeAws_restXmlGrants(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlIndexDocument = function deserializeAws_restXmlIndexDocument(output, context) {\n  var contents = {\n    Suffix: undefined\n  };\n\n  if (output[\"Suffix\"] !== undefined) {\n    contents.Suffix = __expectString(output[\"Suffix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInitiator = function deserializeAws_restXmlInitiator(output, context) {\n  var contents = {\n    ID: undefined,\n    DisplayName: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = __expectString(output[\"DisplayName\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringAndOperator = function deserializeAws_restXmlIntelligentTieringAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  } else if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringConfiguration = function deserializeAws_restXmlIntelligentTieringConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Tierings: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output.Tiering === \"\") {\n    contents.Tierings = [];\n  } else if (output[\"Tiering\"] !== undefined) {\n    contents.Tierings = deserializeAws_restXmlTieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringConfigurationList = function deserializeAws_restXmlIntelligentTieringConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlIntelligentTieringFilter = function deserializeAws_restXmlIntelligentTieringFilter(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tag: undefined,\n    And: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output[\"And\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfiguration = function deserializeAws_restXmlInventoryConfiguration(output, context) {\n  var contents = {\n    Destination: undefined,\n    IsEnabled: undefined,\n    Filter: undefined,\n    Id: undefined,\n    IncludedObjectVersions: undefined,\n    OptionalFields: undefined,\n    Schedule: undefined\n  };\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"IsEnabled\"] !== undefined) {\n    contents.IsEnabled = __parseBoolean(output[\"IsEnabled\"]);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"IncludedObjectVersions\"] !== undefined) {\n    contents.IncludedObjectVersions = __expectString(output[\"IncludedObjectVersions\"]);\n  }\n\n  if (output.OptionalFields === \"\") {\n    contents.OptionalFields = [];\n  } else if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n    contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n  }\n\n  if (output[\"Schedule\"] !== undefined) {\n    contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfigurationList = function deserializeAws_restXmlInventoryConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlInventoryConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlInventoryDestination = function deserializeAws_restXmlInventoryDestination(output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryEncryption = function deserializeAws_restXmlInventoryEncryption(output, context) {\n  var contents = {\n    SSES3: undefined,\n    SSEKMS: undefined\n  };\n\n  if (output[\"SSE-S3\"] !== undefined) {\n    contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n  }\n\n  if (output[\"SSE-KMS\"] !== undefined) {\n    contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryFilter = function deserializeAws_restXmlInventoryFilter(output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryOptionalFields = function deserializeAws_restXmlInventoryOptionalFields(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restXmlInventoryS3BucketDestination = function deserializeAws_restXmlInventoryS3BucketDestination(output, context) {\n  var contents = {\n    AccountId: undefined,\n    Bucket: undefined,\n    Format: undefined,\n    Prefix: undefined,\n    Encryption: undefined\n  };\n\n  if (output[\"AccountId\"] !== undefined) {\n    contents.AccountId = __expectString(output[\"AccountId\"]);\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = __expectString(output[\"Bucket\"]);\n  }\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = __expectString(output[\"Format\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output[\"Encryption\"] !== undefined) {\n    contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventorySchedule = function deserializeAws_restXmlInventorySchedule(output, context) {\n  var contents = {\n    Frequency: undefined\n  };\n\n  if (output[\"Frequency\"] !== undefined) {\n    contents.Frequency = __expectString(output[\"Frequency\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function deserializeAws_restXmlLambdaFunctionConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    LambdaFunctionArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"CloudFunction\"] !== undefined) {\n    contents.LambdaFunctionArn = __expectString(output[\"CloudFunction\"]);\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  } else if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function deserializeAws_restXmlLambdaFunctionConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLifecycleExpiration = function deserializeAws_restXmlLifecycleExpiration(output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    ExpiredObjectDeleteMarker: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = __expectNonNull(__parseRfc3339DateTime(output[\"Date\"]));\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = __strictParseInt32(output[\"Days\"]);\n  }\n\n  if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n    contents.ExpiredObjectDeleteMarker = __parseBoolean(output[\"ExpiredObjectDeleteMarker\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRule = function deserializeAws_restXmlLifecycleRule(output, context) {\n  var contents = {\n    Expiration: undefined,\n    ID: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Transitions: undefined,\n    NoncurrentVersionTransitions: undefined,\n    NoncurrentVersionExpiration: undefined,\n    AbortIncompleteMultipartUpload: undefined\n  };\n\n  if (output[\"Expiration\"] !== undefined) {\n    contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Filter === \"\") {} else if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(__expectUnion(output[\"Filter\"]), context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output.Transition === \"\") {\n    contents.Transitions = [];\n  } else if (output[\"Transition\"] !== undefined) {\n    contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n  }\n\n  if (output.NoncurrentVersionTransition === \"\") {\n    contents.NoncurrentVersionTransitions = [];\n  } else if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n    contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n  }\n\n  if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n    contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n  }\n\n  if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n    contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function deserializeAws_restXmlLifecycleRuleAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined,\n    ObjectSizeGreaterThan: undefined,\n    ObjectSizeLessThan: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  } else if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n    contents.ObjectSizeGreaterThan = __strictParseLong(output[\"ObjectSizeGreaterThan\"]);\n  }\n\n  if (output[\"ObjectSizeLessThan\"] !== undefined) {\n    contents.ObjectSizeLessThan = __strictParseLong(output[\"ObjectSizeLessThan\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleFilter = function deserializeAws_restXmlLifecycleRuleFilter(output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: __expectString(output[\"Prefix\"])\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n    return {\n      ObjectSizeGreaterThan: __strictParseLong(output[\"ObjectSizeGreaterThan\"])\n    };\n  }\n\n  if (output[\"ObjectSizeLessThan\"] !== undefined) {\n    return {\n      ObjectSizeLessThan: __strictParseLong(output[\"ObjectSizeLessThan\"])\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlLifecycleRules = function deserializeAws_restXmlLifecycleRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlLifecycleRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLoggingEnabled = function deserializeAws_restXmlLoggingEnabled(output, context) {\n  var contents = {\n    TargetBucket: undefined,\n    TargetGrants: undefined,\n    TargetPrefix: undefined\n  };\n\n  if (output[\"TargetBucket\"] !== undefined) {\n    contents.TargetBucket = __expectString(output[\"TargetBucket\"]);\n  }\n\n  if (output.TargetGrants === \"\") {\n    contents.TargetGrants = [];\n  } else if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n    contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n  }\n\n  if (output[\"TargetPrefix\"] !== undefined) {\n    contents.TargetPrefix = __expectString(output[\"TargetPrefix\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetrics = function deserializeAws_restXmlMetrics(output, context) {\n  var contents = {\n    Status: undefined,\n    EventThreshold: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output[\"EventThreshold\"] !== undefined) {\n    contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsAndOperator = function deserializeAws_restXmlMetricsAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined,\n    AccessPointArn: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  } else if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  if (output[\"AccessPointArn\"] !== undefined) {\n    contents.AccessPointArn = __expectString(output[\"AccessPointArn\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfiguration = function deserializeAws_restXmlMetricsConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output.Filter === \"\") {} else if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlMetricsFilter(__expectUnion(output[\"Filter\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfigurationList = function deserializeAws_restXmlMetricsConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlMetricsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlMetricsFilter = function deserializeAws_restXmlMetricsFilter(output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: __expectString(output[\"Prefix\"])\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"AccessPointArn\"] !== undefined) {\n    return {\n      AccessPointArn: __expectString(output[\"AccessPointArn\"])\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlMultipartUpload = function deserializeAws_restXmlMultipartUpload(output, context) {\n  var contents = {\n    UploadId: undefined,\n    Key: undefined,\n    Initiated: undefined,\n    StorageClass: undefined,\n    Owner: undefined,\n    Initiator: undefined,\n    ChecksumAlgorithm: undefined\n  };\n\n  if (output[\"UploadId\"] !== undefined) {\n    contents.UploadId = __expectString(output[\"UploadId\"]);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"Initiated\"] !== undefined) {\n    contents.Initiated = __expectNonNull(__parseRfc3339DateTime(output[\"Initiated\"]));\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Initiator\"] !== undefined) {\n    contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n  }\n\n  if (output[\"ChecksumAlgorithm\"] !== undefined) {\n    contents.ChecksumAlgorithm = __expectString(output[\"ChecksumAlgorithm\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMultipartUploadList = function deserializeAws_restXmlMultipartUploadList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlMultipartUpload(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function deserializeAws_restXmlNoncurrentVersionExpiration(output, context) {\n  var contents = {\n    NoncurrentDays: undefined,\n    NewerNoncurrentVersions: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n  }\n\n  if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n    contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransition = function deserializeAws_restXmlNoncurrentVersionTransition(output, context) {\n  var contents = {\n    NoncurrentDays: undefined,\n    StorageClass: undefined,\n    NewerNoncurrentVersions: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n    contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function deserializeAws_restXmlNoncurrentVersionTransitionList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNotificationConfigurationFilter = function deserializeAws_restXmlNotificationConfigurationFilter(output, context) {\n  var contents = {\n    Key: undefined\n  };\n\n  if (output[\"S3Key\"] !== undefined) {\n    contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Object = function deserializeAws_restXml_Object(output, context) {\n  var contents = {\n    Key: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    ChecksumAlgorithm: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Owner: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output.ChecksumAlgorithm === \"\") {\n    contents.ChecksumAlgorithm = [];\n  } else if (output[\"ChecksumAlgorithm\"] !== undefined) {\n    contents.ChecksumAlgorithm = deserializeAws_restXmlChecksumAlgorithmList(__getArrayIfSingleItem(output[\"ChecksumAlgorithm\"]), context);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = __strictParseLong(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectList = function deserializeAws_restXmlObjectList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXml_Object(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlObjectLockConfiguration = function deserializeAws_restXmlObjectLockConfiguration(output, context) {\n  var contents = {\n    ObjectLockEnabled: undefined,\n    Rule: undefined\n  };\n\n  if (output[\"ObjectLockEnabled\"] !== undefined) {\n    contents.ObjectLockEnabled = __expectString(output[\"ObjectLockEnabled\"]);\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockLegalHold = function deserializeAws_restXmlObjectLockLegalHold(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRetention = function deserializeAws_restXmlObjectLockRetention(output, context) {\n  var contents = {\n    Mode: undefined,\n    RetainUntilDate: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = __expectString(output[\"Mode\"]);\n  }\n\n  if (output[\"RetainUntilDate\"] !== undefined) {\n    contents.RetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output[\"RetainUntilDate\"]));\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRule = function deserializeAws_restXmlObjectLockRule(output, context) {\n  var contents = {\n    DefaultRetention: undefined\n  };\n\n  if (output[\"DefaultRetention\"] !== undefined) {\n    contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectPart = function deserializeAws_restXmlObjectPart(output, context) {\n  var contents = {\n    PartNumber: undefined,\n    Size: undefined,\n    ChecksumCRC32: undefined,\n    ChecksumCRC32C: undefined,\n    ChecksumSHA1: undefined,\n    ChecksumSHA256: undefined\n  };\n\n  if (output[\"PartNumber\"] !== undefined) {\n    contents.PartNumber = __strictParseInt32(output[\"PartNumber\"]);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = __strictParseLong(output[\"Size\"]);\n  }\n\n  if (output[\"ChecksumCRC32\"] !== undefined) {\n    contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n  }\n\n  if (output[\"ChecksumCRC32C\"] !== undefined) {\n    contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n  }\n\n  if (output[\"ChecksumSHA1\"] !== undefined) {\n    contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n  }\n\n  if (output[\"ChecksumSHA256\"] !== undefined) {\n    contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersion = function deserializeAws_restXmlObjectVersion(output, context) {\n  var contents = {\n    ETag: undefined,\n    ChecksumAlgorithm: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined,\n    Owner: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output.ChecksumAlgorithm === \"\") {\n    contents.ChecksumAlgorithm = [];\n  } else if (output[\"ChecksumAlgorithm\"] !== undefined) {\n    contents.ChecksumAlgorithm = deserializeAws_restXmlChecksumAlgorithmList(__getArrayIfSingleItem(output[\"ChecksumAlgorithm\"]), context);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = __strictParseLong(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = __expectString(output[\"VersionId\"]);\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersionList = function deserializeAws_restXmlObjectVersionList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlObjectVersion(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlOwner = function deserializeAws_restXmlOwner(output, context) {\n  var contents = {\n    DisplayName: undefined,\n    ID: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = __expectString(output[\"DisplayName\"]);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControls = function deserializeAws_restXmlOwnershipControls(output, context) {\n  var contents = {\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  } else if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlOwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControlsRule = function deserializeAws_restXmlOwnershipControlsRule(output, context) {\n  var contents = {\n    ObjectOwnership: undefined\n  };\n\n  if (output[\"ObjectOwnership\"] !== undefined) {\n    contents.ObjectOwnership = __expectString(output[\"ObjectOwnership\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControlsRules = function deserializeAws_restXmlOwnershipControlsRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlOwnershipControlsRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPart = function deserializeAws_restXmlPart(output, context) {\n  var contents = {\n    PartNumber: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined,\n    ChecksumCRC32: undefined,\n    ChecksumCRC32C: undefined,\n    ChecksumSHA1: undefined,\n    ChecksumSHA256: undefined\n  };\n\n  if (output[\"PartNumber\"] !== undefined) {\n    contents.PartNumber = __strictParseInt32(output[\"PartNumber\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n  }\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = __expectString(output[\"ETag\"]);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = __strictParseLong(output[\"Size\"]);\n  }\n\n  if (output[\"ChecksumCRC32\"] !== undefined) {\n    contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n  }\n\n  if (output[\"ChecksumCRC32C\"] !== undefined) {\n    contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n  }\n\n  if (output[\"ChecksumSHA1\"] !== undefined) {\n    contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n  }\n\n  if (output[\"ChecksumSHA256\"] !== undefined) {\n    contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlParts = function deserializeAws_restXmlParts(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlPart(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPartsList = function deserializeAws_restXmlPartsList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlObjectPart(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPolicyStatus = function deserializeAws_restXmlPolicyStatus(output, context) {\n  var contents = {\n    IsPublic: undefined\n  };\n\n  if (output[\"IsPublic\"] !== undefined) {\n    contents.IsPublic = __parseBoolean(output[\"IsPublic\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlProgress = function deserializeAws_restXmlProgress(output, context) {\n  var contents = {\n    BytesScanned: undefined,\n    BytesProcessed: undefined,\n    BytesReturned: undefined\n  };\n\n  if (output[\"BytesScanned\"] !== undefined) {\n    contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n  }\n\n  if (output[\"BytesProcessed\"] !== undefined) {\n    contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n  }\n\n  if (output[\"BytesReturned\"] !== undefined) {\n    contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlProgressEvent = function deserializeAws_restXmlProgressEvent(output, context) {\n  var contents = {\n    Details: undefined\n  };\n\n  if (output[\"Details\"] !== undefined) {\n    contents.Details = deserializeAws_restXmlProgress(output[\"Details\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function deserializeAws_restXmlPublicAccessBlockConfiguration(output, context) {\n  var contents = {\n    BlockPublicAcls: undefined,\n    IgnorePublicAcls: undefined,\n    BlockPublicPolicy: undefined,\n    RestrictPublicBuckets: undefined\n  };\n\n  if (output[\"BlockPublicAcls\"] !== undefined) {\n    contents.BlockPublicAcls = __parseBoolean(output[\"BlockPublicAcls\"]);\n  }\n\n  if (output[\"IgnorePublicAcls\"] !== undefined) {\n    contents.IgnorePublicAcls = __parseBoolean(output[\"IgnorePublicAcls\"]);\n  }\n\n  if (output[\"BlockPublicPolicy\"] !== undefined) {\n    contents.BlockPublicPolicy = __parseBoolean(output[\"BlockPublicPolicy\"]);\n  }\n\n  if (output[\"RestrictPublicBuckets\"] !== undefined) {\n    contents.RestrictPublicBuckets = __parseBoolean(output[\"RestrictPublicBuckets\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfiguration = function deserializeAws_restXmlQueueConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    QueueArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"Queue\"] !== undefined) {\n    contents.QueueArn = __expectString(output[\"Queue\"]);\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  } else if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfigurationList = function deserializeAws_restXmlQueueConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlQueueConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlRecordsEvent = function deserializeAws_restXmlRecordsEvent(output, context) {\n  var contents = {\n    Payload: undefined\n  };\n\n  if (output[\"Payload\"] !== undefined) {\n    contents.Payload = context.base64Decoder(output[\"Payload\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRedirect = function deserializeAws_restXmlRedirect(output, context) {\n  var contents = {\n    HostName: undefined,\n    HttpRedirectCode: undefined,\n    Protocol: undefined,\n    ReplaceKeyPrefixWith: undefined,\n    ReplaceKeyWith: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = __expectString(output[\"HostName\"]);\n  }\n\n  if (output[\"HttpRedirectCode\"] !== undefined) {\n    contents.HttpRedirectCode = __expectString(output[\"HttpRedirectCode\"]);\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = __expectString(output[\"Protocol\"]);\n  }\n\n  if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n    contents.ReplaceKeyPrefixWith = __expectString(output[\"ReplaceKeyPrefixWith\"]);\n  }\n\n  if (output[\"ReplaceKeyWith\"] !== undefined) {\n    contents.ReplaceKeyWith = __expectString(output[\"ReplaceKeyWith\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRedirectAllRequestsTo = function deserializeAws_restXmlRedirectAllRequestsTo(output, context) {\n  var contents = {\n    HostName: undefined,\n    Protocol: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = __expectString(output[\"HostName\"]);\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = __expectString(output[\"Protocol\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicaModifications = function deserializeAws_restXmlReplicaModifications(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationConfiguration = function deserializeAws_restXmlReplicationConfiguration(output, context) {\n  var contents = {\n    Role: undefined,\n    Rules: undefined\n  };\n\n  if (output[\"Role\"] !== undefined) {\n    contents.Role = __expectString(output[\"Role\"]);\n  }\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  } else if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRule = function deserializeAws_restXmlReplicationRule(output, context) {\n  var contents = {\n    ID: undefined,\n    Priority: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    SourceSelectionCriteria: undefined,\n    ExistingObjectReplication: undefined,\n    Destination: undefined,\n    DeleteMarkerReplication: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = __expectString(output[\"ID\"]);\n  }\n\n  if (output[\"Priority\"] !== undefined) {\n    contents.Priority = __strictParseInt32(output[\"Priority\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Filter === \"\") {} else if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlReplicationRuleFilter(__expectUnion(output[\"Filter\"]), context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output[\"SourceSelectionCriteria\"] !== undefined) {\n    contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n  }\n\n  if (output[\"ExistingObjectReplication\"] !== undefined) {\n    contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"DeleteMarkerReplication\"] !== undefined) {\n    contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleAndOperator = function deserializeAws_restXmlReplicationRuleAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = __expectString(output[\"Prefix\"]);\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  } else if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleFilter = function deserializeAws_restXmlReplicationRuleFilter(output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: __expectString(output[\"Prefix\"])\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlReplicationRules = function deserializeAws_restXmlReplicationRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlReplicationRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlReplicationTime = function deserializeAws_restXmlReplicationTime(output, context) {\n  var contents = {\n    Status: undefined,\n    Time: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  if (output[\"Time\"] !== undefined) {\n    contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationTimeValue = function deserializeAws_restXmlReplicationTimeValue(output, context) {\n  var contents = {\n    Minutes: undefined\n  };\n\n  if (output[\"Minutes\"] !== undefined) {\n    contents.Minutes = __strictParseInt32(output[\"Minutes\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRule = function deserializeAws_restXmlRoutingRule(output, context) {\n  var contents = {\n    Condition: undefined,\n    Redirect: undefined\n  };\n\n  if (output[\"Condition\"] !== undefined) {\n    contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n  }\n\n  if (output[\"Redirect\"] !== undefined) {\n    contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRules = function deserializeAws_restXmlRoutingRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlRoutingRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlS3KeyFilter = function deserializeAws_restXmlS3KeyFilter(output, context) {\n  var contents = {\n    FilterRules: undefined\n  };\n\n  if (output.FilterRule === \"\") {\n    contents.FilterRules = [];\n  } else if (output[\"FilterRule\"] !== undefined) {\n    contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSelectObjectContentEventStream = function deserializeAws_restXmlSelectObjectContentEventStream(output, context) {\n  if (output[\"Records\"] !== undefined) {\n    return {\n      Records: deserializeAws_restXmlRecordsEvent(output[\"Records\"], context)\n    };\n  }\n\n  if (output[\"Stats\"] !== undefined) {\n    return {\n      Stats: deserializeAws_restXmlStatsEvent(output[\"Stats\"], context)\n    };\n  }\n\n  if (output[\"Progress\"] !== undefined) {\n    return {\n      Progress: deserializeAws_restXmlProgressEvent(output[\"Progress\"], context)\n    };\n  }\n\n  if (output[\"Cont\"] !== undefined) {\n    return {\n      Cont: deserializeAws_restXmlContinuationEvent(output[\"Cont\"], context)\n    };\n  }\n\n  if (output[\"End\"] !== undefined) {\n    return {\n      End: deserializeAws_restXmlEndEvent(output[\"End\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function deserializeAws_restXmlServerSideEncryptionByDefault(output, context) {\n  var contents = {\n    SSEAlgorithm: undefined,\n    KMSMasterKeyID: undefined\n  };\n\n  if (output[\"SSEAlgorithm\"] !== undefined) {\n    contents.SSEAlgorithm = __expectString(output[\"SSEAlgorithm\"]);\n  }\n\n  if (output[\"KMSMasterKeyID\"] !== undefined) {\n    contents.KMSMasterKeyID = __expectString(output[\"KMSMasterKeyID\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function deserializeAws_restXmlServerSideEncryptionConfiguration(output, context) {\n  var contents = {\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  } else if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRule = function deserializeAws_restXmlServerSideEncryptionRule(output, context) {\n  var contents = {\n    ApplyServerSideEncryptionByDefault: undefined,\n    BucketKeyEnabled: undefined\n  };\n\n  if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n    contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n  }\n\n  if (output[\"BucketKeyEnabled\"] !== undefined) {\n    contents.BucketKeyEnabled = __parseBoolean(output[\"BucketKeyEnabled\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRules = function deserializeAws_restXmlServerSideEncryptionRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlSourceSelectionCriteria = function deserializeAws_restXmlSourceSelectionCriteria(output, context) {\n  var contents = {\n    SseKmsEncryptedObjects: undefined,\n    ReplicaModifications: undefined\n  };\n\n  if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n    contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n  }\n\n  if (output[\"ReplicaModifications\"] !== undefined) {\n    contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output[\"ReplicaModifications\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSEKMS = function deserializeAws_restXmlSSEKMS(output, context) {\n  var contents = {\n    KeyId: undefined\n  };\n\n  if (output[\"KeyId\"] !== undefined) {\n    contents.KeyId = __expectString(output[\"KeyId\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function deserializeAws_restXmlSseKmsEncryptedObjects(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = __expectString(output[\"Status\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSES3 = function deserializeAws_restXmlSSES3(output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXmlStats = function deserializeAws_restXmlStats(output, context) {\n  var contents = {\n    BytesScanned: undefined,\n    BytesProcessed: undefined,\n    BytesReturned: undefined\n  };\n\n  if (output[\"BytesScanned\"] !== undefined) {\n    contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n  }\n\n  if (output[\"BytesProcessed\"] !== undefined) {\n    contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n  }\n\n  if (output[\"BytesReturned\"] !== undefined) {\n    contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStatsEvent = function deserializeAws_restXmlStatsEvent(output, context) {\n  var contents = {\n    Details: undefined\n  };\n\n  if (output[\"Details\"] !== undefined) {\n    contents.Details = deserializeAws_restXmlStats(output[\"Details\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysis = function deserializeAws_restXmlStorageClassAnalysis(output, context) {\n  var contents = {\n    DataExport: undefined\n  };\n\n  if (output[\"DataExport\"] !== undefined) {\n    contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function deserializeAws_restXmlStorageClassAnalysisDataExport(output, context) {\n  var contents = {\n    OutputSchemaVersion: undefined,\n    Destination: undefined\n  };\n\n  if (output[\"OutputSchemaVersion\"] !== undefined) {\n    contents.OutputSchemaVersion = __expectString(output[\"OutputSchemaVersion\"]);\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTag = function deserializeAws_restXmlTag(output, context) {\n  var contents = {\n    Key: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = __expectString(output[\"Key\"]);\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = __expectString(output[\"Value\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTagSet = function deserializeAws_restXmlTagSet(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTag(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTargetGrant = function deserializeAws_restXmlTargetGrant(output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = __expectString(output[\"Permission\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTargetGrants = function deserializeAws_restXmlTargetGrants(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTargetGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTiering = function deserializeAws_restXmlTiering(output, context) {\n  var contents = {\n    Days: undefined,\n    AccessTier: undefined\n  };\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = __strictParseInt32(output[\"Days\"]);\n  }\n\n  if (output[\"AccessTier\"] !== undefined) {\n    contents.AccessTier = __expectString(output[\"AccessTier\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTieringList = function deserializeAws_restXmlTieringList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTiering(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTopicConfiguration = function deserializeAws_restXmlTopicConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    TopicArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = __expectString(output[\"Id\"]);\n  }\n\n  if (output[\"Topic\"] !== undefined) {\n    contents.TopicArn = __expectString(output[\"Topic\"]);\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  } else if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTopicConfigurationList = function deserializeAws_restXmlTopicConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTopicConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTransition = function deserializeAws_restXmlTransition(output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = __expectNonNull(__parseRfc3339DateTime(output[\"Date\"]));\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = __strictParseInt32(output[\"Days\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = __expectString(output[\"StorageClass\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTransitionList = function deserializeAws_restXmlTransitionList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTransition(entry, context);\n  });\n};\n\nvar deserializeMetadata = function deserializeMetadata(output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n\nvar collectBody = function collectBody(streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function isSerializableHeaderValue(value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function parseBody(streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      var parsedObj = xmlParse(encoded, {\n        attributeNamePrefix: \"\",\n        ignoreAttributes: false,\n        parseNodeValue: false,\n        trimValues: false,\n        tagValueProcessor: function tagValueProcessor(val) {\n          return val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : decodeHTML(val);\n        }\n      });\n      var textNodeName = \"#text\";\n      var key = Object.keys(parsedObj)[0];\n      var parsedObjToReturn = parsedObj[key];\n\n      if (parsedObjToReturn[textNodeName]) {\n        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n        delete parsedObjToReturn[textNodeName];\n      }\n\n      return __getValueFromTextNode(parsedObjToReturn);\n    }\n\n    return {};\n  });\n};\n\nvar loadRestXmlErrorCode = function loadRestXmlErrorCode(output, data) {\n  if (data.Code !== undefined) {\n    return data.Code;\n  }\n\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n\n  return \"\";\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","HttpRequest","__HttpRequest","isValidHostname","__isValidHostname","dateToUtcString","__dateToUtcString","decorateServiceException","__decorateServiceException","expectNonNull","__expectNonNull","expectObject","__expectObject","expectString","__expectString","expectUnion","__expectUnion","extendedEncodeURIComponent","__extendedEncodeURIComponent","getArrayIfSingleItem","__getArrayIfSingleItem","getValueFromTextNode","__getValueFromTextNode","parseBoolean","__parseBoolean","parseRfc3339DateTime","__parseRfc3339DateTime","parseRfc7231DateTime","__parseRfc7231DateTime","strictParseInt32","__strictParseInt32","strictParseLong","__strictParseLong","XmlNode","__XmlNode","XmlText","__XmlText","decodeHTML","parse","xmlParse","AnalyticsFilter","BucketAlreadyExists","BucketAlreadyOwnedByYou","InvalidObjectState","LifecycleRuleFilter","MetricsFilter","NoSuchBucket","NoSuchKey","NoSuchUpload","NotFound","ObjectNotInActiveTierError","ReplicationRuleFilter","ObjectAlreadyInActiveTierError","S3ServiceException","__BaseException","serializeAws_restXmlAbortMultipartUploadCommand","input","context","_a","hostname","_b","protocol","port","basePath","headers","resolvedPath","labelValue","query","body","_c","label","endpoint","sent","path","isSerializableHeaderValue","RequestPayer","ExpectedBucketOwner","concat","endsWith","slice","Bucket","undefined","length","Error","replace","Key","split","map","segment","join","UploadId","uploadId","method","serializeAws_restXmlCompleteMultipartUploadCommand","contents","ChecksumCRC32","ChecksumCRC32C","ChecksumSHA1","ChecksumSHA256","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","MultipartUpload","serializeAws_restXmlCompletedMultipartUpload","withName","addAttribute","toString","serializeAws_restXmlCopyObjectCommand","ACL","CacheControl","ChecksumAlgorithm","ContentDisposition","ContentEncoding","ContentLanguage","ContentType","CopySource","CopySourceIfMatch","CopySourceIfModifiedSince","CopySourceIfNoneMatch","CopySourceIfUnmodifiedSince","Expires","expires","GrantFullControl","GrantRead","GrantReadACP","GrantWriteACP","MetadataDirective","TaggingDirective","ServerSideEncryption","StorageClass","WebsiteRedirectLocation","SSEKMSKeyId","SSEKMSEncryptionContext","BucketKeyEnabled","CopySourceSSECustomerAlgorithm","CopySourceSSECustomerKey","CopySourceSSECustomerKeyMD5","Tagging","ObjectLockMode","ObjectLockRetainUntilDate","toISOString","ObjectLockLegalHoldStatus","ExpectedSourceBucketOwner","Metadata","Object","keys","reduce","acc","suffix","toLowerCase","serializeAws_restXmlCreateBucketCommand","GrantWrite","ObjectLockEnabledForBucket","ObjectOwnership","CreateBucketConfiguration","serializeAws_restXmlCreateBucketConfiguration","serializeAws_restXmlCreateMultipartUploadCommand","uploads","serializeAws_restXmlDeleteBucketCommand","serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand","analytics","Id","id","serializeAws_restXmlDeleteBucketCorsCommand","cors","serializeAws_restXmlDeleteBucketEncryptionCommand","encryption","serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand","serializeAws_restXmlDeleteBucketInventoryConfigurationCommand","inventory","serializeAws_restXmlDeleteBucketLifecycleCommand","lifecycle","serializeAws_restXmlDeleteBucketMetricsConfigurationCommand","metrics","serializeAws_restXmlDeleteBucketOwnershipControlsCommand","ownershipControls","serializeAws_restXmlDeleteBucketPolicyCommand","policy","serializeAws_restXmlDeleteBucketReplicationCommand","replication","serializeAws_restXmlDeleteBucketTaggingCommand","tagging","serializeAws_restXmlDeleteBucketWebsiteCommand","website","serializeAws_restXmlDeleteObjectCommand","MFA","BypassGovernanceRetention","VersionId","versionId","serializeAws_restXmlDeleteObjectsCommand","delete","Delete","serializeAws_restXmlDelete","serializeAws_restXmlDeleteObjectTaggingCommand","serializeAws_restXmlDeletePublicAccessBlockCommand","publicAccessBlock","serializeAws_restXmlGetBucketAccelerateConfigurationCommand","accelerate","serializeAws_restXmlGetBucketAclCommand","acl","serializeAws_restXmlGetBucketAnalyticsConfigurationCommand","serializeAws_restXmlGetBucketCorsCommand","serializeAws_restXmlGetBucketEncryptionCommand","serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand","serializeAws_restXmlGetBucketInventoryConfigurationCommand","serializeAws_restXmlGetBucketLifecycleConfigurationCommand","serializeAws_restXmlGetBucketLocationCommand","location","serializeAws_restXmlGetBucketLoggingCommand","logging","serializeAws_restXmlGetBucketMetricsConfigurationCommand","serializeAws_restXmlGetBucketNotificationConfigurationCommand","notification","serializeAws_restXmlGetBucketOwnershipControlsCommand","serializeAws_restXmlGetBucketPolicyCommand","serializeAws_restXmlGetBucketPolicyStatusCommand","policyStatus","serializeAws_restXmlGetBucketReplicationCommand","serializeAws_restXmlGetBucketRequestPaymentCommand","requestPayment","serializeAws_restXmlGetBucketTaggingCommand","serializeAws_restXmlGetBucketVersioningCommand","versioning","serializeAws_restXmlGetBucketWebsiteCommand","serializeAws_restXmlGetObjectCommand","IfMatch","IfModifiedSince","IfNoneMatch","IfUnmodifiedSince","Range","range","ChecksumMode","ResponseCacheControl","ResponseContentDisposition","ResponseContentEncoding","ResponseContentLanguage","ResponseContentType","ResponseExpires","PartNumber","partNumber","serializeAws_restXmlGetObjectAclCommand","serializeAws_restXmlGetObjectAttributesCommand","MaxParts","PartNumberMarker","ObjectAttributes","_entry","attributes","serializeAws_restXmlGetObjectLegalHoldCommand","serializeAws_restXmlGetObjectLockConfigurationCommand","serializeAws_restXmlGetObjectRetentionCommand","retention","serializeAws_restXmlGetObjectTaggingCommand","serializeAws_restXmlGetObjectTorrentCommand","torrent","serializeAws_restXmlGetPublicAccessBlockCommand","serializeAws_restXmlHeadBucketCommand","serializeAws_restXmlHeadObjectCommand","serializeAws_restXmlListBucketAnalyticsConfigurationsCommand","ContinuationToken","serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand","serializeAws_restXmlListBucketInventoryConfigurationsCommand","serializeAws_restXmlListBucketMetricsConfigurationsCommand","serializeAws_restXmlListBucketsCommand","serializeAws_restXmlListMultipartUploadsCommand","Delimiter","delimiter","EncodingType","KeyMarker","MaxUploads","Prefix","prefix","UploadIdMarker","serializeAws_restXmlListObjectsCommand","Marker","marker","MaxKeys","serializeAws_restXmlListObjectsV2Command","FetchOwner","StartAfter","serializeAws_restXmlListObjectVersionsCommand","versions","VersionIdMarker","serializeAws_restXmlListPartsCommand","serializeAws_restXmlPutBucketAccelerateConfigurationCommand","AccelerateConfiguration","serializeAws_restXmlAccelerateConfiguration","serializeAws_restXmlPutBucketAclCommand","ContentMD5","AccessControlPolicy","serializeAws_restXmlAccessControlPolicy","serializeAws_restXmlPutBucketAnalyticsConfigurationCommand","AnalyticsConfiguration","serializeAws_restXmlAnalyticsConfiguration","serializeAws_restXmlPutBucketCorsCommand","CORSConfiguration","serializeAws_restXmlCORSConfiguration","serializeAws_restXmlPutBucketEncryptionCommand","ServerSideEncryptionConfiguration","serializeAws_restXmlServerSideEncryptionConfiguration","serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand","IntelligentTieringConfiguration","serializeAws_restXmlIntelligentTieringConfiguration","serializeAws_restXmlPutBucketInventoryConfigurationCommand","InventoryConfiguration","serializeAws_restXmlInventoryConfiguration","serializeAws_restXmlPutBucketLifecycleConfigurationCommand","LifecycleConfiguration","serializeAws_restXmlBucketLifecycleConfiguration","serializeAws_restXmlPutBucketLoggingCommand","BucketLoggingStatus","serializeAws_restXmlBucketLoggingStatus","serializeAws_restXmlPutBucketMetricsConfigurationCommand","MetricsConfiguration","serializeAws_restXmlMetricsConfiguration","serializeAws_restXmlPutBucketNotificationConfigurationCommand","SkipDestinationValidation","NotificationConfiguration","serializeAws_restXmlNotificationConfiguration","serializeAws_restXmlPutBucketOwnershipControlsCommand","OwnershipControls","serializeAws_restXmlOwnershipControls","serializeAws_restXmlPutBucketPolicyCommand","ConfirmRemoveSelfBucketAccess","Policy","serializeAws_restXmlPutBucketReplicationCommand","Token","ReplicationConfiguration","serializeAws_restXmlReplicationConfiguration","serializeAws_restXmlPutBucketRequestPaymentCommand","RequestPaymentConfiguration","serializeAws_restXmlRequestPaymentConfiguration","serializeAws_restXmlPutBucketTaggingCommand","serializeAws_restXmlTagging","serializeAws_restXmlPutBucketVersioningCommand","VersioningConfiguration","serializeAws_restXmlVersioningConfiguration","serializeAws_restXmlPutBucketWebsiteCommand","WebsiteConfiguration","serializeAws_restXmlWebsiteConfiguration","serializeAws_restXmlPutObjectCommand","ContentLength","Body","serializeAws_restXmlPutObjectAclCommand","serializeAws_restXmlPutObjectLegalHoldCommand","LegalHold","serializeAws_restXmlObjectLockLegalHold","serializeAws_restXmlPutObjectLockConfigurationCommand","ObjectLockConfiguration","serializeAws_restXmlObjectLockConfiguration","serializeAws_restXmlPutObjectRetentionCommand","Retention","serializeAws_restXmlObjectLockRetention","serializeAws_restXmlPutObjectTaggingCommand","serializeAws_restXmlPutPublicAccessBlockCommand","PublicAccessBlockConfiguration","serializeAws_restXmlPublicAccessBlockConfiguration","serializeAws_restXmlRestoreObjectCommand","restore","RestoreRequest","serializeAws_restXmlRestoreRequest","serializeAws_restXmlSelectObjectContentCommand","bodyNode","node","select","Expression","addChildNode","ExpressionType","InputSerialization","serializeAws_restXmlInputSerialization","OutputSerialization","serializeAws_restXmlOutputSerialization","RequestProgress","serializeAws_restXmlRequestProgress","ScanRange","serializeAws_restXmlScanRange","serializeAws_restXmlUploadPartCommand","serializeAws_restXmlUploadPartCopyCommand","CopySourceRange","serializeAws_restXmlWriteGetObjectResponseCommand","resolvedHostname","RequestRoute","RequestToken","StatusCode","ErrorCode","ErrorMessage","AcceptRanges","ContentRange","DeleteMarker","ETag","Expiration","LastModified","MissingMeta","PartsCount","ReplicationStatus","RequestCharged","Restore","TagCount","disableHostPrefix","deserializeAws_restXmlAbortMultipartUploadCommand","output","statusCode","deserializeAws_restXmlAbortMultipartUploadCommandError","$metadata","deserializeMetadata","collectBody","Promise","resolve","parsedOutput","response","errorCode","parsedBody","_d","parseBody","apply","loadRestXmlErrorCode","deserializeAws_restXmlNoSuchUploadResponse","name","code","Code","$fault","deserializeAws_restXmlCompleteMultipartUploadCommand","data","deserializeAws_restXmlCompleteMultipartUploadCommandError","Location","deserializeAws_restXmlCopyObjectCommand","deserializeAws_restXmlCopyObjectCommandError","CopyObjectResult","CopySourceVersionId","deserializeAws_restXmlCopyObjectResult","deserializeAws_restXmlObjectNotInActiveTierErrorResponse","deserializeAws_restXmlCreateBucketCommand","deserializeAws_restXmlCreateBucketCommandError","deserializeAws_restXmlBucketAlreadyExistsResponse","deserializeAws_restXmlBucketAlreadyOwnedByYouResponse","deserializeAws_restXmlCreateMultipartUploadCommand","deserializeAws_restXmlCreateMultipartUploadCommandError","AbortDate","AbortRuleId","deserializeAws_restXmlDeleteBucketCommand","deserializeAws_restXmlDeleteBucketCommandError","deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand","deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError","deserializeAws_restXmlDeleteBucketCorsCommand","deserializeAws_restXmlDeleteBucketCorsCommandError","deserializeAws_restXmlDeleteBucketEncryptionCommand","deserializeAws_restXmlDeleteBucketEncryptionCommandError","deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand","deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError","deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand","deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError","deserializeAws_restXmlDeleteBucketLifecycleCommand","deserializeAws_restXmlDeleteBucketLifecycleCommandError","deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand","deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError","deserializeAws_restXmlDeleteBucketOwnershipControlsCommand","deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError","deserializeAws_restXmlDeleteBucketPolicyCommand","deserializeAws_restXmlDeleteBucketPolicyCommandError","deserializeAws_restXmlDeleteBucketReplicationCommand","deserializeAws_restXmlDeleteBucketReplicationCommandError","deserializeAws_restXmlDeleteBucketTaggingCommand","deserializeAws_restXmlDeleteBucketTaggingCommandError","deserializeAws_restXmlDeleteBucketWebsiteCommand","deserializeAws_restXmlDeleteBucketWebsiteCommandError","deserializeAws_restXmlDeleteObjectCommand","deserializeAws_restXmlDeleteObjectCommandError","deserializeAws_restXmlDeleteObjectsCommand","deserializeAws_restXmlDeleteObjectsCommandError","Deleted","Errors","deserializeAws_restXmlDeletedObjects","deserializeAws_restXmlErrors","deserializeAws_restXmlDeleteObjectTaggingCommand","deserializeAws_restXmlDeleteObjectTaggingCommandError","deserializeAws_restXmlDeletePublicAccessBlockCommand","deserializeAws_restXmlDeletePublicAccessBlockCommandError","deserializeAws_restXmlGetBucketAccelerateConfigurationCommand","deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError","Status","deserializeAws_restXmlGetBucketAclCommand","deserializeAws_restXmlGetBucketAclCommandError","Grants","Owner","AccessControlList","deserializeAws_restXmlGrants","deserializeAws_restXmlOwner","deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand","deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError","deserializeAws_restXmlAnalyticsConfiguration","deserializeAws_restXmlGetBucketCorsCommand","deserializeAws_restXmlGetBucketCorsCommandError","CORSRules","CORSRule","deserializeAws_restXmlCORSRules","deserializeAws_restXmlGetBucketEncryptionCommand","deserializeAws_restXmlGetBucketEncryptionCommandError","deserializeAws_restXmlServerSideEncryptionConfiguration","deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand","deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError","deserializeAws_restXmlIntelligentTieringConfiguration","deserializeAws_restXmlGetBucketInventoryConfigurationCommand","deserializeAws_restXmlGetBucketInventoryConfigurationCommandError","deserializeAws_restXmlInventoryConfiguration","deserializeAws_restXmlGetBucketLifecycleConfigurationCommand","deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError","Rules","Rule","deserializeAws_restXmlLifecycleRules","deserializeAws_restXmlGetBucketLocationCommand","deserializeAws_restXmlGetBucketLocationCommandError","LocationConstraint","deserializeAws_restXmlGetBucketLoggingCommand","deserializeAws_restXmlGetBucketLoggingCommandError","LoggingEnabled","deserializeAws_restXmlLoggingEnabled","deserializeAws_restXmlGetBucketMetricsConfigurationCommand","deserializeAws_restXmlGetBucketMetricsConfigurationCommandError","deserializeAws_restXmlMetricsConfiguration","deserializeAws_restXmlGetBucketNotificationConfigurationCommand","deserializeAws_restXmlGetBucketNotificationConfigurationCommandError","EventBridgeConfiguration","LambdaFunctionConfigurations","QueueConfigurations","TopicConfigurations","deserializeAws_restXmlEventBridgeConfiguration","CloudFunctionConfiguration","deserializeAws_restXmlLambdaFunctionConfigurationList","QueueConfiguration","deserializeAws_restXmlQueueConfigurationList","TopicConfiguration","deserializeAws_restXmlTopicConfigurationList","deserializeAws_restXmlGetBucketOwnershipControlsCommand","deserializeAws_restXmlGetBucketOwnershipControlsCommandError","deserializeAws_restXmlOwnershipControls","deserializeAws_restXmlGetBucketPolicyCommand","deserializeAws_restXmlGetBucketPolicyCommandError","collectBodyString","deserializeAws_restXmlGetBucketPolicyStatusCommand","deserializeAws_restXmlGetBucketPolicyStatusCommandError","PolicyStatus","deserializeAws_restXmlPolicyStatus","deserializeAws_restXmlGetBucketReplicationCommand","deserializeAws_restXmlGetBucketReplicationCommandError","deserializeAws_restXmlReplicationConfiguration","deserializeAws_restXmlGetBucketRequestPaymentCommand","deserializeAws_restXmlGetBucketRequestPaymentCommandError","Payer","deserializeAws_restXmlGetBucketTaggingCommand","deserializeAws_restXmlGetBucketTaggingCommandError","TagSet","deserializeAws_restXmlTagSet","deserializeAws_restXmlGetBucketVersioningCommand","deserializeAws_restXmlGetBucketVersioningCommandError","MFADelete","deserializeAws_restXmlGetBucketWebsiteCommand","deserializeAws_restXmlGetBucketWebsiteCommandError","ErrorDocument","IndexDocument","RedirectAllRequestsTo","RoutingRules","deserializeAws_restXmlErrorDocument","deserializeAws_restXmlIndexDocument","deserializeAws_restXmlRedirectAllRequestsTo","deserializeAws_restXmlRoutingRules","deserializeAws_restXmlGetObjectCommand","deserializeAws_restXmlGetObjectCommandError","forEach","header","startsWith","substring","deserializeAws_restXmlInvalidObjectStateResponse","deserializeAws_restXmlNoSuchKeyResponse","deserializeAws_restXmlGetObjectAclCommand","deserializeAws_restXmlGetObjectAclCommandError","deserializeAws_restXmlGetObjectAttributesCommand","deserializeAws_restXmlGetObjectAttributesCommandError","Checksum","ObjectParts","ObjectSize","deserializeAws_restXmlChecksum","deserializeAws_restXmlGetObjectAttributesParts","deserializeAws_restXmlGetObjectLegalHoldCommand","deserializeAws_restXmlGetObjectLegalHoldCommandError","deserializeAws_restXmlObjectLockLegalHold","deserializeAws_restXmlGetObjectLockConfigurationCommand","deserializeAws_restXmlGetObjectLockConfigurationCommandError","deserializeAws_restXmlObjectLockConfiguration","deserializeAws_restXmlGetObjectRetentionCommand","deserializeAws_restXmlGetObjectRetentionCommandError","deserializeAws_restXmlObjectLockRetention","deserializeAws_restXmlGetObjectTaggingCommand","deserializeAws_restXmlGetObjectTaggingCommandError","deserializeAws_restXmlGetObjectTorrentCommand","deserializeAws_restXmlGetObjectTorrentCommandError","deserializeAws_restXmlGetPublicAccessBlockCommand","deserializeAws_restXmlGetPublicAccessBlockCommandError","deserializeAws_restXmlPublicAccessBlockConfiguration","deserializeAws_restXmlHeadBucketCommand","deserializeAws_restXmlHeadBucketCommandError","deserializeAws_restXmlNotFoundResponse","deserializeAws_restXmlHeadObjectCommand","deserializeAws_restXmlHeadObjectCommandError","ArchiveStatus","deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand","deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError","AnalyticsConfigurationList","IsTruncated","NextContinuationToken","deserializeAws_restXmlAnalyticsConfigurationList","deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand","deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError","IntelligentTieringConfigurationList","deserializeAws_restXmlIntelligentTieringConfigurationList","deserializeAws_restXmlListBucketInventoryConfigurationsCommand","deserializeAws_restXmlListBucketInventoryConfigurationsCommandError","InventoryConfigurationList","deserializeAws_restXmlInventoryConfigurationList","deserializeAws_restXmlListBucketMetricsConfigurationsCommand","deserializeAws_restXmlListBucketMetricsConfigurationsCommandError","MetricsConfigurationList","deserializeAws_restXmlMetricsConfigurationList","deserializeAws_restXmlListBucketsCommand","deserializeAws_restXmlListBucketsCommandError","Buckets","deserializeAws_restXmlBuckets","deserializeAws_restXmlListMultipartUploadsCommand","deserializeAws_restXmlListMultipartUploadsCommandError","CommonPrefixes","NextKeyMarker","NextUploadIdMarker","Uploads","deserializeAws_restXmlCommonPrefixList","Upload","deserializeAws_restXmlMultipartUploadList","deserializeAws_restXmlListObjectsCommand","deserializeAws_restXmlListObjectsCommandError","Contents","Name","NextMarker","deserializeAws_restXmlObjectList","deserializeAws_restXmlNoSuchBucketResponse","deserializeAws_restXmlListObjectsV2Command","deserializeAws_restXmlListObjectsV2CommandError","KeyCount","deserializeAws_restXmlListObjectVersionsCommand","deserializeAws_restXmlListObjectVersionsCommandError","DeleteMarkers","NextVersionIdMarker","Versions","deserializeAws_restXmlDeleteMarkers","Version","deserializeAws_restXmlObjectVersionList","deserializeAws_restXmlListPartsCommand","deserializeAws_restXmlListPartsCommandError","Initiator","NextPartNumberMarker","Parts","deserializeAws_restXmlInitiator","Part","deserializeAws_restXmlParts","deserializeAws_restXmlPutBucketAccelerateConfigurationCommand","deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError","deserializeAws_restXmlPutBucketAclCommand","deserializeAws_restXmlPutBucketAclCommandError","deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand","deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError","deserializeAws_restXmlPutBucketCorsCommand","deserializeAws_restXmlPutBucketCorsCommandError","deserializeAws_restXmlPutBucketEncryptionCommand","deserializeAws_restXmlPutBucketEncryptionCommandError","deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand","deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError","deserializeAws_restXmlPutBucketInventoryConfigurationCommand","deserializeAws_restXmlPutBucketInventoryConfigurationCommandError","deserializeAws_restXmlPutBucketLifecycleConfigurationCommand","deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError","deserializeAws_restXmlPutBucketLoggingCommand","deserializeAws_restXmlPutBucketLoggingCommandError","deserializeAws_restXmlPutBucketMetricsConfigurationCommand","deserializeAws_restXmlPutBucketMetricsConfigurationCommandError","deserializeAws_restXmlPutBucketNotificationConfigurationCommand","deserializeAws_restXmlPutBucketNotificationConfigurationCommandError","deserializeAws_restXmlPutBucketOwnershipControlsCommand","deserializeAws_restXmlPutBucketOwnershipControlsCommandError","deserializeAws_restXmlPutBucketPolicyCommand","deserializeAws_restXmlPutBucketPolicyCommandError","deserializeAws_restXmlPutBucketReplicationCommand","deserializeAws_restXmlPutBucketReplicationCommandError","deserializeAws_restXmlPutBucketRequestPaymentCommand","deserializeAws_restXmlPutBucketRequestPaymentCommandError","deserializeAws_restXmlPutBucketTaggingCommand","deserializeAws_restXmlPutBucketTaggingCommandError","deserializeAws_restXmlPutBucketVersioningCommand","deserializeAws_restXmlPutBucketVersioningCommandError","deserializeAws_restXmlPutBucketWebsiteCommand","deserializeAws_restXmlPutBucketWebsiteCommandError","deserializeAws_restXmlPutObjectCommand","deserializeAws_restXmlPutObjectCommandError","deserializeAws_restXmlPutObjectAclCommand","deserializeAws_restXmlPutObjectAclCommandError","deserializeAws_restXmlPutObjectLegalHoldCommand","deserializeAws_restXmlPutObjectLegalHoldCommandError","deserializeAws_restXmlPutObjectLockConfigurationCommand","deserializeAws_restXmlPutObjectLockConfigurationCommandError","deserializeAws_restXmlPutObjectRetentionCommand","deserializeAws_restXmlPutObjectRetentionCommandError","deserializeAws_restXmlPutObjectTaggingCommand","deserializeAws_restXmlPutObjectTaggingCommandError","deserializeAws_restXmlPutPublicAccessBlockCommand","deserializeAws_restXmlPutPublicAccessBlockCommandError","deserializeAws_restXmlRestoreObjectCommand","deserializeAws_restXmlRestoreObjectCommandError","RestoreOutputPath","deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse","deserializeAws_restXmlSelectObjectContentCommand","deserializeAws_restXmlSelectObjectContentCommandError","Payload","eventStreamMarshaller","deserialize","event","eventName","eventHeaders","eventMessage","parsedEvent","entries","accummulator","curr","value","deserializeAws_restXmlSelectObjectContentEventStream_event","deserializeAws_restXmlUploadPartCommand","deserializeAws_restXmlUploadPartCommandError","deserializeAws_restXmlUploadPartCopyCommand","deserializeAws_restXmlUploadPartCopyCommandError","CopyPartResult","deserializeAws_restXmlCopyPartResult","deserializeAws_restXmlWriteGetObjectResponseCommand","deserializeAws_restXmlWriteGetObjectResponseCommandError","_e","_f","deserializeAws_restXmlRecordsEvent_event","Records","deserializeAws_restXmlStatsEvent_event","Stats","deserializeAws_restXmlProgressEvent_event","Progress","deserializeAws_restXmlContinuationEvent_event","Cont","deserializeAws_restXmlEndEvent_event","End","$unknown","Details","exception","AccessTier","serializeAws_restXmlAbortIncompleteMultipartUpload","DaysAfterInitiation","String","nodes","serializeAws_restXmlGrants","containerNode_1","serializeAws_restXmlOwner","serializeAws_restXmlAccessControlTranslation","serializeAws_restXmlAllowedHeaders","filter","e","entry","serializeAws_restXmlAllowedMethods","serializeAws_restXmlAllowedOrigins","serializeAws_restXmlAnalyticsAndOperator","Tags","serializeAws_restXmlTagSet","Filter","serializeAws_restXmlAnalyticsFilter","StorageClassAnalysis","serializeAws_restXmlStorageClassAnalysis","serializeAws_restXmlAnalyticsExportDestination","S3BucketDestination","serializeAws_restXmlAnalyticsS3BucketDestination","visit","Tag","serializeAws_restXmlTag","And","_","Format","BucketAccountId","serializeAws_restXmlLifecycleRules","serializeAws_restXmlLoggingEnabled","serializeAws_restXmlCompletedPartList","serializeAws_restXmlCompletedPart","serializeAws_restXmlCondition","HttpErrorCodeReturnedEquals","KeyPrefixEquals","serializeAws_restXmlCORSRules","serializeAws_restXmlCORSRule","ID","AllowedHeaders","AllowedMethods","AllowedOrigins","ExposeHeaders","serializeAws_restXmlExposeHeaders","MaxAgeSeconds","serializeAws_restXmlCSVInput","FileHeaderInfo","Comments","QuoteEscapeCharacter","RecordDelimiter","FieldDelimiter","QuoteCharacter","AllowQuotedRecordDelimiter","serializeAws_restXmlCSVOutput","QuoteFields","serializeAws_restXmlDefaultRetention","Mode","Days","Years","Objects","serializeAws_restXmlObjectIdentifierList","Quiet","serializeAws_restXmlDeleteMarkerReplication","serializeAws_restXmlDestination","Account","AccessControlTranslation","EncryptionConfiguration","serializeAws_restXmlEncryptionConfiguration","ReplicationTime","serializeAws_restXmlReplicationTime","Metrics","serializeAws_restXmlMetrics","serializeAws_restXmlEncryption","EncryptionType","KMSKeyId","KMSContext","ReplicaKmsKeyID","serializeAws_restXmlErrorDocument","serializeAws_restXmlEventBridgeConfiguration","serializeAws_restXmlEventList","serializeAws_restXmlExistingObjectReplication","serializeAws_restXmlFilterRule","Value","serializeAws_restXmlFilterRuleList","serializeAws_restXmlGlacierJobParameters","Tier","serializeAws_restXmlGrant","Grantee","serializeAws_restXmlGrantee","Permission","DisplayName","EmailAddress","URI","Type","serializeAws_restXmlIndexDocument","Suffix","CSV","CompressionType","JSON","serializeAws_restXmlJSONInput","Parquet","serializeAws_restXmlParquetInput","serializeAws_restXmlIntelligentTieringAndOperator","serializeAws_restXmlIntelligentTieringFilter","Tierings","serializeAws_restXmlTieringList","Destination","serializeAws_restXmlInventoryDestination","IsEnabled","serializeAws_restXmlInventoryFilter","IncludedObjectVersions","OptionalFields","serializeAws_restXmlInventoryOptionalFields","containerNode_2","Schedule","serializeAws_restXmlInventorySchedule","serializeAws_restXmlInventoryS3BucketDestination","serializeAws_restXmlInventoryEncryption","SSES3","serializeAws_restXmlSSES3","SSEKMS","serializeAws_restXmlSSEKMS","AccountId","Encryption","Frequency","serializeAws_restXmlJSONOutput","serializeAws_restXmlLambdaFunctionConfiguration","LambdaFunctionArn","Events","serializeAws_restXmlNotificationConfigurationFilter","serializeAws_restXmlLambdaFunctionConfigurationList","serializeAws_restXmlLifecycleExpiration","Date","ExpiredObjectDeleteMarker","serializeAws_restXmlLifecycleRule","serializeAws_restXmlLifecycleRuleFilter","Transitions","serializeAws_restXmlTransitionList","NoncurrentVersionTransitions","serializeAws_restXmlNoncurrentVersionTransitionList","NoncurrentVersionExpiration","serializeAws_restXmlNoncurrentVersionExpiration","AbortIncompleteMultipartUpload","serializeAws_restXmlLifecycleRuleAndOperator","ObjectSizeGreaterThan","ObjectSizeLessThan","TargetBucket","TargetGrants","serializeAws_restXmlTargetGrants","containerNode_3","TargetPrefix","serializeAws_restXmlMetadataEntry","EventThreshold","serializeAws_restXmlReplicationTimeValue","serializeAws_restXmlMetricsAndOperator","AccessPointArn","serializeAws_restXmlMetricsFilter","NoncurrentDays","NewerNoncurrentVersions","serializeAws_restXmlNoncurrentVersionTransition","serializeAws_restXmlTopicConfigurationList","serializeAws_restXmlQueueConfigurationList","serializeAws_restXmlS3KeyFilter","serializeAws_restXmlObjectIdentifier","ObjectLockEnabled","serializeAws_restXmlObjectLockRule","RetainUntilDate","DefaultRetention","serializeAws_restXmlOutputLocation","S3","serializeAws_restXmlS3Location","serializeAws_restXmlOwnershipControlsRules","serializeAws_restXmlOwnershipControlsRule","BlockPublicAcls","IgnorePublicAcls","BlockPublicPolicy","RestrictPublicBuckets","serializeAws_restXmlQueueConfiguration","QueueArn","serializeAws_restXmlRedirect","HostName","HttpRedirectCode","Protocol","ReplaceKeyPrefixWith","ReplaceKeyWith","serializeAws_restXmlRedirectAllRequestsTo","serializeAws_restXmlReplicaModifications","Role","serializeAws_restXmlReplicationRules","serializeAws_restXmlReplicationRule","Priority","serializeAws_restXmlReplicationRuleFilter","SourceSelectionCriteria","serializeAws_restXmlSourceSelectionCriteria","ExistingObjectReplication","DeleteMarkerReplication","serializeAws_restXmlReplicationRuleAndOperator","Time","Minutes","Enabled","GlacierJobParameters","Description","SelectParameters","serializeAws_restXmlSelectParameters","OutputLocation","serializeAws_restXmlRoutingRule","Condition","Redirect","serializeAws_restXmlRoutingRules","FilterRules","BucketName","CannedACL","containerNode_4","UserMetadata","serializeAws_restXmlUserMetadata","containerNode_5","Start","serializeAws_restXmlServerSideEncryptionByDefault","SSEAlgorithm","KMSMasterKeyID","serializeAws_restXmlServerSideEncryptionRules","serializeAws_restXmlServerSideEncryptionRule","ApplyServerSideEncryptionByDefault","SseKmsEncryptedObjects","serializeAws_restXmlSseKmsEncryptedObjects","ReplicaModifications","KeyId","DataExport","serializeAws_restXmlStorageClassAnalysisDataExport","OutputSchemaVersion","containerNode_6","serializeAws_restXmlTargetGrant","serializeAws_restXmlTiering","serializeAws_restXmlTopicConfiguration","TopicArn","serializeAws_restXmlTransition","containerNode_7","deserializeAws_restXmlAbortIncompleteMultipartUpload","deserializeAws_restXmlAccessControlTranslation","deserializeAws_restXmlAllowedHeaders","deserializeAws_restXmlAllowedMethods","deserializeAws_restXmlAllowedOrigins","deserializeAws_restXmlAnalyticsAndOperator","deserializeAws_restXmlAnalyticsFilter","deserializeAws_restXmlStorageClassAnalysis","deserializeAws_restXmlAnalyticsExportDestination","deserializeAws_restXmlAnalyticsS3BucketDestination","deserializeAws_restXmlTag","deserializeAws_restXmlBucket","CreationDate","deserializeAws_restXmlChecksumAlgorithmList","deserializeAws_restXmlCommonPrefix","deserializeAws_restXmlCondition","deserializeAws_restXmlContinuationEvent","deserializeAws_restXmlCORSRule","AllowedHeader","AllowedMethod","AllowedOrigin","ExposeHeader","deserializeAws_restXmlExposeHeaders","deserializeAws_restXmlDefaultRetention","deserializeAws_restXmlDeletedObject","DeleteMarkerVersionId","deserializeAws_restXmlDeleteMarkerEntry","IsLatest","deserializeAws_restXmlDeleteMarkerReplication","deserializeAws_restXmlDestination","deserializeAws_restXmlEncryptionConfiguration","deserializeAws_restXmlReplicationTime","deserializeAws_restXmlMetrics","deserializeAws_restXmlEndEvent","deserializeAws_restXml_Error","Message","deserializeAws_restXmlEventList","deserializeAws_restXmlExistingObjectReplication","deserializeAws_restXmlFilterRule","deserializeAws_restXmlFilterRuleList","TotalPartsCount","deserializeAws_restXmlPartsList","deserializeAws_restXmlGrant","deserializeAws_restXmlGrantee","deserializeAws_restXmlIntelligentTieringAndOperator","deserializeAws_restXmlIntelligentTieringFilter","Tiering","deserializeAws_restXmlTieringList","deserializeAws_restXmlInventoryDestination","deserializeAws_restXmlInventoryFilter","deserializeAws_restXmlInventoryOptionalFields","deserializeAws_restXmlInventorySchedule","deserializeAws_restXmlInventoryS3BucketDestination","deserializeAws_restXmlInventoryEncryption","deserializeAws_restXmlSSES3","deserializeAws_restXmlSSEKMS","deserializeAws_restXmlLambdaFunctionConfiguration","Event","deserializeAws_restXmlNotificationConfigurationFilter","deserializeAws_restXmlLifecycleExpiration","deserializeAws_restXmlLifecycleRule","deserializeAws_restXmlLifecycleRuleFilter","Transition","deserializeAws_restXmlTransitionList","NoncurrentVersionTransition","deserializeAws_restXmlNoncurrentVersionTransitionList","deserializeAws_restXmlNoncurrentVersionExpiration","deserializeAws_restXmlLifecycleRuleAndOperator","deserializeAws_restXmlTargetGrants","deserializeAws_restXmlReplicationTimeValue","deserializeAws_restXmlMetricsAndOperator","deserializeAws_restXmlMetricsFilter","deserializeAws_restXmlMultipartUpload","Initiated","deserializeAws_restXmlNoncurrentVersionTransition","deserializeAws_restXmlS3KeyFilter","deserializeAws_restXml_Object","Size","deserializeAws_restXmlObjectLockRule","deserializeAws_restXmlObjectPart","deserializeAws_restXmlObjectVersion","deserializeAws_restXmlOwnershipControlsRules","deserializeAws_restXmlOwnershipControlsRule","deserializeAws_restXmlPart","IsPublic","deserializeAws_restXmlProgress","BytesScanned","BytesProcessed","BytesReturned","deserializeAws_restXmlProgressEvent","deserializeAws_restXmlQueueConfiguration","deserializeAws_restXmlRecordsEvent","base64Decoder","deserializeAws_restXmlRedirect","deserializeAws_restXmlReplicaModifications","deserializeAws_restXmlReplicationRules","deserializeAws_restXmlReplicationRule","deserializeAws_restXmlReplicationRuleFilter","deserializeAws_restXmlSourceSelectionCriteria","deserializeAws_restXmlReplicationRuleAndOperator","deserializeAws_restXmlRoutingRule","FilterRule","deserializeAws_restXmlSelectObjectContentEventStream","deserializeAws_restXmlStatsEvent","deserializeAws_restXmlServerSideEncryptionByDefault","deserializeAws_restXmlServerSideEncryptionRules","deserializeAws_restXmlServerSideEncryptionRule","deserializeAws_restXmlSseKmsEncryptedObjects","deserializeAws_restXmlStats","deserializeAws_restXmlStorageClassAnalysisDataExport","deserializeAws_restXmlTargetGrant","deserializeAws_restXmlTiering","deserializeAws_restXmlTopicConfiguration","deserializeAws_restXmlTransition","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","then","utf8Encoder","getOwnPropertyNames","includes","size","encoded","parsedObj","attributeNamePrefix","ignoreAttributes","parseNodeValue","trimValues","tagValueProcessor","val","trim","textNodeName","key","parsedObjToReturn"],"sources":["C:/Users/param/OneDrive/Documents/sem3/client/node_modules/@aws-sdk/client-s3/dist-es/protocols/Aws_restXml.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest, isValidHostname as __isValidHostname, } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, expectUnion as __expectUnion, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode, parseBoolean as __parseBoolean, parseRfc3339DateTime as __parseRfc3339DateTime, parseRfc7231DateTime as __parseRfc7231DateTime, strictParseInt32 as __strictParseInt32, strictParseLong as __strictParseLong, } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { decodeHTML } from \"entities\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nimport { AnalyticsFilter, BucketAlreadyExists, BucketAlreadyOwnedByYou, InvalidObjectState, LifecycleRuleFilter, MetricsFilter, NoSuchBucket, NoSuchKey, NoSuchUpload, NotFound, ObjectNotInActiveTierError, ReplicationRuleFilter, } from \"../models/models_0\";\nimport { ObjectAlreadyInActiveTierError, } from \"../models/models_1\";\nimport { S3ServiceException as __BaseException } from \"../models/S3ServiceException\";\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"x-id\": \"AbortMultipartUpload\" }, (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ChecksumCRC32) && { \"x-amz-checksum-crc32\": input.ChecksumCRC32 })), (isSerializableHeaderValue(input.ChecksumCRC32C) && { \"x-amz-checksum-crc32c\": input.ChecksumCRC32C })), (isSerializableHeaderValue(input.ChecksumSHA1) && { \"x-amz-checksum-sha1\": input.ChecksumSHA1 })), (isSerializableHeaderValue(input.ChecksumSHA256) && { \"x-amz-checksum-sha256\": input.ChecksumSHA256 })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"x-id\": \"CompleteMultipartUpload\" }, (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                if (input.MultipartUpload !== undefined) {\n                    body = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n                }\n                if (input.MultipartUpload !== undefined) {\n                    contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n                    contents = contents.withName(\"CompleteMultipartUpload\");\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCopyObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && { \"x-amz-checksum-algorithm\": input.ChecksumAlgorithm })), (isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType })), (isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {\n                    \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n                    \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n                    \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n                    \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.MetadataDirective) && { \"x-amz-metadata-directive\": input.MetadataDirective })), (isSerializableHeaderValue(input.TaggingDirective) && { \"x-amz-tagging-directive\": input.TaggingDirective })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n                })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n                    \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\".concat(suffix.toLowerCase())] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    \"x-id\": \"CopyObject\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCreateBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n                    \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString(),\n                })), (isSerializableHeaderValue(input.ObjectOwnership) && { \"x-amz-object-ownership\": input.ObjectOwnership }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.CreateBucketConfiguration !== undefined) {\n                    body = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n                }\n                if (input.CreateBucketConfiguration !== undefined) {\n                    contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType })), (isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n                })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && { \"x-amz-checksum-algorithm\": input.ChecksumAlgorithm })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\".concat(suffix.toLowerCase())] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    uploads: \"\",\n                    \"x-id\": \"CreateMultipartUpload\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    cors: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    encryption: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    lifecycle: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    ownershipControls: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policy: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    replication: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    tagging: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    website: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"x-id\": \"DeleteObject\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteObjectsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    delete: \"\",\n                    \"x-id\": \"DeleteObjects\",\n                };\n                if (input.Delete !== undefined) {\n                    body = serializeAws_restXmlDelete(input.Delete, context);\n                }\n                if (input.Delete !== undefined) {\n                    contents = serializeAws_restXmlDelete(input.Delete, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    publicAccessBlock: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    accelerate: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    acl: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\", \"x-id\": \"GetBucketAnalyticsConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    cors: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    encryption: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\", \"x-id\": \"GetBucketIntelligentTieringConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\", \"x-id\": \"GetBucketInventoryConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    lifecycle: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketLocationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    location: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketLoggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    logging: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\", \"x-id\": \"GetBucketMetricsConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    notification: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketOwnershipControlsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    ownershipControls: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policy: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policyStatus: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    replication: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    requestPayment: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    tagging: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketVersioningCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    versioning: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    website: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.IfMatch) && { \"if-match\": input.IfMatch })), (isSerializableHeaderValue(input.IfModifiedSince) && {\n                    \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.IfNoneMatch) && { \"if-none-match\": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n                    \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.Range) && { range: input.Range })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ChecksumMode) && { \"x-amz-checksum-mode\": input.ChecksumMode }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"x-id\": \"GetObject\" }, (input.ResponseCacheControl !== undefined && { \"response-cache-control\": input.ResponseCacheControl })), (input.ResponseContentDisposition !== undefined && {\n                    \"response-content-disposition\": input.ResponseContentDisposition,\n                })), (input.ResponseContentEncoding !== undefined && { \"response-content-encoding\": input.ResponseContentEncoding })), (input.ResponseContentLanguage !== undefined && { \"response-content-language\": input.ResponseContentLanguage })), (input.ResponseContentType !== undefined && { \"response-content-type\": input.ResponseContentType })), (input.ResponseExpires !== undefined && {\n                    \"response-expires\": __dateToUtcString(input.ResponseExpires).toString(),\n                })), (input.VersionId !== undefined && { versionId: input.VersionId })), (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ acl: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.MaxParts) && { \"x-amz-max-parts\": input.MaxParts.toString() })), (isSerializableHeaderValue(input.PartNumberMarker) && { \"x-amz-part-number-marker\": input.PartNumberMarker })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ObjectAttributes) && {\n                    \"x-amz-object-attributes\": (input.ObjectAttributes || []).map(function (_entry) { return _entry; }).join(\", \"),\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ attributes: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"legal-hold\": \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    \"object-lock\": \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectRetentionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ retention: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectTorrentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    torrent: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    publicAccessBlock: \"\",\n                };\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlHeadBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"HEAD\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlHeadObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.IfMatch) && { \"if-match\": input.IfMatch })), (isSerializableHeaderValue(input.IfModifiedSince) && {\n                    \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.IfNoneMatch) && { \"if-none-match\": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n                    \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.Range) && { range: input.Range })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ChecksumMode) && { \"x-amz-checksum-mode\": input.ChecksumMode }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign({}, (input.VersionId !== undefined && { versionId: input.VersionId })), (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"HEAD\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\", \"x-id\": \"ListBucketAnalyticsConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\", \"x-id\": \"ListBucketIntelligentTieringConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\", \"x-id\": \"ListBucketInventoryConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\", \"x-id\": \"ListBucketMetricsConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/xml\",\n                };\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/\";\n                body = \"\";\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListMultipartUploadsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign({ uploads: \"\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker })), (input.MaxUploads !== undefined && { \"max-uploads\": input.MaxUploads.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.UploadIdMarker !== undefined && { \"upload-id-marker\": input.UploadIdMarker }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListObjectsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign({}, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.Marker !== undefined && { marker: input.Marker })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListObjectsV2Command = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"list-type\": \"2\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken })), (input.FetchOwner !== undefined && { \"fetch-owner\": input.FetchOwner.toString() })), (input.StartAfter !== undefined && { \"start-after\": input.StartAfter }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListObjectVersionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign({ versions: \"\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.VersionIdMarker !== undefined && { \"version-id-marker\": input.VersionIdMarker }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListPartsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign(__assign({ \"x-id\": \"ListParts\" }, (input.MaxParts !== undefined && { \"max-parts\": input.MaxParts.toString() })), (input.PartNumberMarker !== undefined && { \"part-number-marker\": input.PartNumberMarker })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    accelerate: \"\",\n                };\n                if (input.AccelerateConfiguration !== undefined) {\n                    body = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n                }\n                if (input.AccelerateConfiguration !== undefined) {\n                    contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    acl: \"\",\n                };\n                if (input.AccessControlPolicy !== undefined) {\n                    body = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                }\n                if (input.AccessControlPolicy !== undefined) {\n                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.AnalyticsConfiguration !== undefined) {\n                    body = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n                }\n                if (input.AnalyticsConfiguration !== undefined) {\n                    contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    cors: \"\",\n                };\n                if (input.CORSConfiguration !== undefined) {\n                    body = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n                }\n                if (input.CORSConfiguration !== undefined) {\n                    contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    encryption: \"\",\n                };\n                if (input.ServerSideEncryptionConfiguration !== undefined) {\n                    body = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n                }\n                if (input.ServerSideEncryptionConfiguration !== undefined) {\n                    contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/xml\",\n                };\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.IntelligentTieringConfiguration !== undefined) {\n                    body = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n                }\n                if (input.IntelligentTieringConfiguration !== undefined) {\n                    contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.InventoryConfiguration !== undefined) {\n                    body = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n                }\n                if (input.InventoryConfiguration !== undefined) {\n                    contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    lifecycle: \"\",\n                };\n                if (input.LifecycleConfiguration !== undefined) {\n                    body = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n                }\n                if (input.LifecycleConfiguration !== undefined) {\n                    contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n                    contents = contents.withName(\"LifecycleConfiguration\");\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketLoggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    logging: \"\",\n                };\n                if (input.BucketLoggingStatus !== undefined) {\n                    body = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n                }\n                if (input.BucketLoggingStatus !== undefined) {\n                    contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.MetricsConfiguration !== undefined) {\n                    body = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n                }\n                if (input.MetricsConfiguration !== undefined) {\n                    contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.SkipDestinationValidation) && {\n                    \"x-amz-skip-destination-validation\": input.SkipDestinationValidation.toString(),\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    notification: \"\",\n                };\n                if (input.NotificationConfiguration !== undefined) {\n                    body = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n                }\n                if (input.NotificationConfiguration !== undefined) {\n                    contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketOwnershipControlsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    ownershipControls: \"\",\n                };\n                if (input.OwnershipControls !== undefined) {\n                    body = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n                }\n                if (input.OwnershipControls !== undefined) {\n                    contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"text/plain\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n                    \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString(),\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policy: \"\",\n                };\n                if (input.Policy !== undefined) {\n                    body = input.Policy;\n                }\n                if (input.Policy !== undefined) {\n                    contents = input.Policy;\n                    body = contents;\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    replication: \"\",\n                };\n                if (input.ReplicationConfiguration !== undefined) {\n                    body = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n                }\n                if (input.ReplicationConfiguration !== undefined) {\n                    contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    requestPayment: \"\",\n                };\n                if (input.RequestPaymentConfiguration !== undefined) {\n                    body = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n                }\n                if (input.RequestPaymentConfiguration !== undefined) {\n                    contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    tagging: \"\",\n                };\n                if (input.Tagging !== undefined) {\n                    body = serializeAws_restXmlTagging(input.Tagging, context);\n                }\n                if (input.Tagging !== undefined) {\n                    contents = serializeAws_restXmlTagging(input.Tagging, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketVersioningCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    versioning: \"\",\n                };\n                if (input.VersioningConfiguration !== undefined) {\n                    body = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n                }\n                if (input.VersioningConfiguration !== undefined) {\n                    contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    website: \"\",\n                };\n                if (input.WebsiteConfiguration !== undefined) {\n                    body = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n                }\n                if (input.WebsiteConfiguration !== undefined) {\n                    contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/octet-stream\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ChecksumCRC32) && { \"x-amz-checksum-crc32\": input.ChecksumCRC32 })), (isSerializableHeaderValue(input.ChecksumCRC32C) && { \"x-amz-checksum-crc32c\": input.ChecksumCRC32C })), (isSerializableHeaderValue(input.ChecksumSHA1) && { \"x-amz-checksum-sha1\": input.ChecksumSHA1 })), (isSerializableHeaderValue(input.ChecksumSHA256) && { \"x-amz-checksum-sha256\": input.ChecksumSHA256 })), (isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n                })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\".concat(suffix.toLowerCase())] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    \"x-id\": \"PutObject\",\n                };\n                if (input.Body !== undefined) {\n                    body = input.Body;\n                }\n                if (input.Body !== undefined) {\n                    contents = input.Body;\n                    body = contents;\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ acl: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.AccessControlPolicy !== undefined) {\n                    body = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                }\n                if (input.AccessControlPolicy !== undefined) {\n                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"legal-hold\": \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.LegalHold !== undefined) {\n                    body = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n                }\n                if (input.LegalHold !== undefined) {\n                    contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n                    contents = contents.withName(\"LegalHold\");\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    \"object-lock\": \"\",\n                };\n                if (input.ObjectLockConfiguration !== undefined) {\n                    body = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n                }\n                if (input.ObjectLockConfiguration !== undefined) {\n                    contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectRetentionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\n                })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ retention: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.Retention !== undefined) {\n                    body = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n                }\n                if (input.Retention !== undefined) {\n                    contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n                    contents = contents.withName(\"Retention\");\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.Tagging !== undefined) {\n                    body = serializeAws_restXmlTagging(input.Tagging, context);\n                }\n                if (input.Tagging !== undefined) {\n                    contents = serializeAws_restXmlTagging(input.Tagging, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    publicAccessBlock: \"\",\n                };\n                if (input.PublicAccessBlockConfiguration !== undefined) {\n                    body = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n                }\n                if (input.PublicAccessBlockConfiguration !== undefined) {\n                    contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlRestoreObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ restore: \"\", \"x-id\": \"RestoreObject\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.RestoreRequest !== undefined) {\n                    body = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n                }\n                if (input.RestoreRequest !== undefined) {\n                    contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlSelectObjectContentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    select: \"\",\n                    \"select-type\": \"2\",\n                    \"x-id\": \"SelectObjectContent\",\n                };\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n                bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                if (input.Expression !== undefined) {\n                    node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.ExpressionType !== undefined) {\n                    node = new __XmlNode(\"ExpressionType\")\n                        .addChildNode(new __XmlText(input.ExpressionType))\n                        .withName(\"ExpressionType\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.InputSerialization !== undefined) {\n                    node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.OutputSerialization !== undefined) {\n                    node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.RequestProgress !== undefined) {\n                    node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.ScanRange !== undefined) {\n                    node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n                    bodyNode.addChildNode(node);\n                }\n                body += bodyNode.toString();\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlUploadPartCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/octet-stream\" }, (isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ChecksumAlgorithm) && {\n                    \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n                })), (isSerializableHeaderValue(input.ChecksumCRC32) && { \"x-amz-checksum-crc32\": input.ChecksumCRC32 })), (isSerializableHeaderValue(input.ChecksumCRC32C) && { \"x-amz-checksum-crc32c\": input.ChecksumCRC32C })), (isSerializableHeaderValue(input.ChecksumSHA1) && { \"x-amz-checksum-sha1\": input.ChecksumSHA1 })), (isSerializableHeaderValue(input.ChecksumSHA256) && { \"x-amz-checksum-sha256\": input.ChecksumSHA256 })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign({ \"x-id\": \"UploadPart\" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                if (input.Body !== undefined) {\n                    body = input.Body;\n                }\n                if (input.Body !== undefined) {\n                    contents = input.Body;\n                    body = contents;\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlUploadPartCopyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {\n                    \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n                    \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n                    \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n                    \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.CopySourceRange) && { \"x-amz-copy-source-range\": input.CopySourceRange })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n                    \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n                }));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign({ \"x-id\": \"UploadPartCopy\" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlWriteGetObjectResponseCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body, contents, resolvedHostname;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/octet-stream\", \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\" }, (isSerializableHeaderValue(input.RequestRoute) && { \"x-amz-request-route\": input.RequestRoute })), (isSerializableHeaderValue(input.RequestToken) && { \"x-amz-request-token\": input.RequestToken })), (isSerializableHeaderValue(input.StatusCode) && { \"x-amz-fwd-status\": input.StatusCode.toString() })), (isSerializableHeaderValue(input.ErrorCode) && { \"x-amz-fwd-error-code\": input.ErrorCode })), (isSerializableHeaderValue(input.ErrorMessage) && { \"x-amz-fwd-error-message\": input.ErrorMessage })), (isSerializableHeaderValue(input.AcceptRanges) && { \"x-amz-fwd-header-accept-ranges\": input.AcceptRanges })), (isSerializableHeaderValue(input.CacheControl) && { \"x-amz-fwd-header-cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && {\n                    \"x-amz-fwd-header-content-disposition\": input.ContentDisposition,\n                })), (isSerializableHeaderValue(input.ContentEncoding) && {\n                    \"x-amz-fwd-header-content-encoding\": input.ContentEncoding,\n                })), (isSerializableHeaderValue(input.ContentLanguage) && {\n                    \"x-amz-fwd-header-content-language\": input.ContentLanguage,\n                })), (isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentRange) && { \"x-amz-fwd-header-content-range\": input.ContentRange })), (isSerializableHeaderValue(input.ContentType) && { \"x-amz-fwd-header-content-type\": input.ContentType })), (isSerializableHeaderValue(input.ChecksumCRC32) && {\n                    \"x-amz-fwd-header-x-amz-checksum-crc32\": input.ChecksumCRC32,\n                })), (isSerializableHeaderValue(input.ChecksumCRC32C) && {\n                    \"x-amz-fwd-header-x-amz-checksum-crc32c\": input.ChecksumCRC32C,\n                })), (isSerializableHeaderValue(input.ChecksumSHA1) && {\n                    \"x-amz-fwd-header-x-amz-checksum-sha1\": input.ChecksumSHA1,\n                })), (isSerializableHeaderValue(input.ChecksumSHA256) && {\n                    \"x-amz-fwd-header-x-amz-checksum-sha256\": input.ChecksumSHA256,\n                })), (isSerializableHeaderValue(input.DeleteMarker) && {\n                    \"x-amz-fwd-header-x-amz-delete-marker\": input.DeleteMarker.toString(),\n                })), (isSerializableHeaderValue(input.ETag) && { \"x-amz-fwd-header-etag\": input.ETag })), (isSerializableHeaderValue(input.Expires) && {\n                    \"x-amz-fwd-header-expires\": __dateToUtcString(input.Expires).toString(),\n                })), (isSerializableHeaderValue(input.Expiration) && { \"x-amz-fwd-header-x-amz-expiration\": input.Expiration })), (isSerializableHeaderValue(input.LastModified) && {\n                    \"x-amz-fwd-header-last-modified\": __dateToUtcString(input.LastModified).toString(),\n                })), (isSerializableHeaderValue(input.MissingMeta) && {\n                    \"x-amz-fwd-header-x-amz-missing-meta\": input.MissingMeta.toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockMode) && {\n                    \"x-amz-fwd-header-x-amz-object-lock-mode\": input.ObjectLockMode,\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-fwd-header-x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-fwd-header-x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.PartsCount) && {\n                    \"x-amz-fwd-header-x-amz-mp-parts-count\": input.PartsCount.toString(),\n                })), (isSerializableHeaderValue(input.ReplicationStatus) && {\n                    \"x-amz-fwd-header-x-amz-replication-status\": input.ReplicationStatus,\n                })), (isSerializableHeaderValue(input.RequestCharged) && {\n                    \"x-amz-fwd-header-x-amz-request-charged\": input.RequestCharged,\n                })), (isSerializableHeaderValue(input.Restore) && { \"x-amz-fwd-header-x-amz-restore\": input.Restore })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.StorageClass) && {\n                    \"x-amz-fwd-header-x-amz-storage-class\": input.StorageClass,\n                })), (isSerializableHeaderValue(input.TagCount) && {\n                    \"x-amz-fwd-header-x-amz-tagging-count\": input.TagCount.toString(),\n                })), (isSerializableHeaderValue(input.VersionId) && { \"x-amz-fwd-header-x-amz-version-id\": input.VersionId })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\".concat(suffix.toLowerCase())] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/WriteGetObjectResponse\";\n                query = {\n                    \"x-id\": \"WriteGetObjectResponse\",\n                };\n                if (input.Body !== undefined) {\n                    body = input.Body;\n                }\n                if (input.Body !== undefined) {\n                    contents = input.Body;\n                    body = contents;\n                }\n                return [4, context.endpoint()];\n            case 2:\n                resolvedHostname = (_c.sent()).hostname;\n                if (context.disableHostPrefix !== true) {\n                    resolvedHostname = \"{RequestRoute}.\" + resolvedHostname;\n                    if (input.RequestRoute === undefined) {\n                        throw new Error(\"Empty value provided for input host prefix: RequestRoute.\");\n                    }\n                    resolvedHostname = resolvedHostname.replace(\"{RequestRoute}\", input.RequestRoute);\n                    if (!__isValidHostname(resolvedHostname)) {\n                        throw new Error(\"ValidationError: prefixed hostname must be hostname compatible.\");\n                    }\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: resolvedHostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchUpload\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchUpload\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Bucket: undefined,\n                    BucketKeyEnabled: undefined,\n                    ChecksumCRC32: undefined,\n                    ChecksumCRC32C: undefined,\n                    ChecksumSHA1: undefined,\n                    ChecksumSHA256: undefined,\n                    ETag: undefined,\n                    Expiration: undefined,\n                    Key: undefined,\n                    Location: undefined,\n                    RequestCharged: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = __expectString(data[\"Bucket\"]);\n                }\n                if (data[\"ChecksumCRC32\"] !== undefined) {\n                    contents.ChecksumCRC32 = __expectString(data[\"ChecksumCRC32\"]);\n                }\n                if (data[\"ChecksumCRC32C\"] !== undefined) {\n                    contents.ChecksumCRC32C = __expectString(data[\"ChecksumCRC32C\"]);\n                }\n                if (data[\"ChecksumSHA1\"] !== undefined) {\n                    contents.ChecksumSHA1 = __expectString(data[\"ChecksumSHA1\"]);\n                }\n                if (data[\"ChecksumSHA256\"] !== undefined) {\n                    contents.ChecksumSHA256 = __expectString(data[\"ChecksumSHA256\"]);\n                }\n                if (data[\"ETag\"] !== undefined) {\n                    contents.ETag = __expectString(data[\"ETag\"]);\n                }\n                if (data[\"Key\"] !== undefined) {\n                    contents.Key = __expectString(data[\"Key\"]);\n                }\n                if (data[\"Location\"] !== undefined) {\n                    contents.Location = __expectString(data[\"Location\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCopyObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlCopyObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    CopyObjectResult: undefined,\n                    CopySourceVersionId: undefined,\n                    Expiration: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSEncryptionContext: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n                    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCopyObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ObjectNotInActiveTierError\": return [3, 2];\n                    case \"com.amazonaws.s3#ObjectNotInActiveTierError\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCreateBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlCreateBucketCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Location: undefined,\n                };\n                if (output.headers[\"location\"] !== undefined) {\n                    contents.Location = output.headers[\"location\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCreateBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BucketAlreadyExists\": return [3, 2];\n                    case \"com.amazonaws.s3#BucketAlreadyExists\": return [3, 2];\n                    case \"BucketAlreadyOwnedByYou\": return [3, 4];\n                    case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\": return [3, 4];\n                }\n                return [3, 6];\n            case 2: return [4, deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4: return [4, deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n            case 5: throw _d.sent();\n            case 6:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AbortDate: undefined,\n                    AbortRuleId: undefined,\n                    Bucket: undefined,\n                    BucketKeyEnabled: undefined,\n                    ChecksumAlgorithm: undefined,\n                    Key: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSEncryptionContext: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    UploadId: undefined,\n                };\n                if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n                    contents.AbortDate = __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"]));\n                }\n                if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n                    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                if (output.headers[\"x-amz-checksum-algorithm\"] !== undefined) {\n                    contents.ChecksumAlgorithm = output.headers[\"x-amz-checksum-algorithm\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = __expectString(data[\"Bucket\"]);\n                }\n                if (data[\"Key\"] !== undefined) {\n                    contents.Key = __expectString(data[\"Key\"]);\n                }\n                if (data[\"UploadId\"] !== undefined) {\n                    contents.UploadId = __expectString(data[\"UploadId\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DeleteMarker: undefined,\n                    RequestCharged: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                    contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteObjectsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Deleted: undefined,\n                    Errors: undefined,\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.Deleted === \"\") {\n                    contents.Deleted = [];\n                }\n                else if (data[\"Deleted\"] !== undefined) {\n                    contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n                }\n                if (data.Error === \"\") {\n                    contents.Errors = [];\n                }\n                else if (data[\"Error\"] !== undefined) {\n                    contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteObjectsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Status: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Status\"] !== undefined) {\n                    contents.Status = __expectString(data[\"Status\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Grants: undefined,\n                    Owner: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.AccessControlList === \"\") {\n                    contents.Grants = [];\n                }\n                else if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n                    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AnalyticsConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CORSRules: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CORSRule === \"\") {\n                    contents.CORSRules = [];\n                }\n                else if (data[\"CORSRule\"] !== undefined) {\n                    contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ServerSideEncryptionConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    IntelligentTieringConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    InventoryConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Rules: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.Rule === \"\") {\n                    contents.Rules = [];\n                }\n                else if (data[\"Rule\"] !== undefined) {\n                    contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketLocationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LocationConstraint: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"LocationConstraint\"] !== undefined) {\n                    contents.LocationConstraint = __expectString(data[\"LocationConstraint\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketLocationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LoggingEnabled: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"LoggingEnabled\"] !== undefined) {\n                    contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    MetricsConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    EventBridgeConfiguration: undefined,\n                    LambdaFunctionConfigurations: undefined,\n                    QueueConfigurations: undefined,\n                    TopicConfigurations: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"EventBridgeConfiguration\"] !== undefined) {\n                    contents.EventBridgeConfiguration = deserializeAws_restXmlEventBridgeConfiguration(data[\"EventBridgeConfiguration\"], context);\n                }\n                if (data.CloudFunctionConfiguration === \"\") {\n                    contents.LambdaFunctionConfigurations = [];\n                }\n                else if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n                    contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n                }\n                if (data.QueueConfiguration === \"\") {\n                    contents.QueueConfigurations = [];\n                }\n                else if (data[\"QueueConfiguration\"] !== undefined) {\n                    contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n                }\n                if (data.TopicConfiguration === \"\") {\n                    contents.TopicConfigurations = [];\n                }\n                else if (data[\"TopicConfiguration\"] !== undefined) {\n                    contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    OwnershipControls: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Policy: undefined,\n                };\n                return [4, collectBodyString(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.Policy = __expectString(data);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    PolicyStatus: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ReplicationConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Payer: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Payer\"] !== undefined) {\n                    contents.Payer = __expectString(data[\"Payer\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    TagSet: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.TagSet === \"\") {\n                    contents.TagSet = [];\n                }\n                else if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n                    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    MFADelete: undefined,\n                    Status: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"MfaDelete\"] !== undefined) {\n                    contents.MFADelete = __expectString(data[\"MfaDelete\"]);\n                }\n                if (data[\"Status\"] !== undefined) {\n                    contents.Status = __expectString(data[\"Status\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ErrorDocument: undefined,\n                    IndexDocument: undefined,\n                    RedirectAllRequestsTo: undefined,\n                    RoutingRules: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"ErrorDocument\"] !== undefined) {\n                    contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n                }\n                if (data[\"IndexDocument\"] !== undefined) {\n                    contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n                }\n                if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n                    contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n                }\n                if (data.RoutingRules === \"\") {\n                    contents.RoutingRules = [];\n                }\n                else if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n                    contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            AcceptRanges: undefined,\n            Body: undefined,\n            BucketKeyEnabled: undefined,\n            CacheControl: undefined,\n            ChecksumCRC32: undefined,\n            ChecksumCRC32C: undefined,\n            ChecksumSHA1: undefined,\n            ChecksumSHA256: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentRange: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            TagCount: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined,\n        };\n        if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n        }\n        if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n        }\n        if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n        }\n        if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n        }\n        if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n        }\n        if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = __strictParseLong(output.headers[\"content-length\"]);\n        }\n        if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n        }\n        if (output.headers[\"x-amz-checksum-crc32\"] !== undefined) {\n            contents.ChecksumCRC32 = output.headers[\"x-amz-checksum-crc32\"];\n        }\n        if (output.headers[\"x-amz-checksum-crc32c\"] !== undefined) {\n            contents.ChecksumCRC32C = output.headers[\"x-amz-checksum-crc32c\"];\n        }\n        if (output.headers[\"x-amz-checksum-sha1\"] !== undefined) {\n            contents.ChecksumSHA1 = output.headers[\"x-amz-checksum-sha1\"];\n        }\n        if (output.headers[\"x-amz-checksum-sha256\"] !== undefined) {\n            contents.ChecksumSHA256 = output.headers[\"x-amz-checksum-sha256\"];\n        }\n        if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = __strictParseInt32(output.headers[\"x-amz-missing-meta\"]);\n        }\n        if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n        }\n        if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n        }\n        if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n        }\n        if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n        }\n        if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n        }\n        if (output.headers[\"content-range\"] !== undefined) {\n            contents.ContentRange = output.headers[\"content-range\"];\n        }\n        if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n        }\n        if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"]));\n        }\n        if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n        }\n        if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n        }\n        if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n        }\n        if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n        }\n        if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]);\n        }\n        if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n            contents.TagCount = __strictParseInt32(output.headers[\"x-amz-tagging-count\"]);\n        }\n        if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n        }\n        if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output.headers[\"x-amz-object-lock-retain-until-date\"]));\n        }\n        if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n        }\n        Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n                contents.Metadata = {};\n            }\n            if (header.startsWith(\"x-amz-meta-\")) {\n                contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n        });\n        data = output.body;\n        contents.Body = data;\n        return [2, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restXmlGetObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InvalidObjectState\": return [3, 2];\n                    case \"com.amazonaws.s3#InvalidObjectState\": return [3, 2];\n                    case \"NoSuchKey\": return [3, 4];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3, 4];\n                }\n                return [3, 6];\n            case 2: return [4, deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4: return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 5: throw _d.sent();\n            case 6:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Grants: undefined,\n                    Owner: undefined,\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.AccessControlList === \"\") {\n                    contents.Grants = [];\n                }\n                else if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n                    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchKey\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Checksum: undefined,\n                    DeleteMarker: undefined,\n                    ETag: undefined,\n                    LastModified: undefined,\n                    ObjectParts: undefined,\n                    ObjectSize: undefined,\n                    RequestCharged: undefined,\n                    StorageClass: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                    contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n                }\n                if (output.headers[\"last-modified\"] !== undefined) {\n                    contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Checksum\"] !== undefined) {\n                    contents.Checksum = deserializeAws_restXmlChecksum(data[\"Checksum\"], context);\n                }\n                if (data[\"ETag\"] !== undefined) {\n                    contents.ETag = __expectString(data[\"ETag\"]);\n                }\n                if (data[\"ObjectParts\"] !== undefined) {\n                    contents.ObjectParts = deserializeAws_restXmlGetObjectAttributesParts(data[\"ObjectParts\"], context);\n                }\n                if (data[\"ObjectSize\"] !== undefined) {\n                    contents.ObjectSize = __strictParseLong(data[\"ObjectSize\"]);\n                }\n                if (data[\"StorageClass\"] !== undefined) {\n                    contents.StorageClass = __expectString(data[\"StorageClass\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchKey\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LegalHold: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ObjectLockConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Retention: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    TagSet: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.TagSet === \"\") {\n                    contents.TagSet = [];\n                }\n                else if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n                    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            Body: undefined,\n            RequestCharged: undefined,\n        };\n        if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n        }\n        data = output.body;\n        contents.Body = data;\n        return [2, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    PublicAccessBlockConfiguration: undefined,\n                };\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlHeadBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlHeadBucketCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlHeadBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NotFound\": return [3, 2];\n                    case \"com.amazonaws.s3#NotFound\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlNotFoundResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlHeadObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlHeadObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AcceptRanges: undefined,\n                    ArchiveStatus: undefined,\n                    BucketKeyEnabled: undefined,\n                    CacheControl: undefined,\n                    ChecksumCRC32: undefined,\n                    ChecksumCRC32C: undefined,\n                    ChecksumSHA1: undefined,\n                    ChecksumSHA256: undefined,\n                    ContentDisposition: undefined,\n                    ContentEncoding: undefined,\n                    ContentLanguage: undefined,\n                    ContentLength: undefined,\n                    ContentType: undefined,\n                    DeleteMarker: undefined,\n                    ETag: undefined,\n                    Expiration: undefined,\n                    Expires: undefined,\n                    LastModified: undefined,\n                    Metadata: undefined,\n                    MissingMeta: undefined,\n                    ObjectLockLegalHoldStatus: undefined,\n                    ObjectLockMode: undefined,\n                    ObjectLockRetainUntilDate: undefined,\n                    PartsCount: undefined,\n                    ReplicationStatus: undefined,\n                    RequestCharged: undefined,\n                    Restore: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    StorageClass: undefined,\n                    VersionId: undefined,\n                    WebsiteRedirectLocation: undefined,\n                };\n                if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                    contents.DeleteMarker = __parseBoolean(output.headers[\"x-amz-delete-marker\"]);\n                }\n                if (output.headers[\"accept-ranges\"] !== undefined) {\n                    contents.AcceptRanges = output.headers[\"accept-ranges\"];\n                }\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"x-amz-restore\"] !== undefined) {\n                    contents.Restore = output.headers[\"x-amz-restore\"];\n                }\n                if (output.headers[\"x-amz-archive-status\"] !== undefined) {\n                    contents.ArchiveStatus = output.headers[\"x-amz-archive-status\"];\n                }\n                if (output.headers[\"last-modified\"] !== undefined) {\n                    contents.LastModified = __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"]));\n                }\n                if (output.headers[\"content-length\"] !== undefined) {\n                    contents.ContentLength = __strictParseLong(output.headers[\"content-length\"]);\n                }\n                if (output.headers[\"x-amz-checksum-crc32\"] !== undefined) {\n                    contents.ChecksumCRC32 = output.headers[\"x-amz-checksum-crc32\"];\n                }\n                if (output.headers[\"x-amz-checksum-crc32c\"] !== undefined) {\n                    contents.ChecksumCRC32C = output.headers[\"x-amz-checksum-crc32c\"];\n                }\n                if (output.headers[\"x-amz-checksum-sha1\"] !== undefined) {\n                    contents.ChecksumSHA1 = output.headers[\"x-amz-checksum-sha1\"];\n                }\n                if (output.headers[\"x-amz-checksum-sha256\"] !== undefined) {\n                    contents.ChecksumSHA256 = output.headers[\"x-amz-checksum-sha256\"];\n                }\n                if (output.headers[\"etag\"] !== undefined) {\n                    contents.ETag = output.headers[\"etag\"];\n                }\n                if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n                    contents.MissingMeta = __strictParseInt32(output.headers[\"x-amz-missing-meta\"]);\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"cache-control\"] !== undefined) {\n                    contents.CacheControl = output.headers[\"cache-control\"];\n                }\n                if (output.headers[\"content-disposition\"] !== undefined) {\n                    contents.ContentDisposition = output.headers[\"content-disposition\"];\n                }\n                if (output.headers[\"content-encoding\"] !== undefined) {\n                    contents.ContentEncoding = output.headers[\"content-encoding\"];\n                }\n                if (output.headers[\"content-language\"] !== undefined) {\n                    contents.ContentLanguage = output.headers[\"content-language\"];\n                }\n                if (output.headers[\"content-type\"] !== undefined) {\n                    contents.ContentType = output.headers[\"content-type\"];\n                }\n                if (output.headers[\"expires\"] !== undefined) {\n                    contents.Expires = __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"]));\n                }\n                if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n                    contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n                    contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n                    contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n                }\n                if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n                    contents.PartsCount = __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]);\n                }\n                if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n                    contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n                }\n                if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n                    contents.ObjectLockRetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output.headers[\"x-amz-object-lock-retain-until-date\"]));\n                }\n                if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n                    contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n                }\n                Object.keys(output.headers).forEach(function (header) {\n                    if (contents.Metadata === undefined) {\n                        contents.Metadata = {};\n                    }\n                    if (header.startsWith(\"x-amz-meta-\")) {\n                        contents.Metadata[header.substring(11)] = output.headers[header];\n                    }\n                });\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlHeadObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NotFound\": return [3, 2];\n                    case \"com.amazonaws.s3#NotFound\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlNotFoundResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AnalyticsConfigurationList: undefined,\n                    ContinuationToken: undefined,\n                    IsTruncated: undefined,\n                    NextContinuationToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.AnalyticsConfiguration === \"\") {\n                    contents.AnalyticsConfigurationList = [];\n                }\n                else if (data[\"AnalyticsConfiguration\"] !== undefined) {\n                    contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n                }\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContinuationToken: undefined,\n                    IntelligentTieringConfigurationList: undefined,\n                    IsTruncated: undefined,\n                    NextContinuationToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data.IntelligentTieringConfiguration === \"\") {\n                    contents.IntelligentTieringConfigurationList = [];\n                }\n                else if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n                    contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList(__getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]), context);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContinuationToken: undefined,\n                    InventoryConfigurationList: undefined,\n                    IsTruncated: undefined,\n                    NextContinuationToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data.InventoryConfiguration === \"\") {\n                    contents.InventoryConfigurationList = [];\n                }\n                else if (data[\"InventoryConfiguration\"] !== undefined) {\n                    contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContinuationToken: undefined,\n                    IsTruncated: undefined,\n                    MetricsConfigurationList: undefined,\n                    NextContinuationToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data.MetricsConfiguration === \"\") {\n                    contents.MetricsConfigurationList = [];\n                }\n                else if (data[\"MetricsConfiguration\"] !== undefined) {\n                    contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListBucketsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Buckets: undefined,\n                    Owner: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.Buckets === \"\") {\n                    contents.Buckets = [];\n                }\n                else if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n                    contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Bucket: undefined,\n                    CommonPrefixes: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    KeyMarker: undefined,\n                    MaxUploads: undefined,\n                    NextKeyMarker: undefined,\n                    NextUploadIdMarker: undefined,\n                    Prefix: undefined,\n                    UploadIdMarker: undefined,\n                    Uploads: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = __expectString(data[\"Bucket\"]);\n                }\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                else if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = __expectString(data[\"Delimiter\"]);\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = __expectString(data[\"EncodingType\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"KeyMarker\"] !== undefined) {\n                    contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n                }\n                if (data[\"MaxUploads\"] !== undefined) {\n                    contents.MaxUploads = __strictParseInt32(data[\"MaxUploads\"]);\n                }\n                if (data[\"NextKeyMarker\"] !== undefined) {\n                    contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n                }\n                if (data[\"NextUploadIdMarker\"] !== undefined) {\n                    contents.NextUploadIdMarker = __expectString(data[\"NextUploadIdMarker\"]);\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = __expectString(data[\"Prefix\"]);\n                }\n                if (data[\"UploadIdMarker\"] !== undefined) {\n                    contents.UploadIdMarker = __expectString(data[\"UploadIdMarker\"]);\n                }\n                if (data.Upload === \"\") {\n                    contents.Uploads = [];\n                }\n                else if (data[\"Upload\"] !== undefined) {\n                    contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListObjectsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListObjectsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CommonPrefixes: undefined,\n                    Contents: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    Marker: undefined,\n                    MaxKeys: undefined,\n                    Name: undefined,\n                    NextMarker: undefined,\n                    Prefix: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                else if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data.Contents === \"\") {\n                    contents.Contents = [];\n                }\n                else if (data[\"Contents\"] !== undefined) {\n                    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = __expectString(data[\"Delimiter\"]);\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = __expectString(data[\"EncodingType\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"Marker\"] !== undefined) {\n                    contents.Marker = __expectString(data[\"Marker\"]);\n                }\n                if (data[\"MaxKeys\"] !== undefined) {\n                    contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n                }\n                if (data[\"Name\"] !== undefined) {\n                    contents.Name = __expectString(data[\"Name\"]);\n                }\n                if (data[\"NextMarker\"] !== undefined) {\n                    contents.NextMarker = __expectString(data[\"NextMarker\"]);\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = __expectString(data[\"Prefix\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListObjectsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchBucket\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListObjectsV2Command = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CommonPrefixes: undefined,\n                    Contents: undefined,\n                    ContinuationToken: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    KeyCount: undefined,\n                    MaxKeys: undefined,\n                    Name: undefined,\n                    NextContinuationToken: undefined,\n                    Prefix: undefined,\n                    StartAfter: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                else if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data.Contents === \"\") {\n                    contents.Contents = [];\n                }\n                else if (data[\"Contents\"] !== undefined) {\n                    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n                }\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = __expectString(data[\"Delimiter\"]);\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = __expectString(data[\"EncodingType\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"KeyCount\"] !== undefined) {\n                    contents.KeyCount = __strictParseInt32(data[\"KeyCount\"]);\n                }\n                if (data[\"MaxKeys\"] !== undefined) {\n                    contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n                }\n                if (data[\"Name\"] !== undefined) {\n                    contents.Name = __expectString(data[\"Name\"]);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = __expectString(data[\"Prefix\"]);\n                }\n                if (data[\"StartAfter\"] !== undefined) {\n                    contents.StartAfter = __expectString(data[\"StartAfter\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListObjectsV2CommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchBucket\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListObjectVersionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CommonPrefixes: undefined,\n                    DeleteMarkers: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    KeyMarker: undefined,\n                    MaxKeys: undefined,\n                    Name: undefined,\n                    NextKeyMarker: undefined,\n                    NextVersionIdMarker: undefined,\n                    Prefix: undefined,\n                    VersionIdMarker: undefined,\n                    Versions: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                else if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data.DeleteMarker === \"\") {\n                    contents.DeleteMarkers = [];\n                }\n                else if (data[\"DeleteMarker\"] !== undefined) {\n                    contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = __expectString(data[\"Delimiter\"]);\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = __expectString(data[\"EncodingType\"]);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"KeyMarker\"] !== undefined) {\n                    contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n                }\n                if (data[\"MaxKeys\"] !== undefined) {\n                    contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n                }\n                if (data[\"Name\"] !== undefined) {\n                    contents.Name = __expectString(data[\"Name\"]);\n                }\n                if (data[\"NextKeyMarker\"] !== undefined) {\n                    contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n                }\n                if (data[\"NextVersionIdMarker\"] !== undefined) {\n                    contents.NextVersionIdMarker = __expectString(data[\"NextVersionIdMarker\"]);\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = __expectString(data[\"Prefix\"]);\n                }\n                if (data[\"VersionIdMarker\"] !== undefined) {\n                    contents.VersionIdMarker = __expectString(data[\"VersionIdMarker\"]);\n                }\n                if (data.Version === \"\") {\n                    contents.Versions = [];\n                }\n                else if (data[\"Version\"] !== undefined) {\n                    contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListObjectVersionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListPartsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlListPartsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AbortDate: undefined,\n                    AbortRuleId: undefined,\n                    Bucket: undefined,\n                    ChecksumAlgorithm: undefined,\n                    Initiator: undefined,\n                    IsTruncated: undefined,\n                    Key: undefined,\n                    MaxParts: undefined,\n                    NextPartNumberMarker: undefined,\n                    Owner: undefined,\n                    PartNumberMarker: undefined,\n                    Parts: undefined,\n                    RequestCharged: undefined,\n                    StorageClass: undefined,\n                    UploadId: undefined,\n                };\n                if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n                    contents.AbortDate = __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"]));\n                }\n                if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n                    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = __expectString(data[\"Bucket\"]);\n                }\n                if (data[\"ChecksumAlgorithm\"] !== undefined) {\n                    contents.ChecksumAlgorithm = __expectString(data[\"ChecksumAlgorithm\"]);\n                }\n                if (data[\"Initiator\"] !== undefined) {\n                    contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n                }\n                if (data[\"Key\"] !== undefined) {\n                    contents.Key = __expectString(data[\"Key\"]);\n                }\n                if (data[\"MaxParts\"] !== undefined) {\n                    contents.MaxParts = __strictParseInt32(data[\"MaxParts\"]);\n                }\n                if (data[\"NextPartNumberMarker\"] !== undefined) {\n                    contents.NextPartNumberMarker = __expectString(data[\"NextPartNumberMarker\"]);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                if (data[\"PartNumberMarker\"] !== undefined) {\n                    contents.PartNumberMarker = __expectString(data[\"PartNumberMarker\"]);\n                }\n                if (data.Part === \"\") {\n                    contents.Parts = [];\n                }\n                else if (data[\"Part\"] !== undefined) {\n                    contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n                }\n                if (data[\"StorageClass\"] !== undefined) {\n                    contents.StorageClass = __expectString(data[\"StorageClass\"]);\n                }\n                if (data[\"UploadId\"] !== undefined) {\n                    contents.UploadId = __expectString(data[\"UploadId\"]);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListPartsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    ChecksumCRC32: undefined,\n                    ChecksumCRC32C: undefined,\n                    ChecksumSHA1: undefined,\n                    ChecksumSHA256: undefined,\n                    ETag: undefined,\n                    Expiration: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSEncryptionContext: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"etag\"] !== undefined) {\n                    contents.ETag = output.headers[\"etag\"];\n                }\n                if (output.headers[\"x-amz-checksum-crc32\"] !== undefined) {\n                    contents.ChecksumCRC32 = output.headers[\"x-amz-checksum-crc32\"];\n                }\n                if (output.headers[\"x-amz-checksum-crc32c\"] !== undefined) {\n                    contents.ChecksumCRC32C = output.headers[\"x-amz-checksum-crc32c\"];\n                }\n                if (output.headers[\"x-amz-checksum-sha1\"] !== undefined) {\n                    contents.ChecksumSHA1 = output.headers[\"x-amz-checksum-sha1\"];\n                }\n                if (output.headers[\"x-amz-checksum-sha256\"] !== undefined) {\n                    contents.ChecksumSHA256 = output.headers[\"x-amz-checksum-sha256\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchKey\": return [3, 2];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlRestoreObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                    RestoreOutputPath: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n                    contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlRestoreObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ObjectAlreadyInActiveTierError\": return [3, 2];\n                    case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\": return [3, 2];\n                }\n                return [3, 4];\n            case 2: return [4, deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4:\n                parsedBody = parsedOutput.body;\n                response = new __BaseException({\n                    name: parsedBody.code || parsedBody.Code || errorCode,\n                    $fault: \"client\",\n                    $metadata: deserializeMetadata(output),\n                });\n                throw __decorateServiceException(response, parsedBody);\n        }\n    });\n}); };\nexport var deserializeAws_restXmlSelectObjectContentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            Payload: undefined,\n        };\n        data = context.eventStreamMarshaller.deserialize(output.body, function (event) { return __awaiter(void 0, void 0, void 0, function () {\n            var eventName, eventHeaders, eventMessage, parsedEvent;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        eventName = Object.keys(event)[0];\n                        eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                            accummulator[curr[0]] = curr[1].value;\n                            return accummulator;\n                        }, {});\n                        eventMessage = {\n                            headers: eventHeaders,\n                            body: event[eventName].body,\n                        };\n                        parsedEvent = (_a = {},\n                            _a[eventName] = eventMessage,\n                            _a);\n                        return [4, deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n                    case 1: return [2, _b.sent()];\n                }\n            });\n        }); });\n        contents.Payload = data;\n        return [2, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restXmlSelectObjectContentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlUploadPartCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlUploadPartCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    ChecksumCRC32: undefined,\n                    ChecksumCRC32C: undefined,\n                    ChecksumSHA1: undefined,\n                    ChecksumSHA256: undefined,\n                    ETag: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                };\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"etag\"] !== undefined) {\n                    contents.ETag = output.headers[\"etag\"];\n                }\n                if (output.headers[\"x-amz-checksum-crc32\"] !== undefined) {\n                    contents.ChecksumCRC32 = output.headers[\"x-amz-checksum-crc32\"];\n                }\n                if (output.headers[\"x-amz-checksum-crc32c\"] !== undefined) {\n                    contents.ChecksumCRC32C = output.headers[\"x-amz-checksum-crc32c\"];\n                }\n                if (output.headers[\"x-amz-checksum-sha1\"] !== undefined) {\n                    contents.ChecksumSHA1 = output.headers[\"x-amz-checksum-sha1\"];\n                }\n                if (output.headers[\"x-amz-checksum-sha256\"] !== undefined) {\n                    contents.ChecksumSHA256 = output.headers[\"x-amz-checksum-sha256\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlUploadPartCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlUploadPartCopyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    CopyPartResult: undefined,\n                    CopySourceVersionId: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                };\n                if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n                    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]);\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                _a = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.sent()]);\n                contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlUploadPartCopyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlWriteGetObjectResponseCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restXmlWriteGetObjectResponseCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlWriteGetObjectResponseCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        response = new __BaseException({\n                            name: parsedBody.code || parsedBody.Code || errorCode,\n                            $fault: \"client\",\n                            $metadata: deserializeMetadata(output),\n                        });\n                        throw __decorateServiceException(response, parsedBody);\n                }\n                return [2];\n        }\n    });\n}); };\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                if (!(output[\"Records\"] !== undefined)) return [3, 2];\n                _a = {};\n                return [4, deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n            case 1: return [2, (_a.Records = _f.sent(),\n                    _a)];\n            case 2:\n                if (!(output[\"Stats\"] !== undefined)) return [3, 4];\n                _b = {};\n                return [4, deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n            case 3: return [2, (_b.Stats = _f.sent(),\n                    _b)];\n            case 4:\n                if (!(output[\"Progress\"] !== undefined)) return [3, 6];\n                _c = {};\n                return [4, deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n            case 5: return [2, (_c.Progress = _f.sent(),\n                    _c)];\n            case 6:\n                if (!(output[\"Cont\"] !== undefined)) return [3, 8];\n                _d = {};\n                return [4, deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n            case 7: return [2, (_d.Cont = _f.sent(),\n                    _d)];\n            case 8:\n                if (!(output[\"End\"] !== undefined)) return [3, 10];\n                _e = {};\n                return [4, deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n            case 9: return [2, (_e.End = _f.sent(),\n                    _e)];\n            case 10: return [2, { $unknown: output }];\n        }\n    });\n}); };\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlEndEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                contents = {};\n                _a = contents;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                _a.Details = _b.sent();\n                return [2, contents];\n        }\n    });\n}); };\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        contents.Payload = output.body;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                contents = {};\n                _a = contents;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                _a.Details = _b.sent();\n                return [2, contents];\n        }\n    });\n}); };\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = {};\n        data = parsedOutput.body;\n        exception = new BucketAlreadyExists(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = {};\n        data = parsedOutput.body;\n        exception = new BucketAlreadyOwnedByYou(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restXmlInvalidObjectStateResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = {};\n        data = parsedOutput.body;\n        if (data[\"AccessTier\"] !== undefined) {\n            contents.AccessTier = __expectString(data[\"AccessTier\"]);\n        }\n        if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = __expectString(data[\"StorageClass\"]);\n        }\n        exception = new InvalidObjectState(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = {};\n        data = parsedOutput.body;\n        exception = new NoSuchBucket(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = {};\n        data = parsedOutput.body;\n        exception = new NoSuchKey(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = {};\n        data = parsedOutput.body;\n        exception = new NoSuchUpload(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restXmlNotFoundResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = {};\n        data = parsedOutput.body;\n        exception = new NotFound(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = {};\n        data = parsedOutput.body;\n        exception = new ObjectAlreadyInActiveTierError(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = {};\n        data = parsedOutput.body;\n        exception = new ObjectNotInActiveTierError(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\n    var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n    if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {\n        var node = new __XmlNode(\"DaysAfterInitiation\")\n            .addChildNode(new __XmlText(String(input.DaysAfterInitiation)))\n            .withName(\"DaysAfterInitiation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n    if (input.Grants !== undefined && input.Grants !== null) {\n        var nodes = serializeAws_restXmlGrants(input.Grants, context);\n        var containerNode_1 = new __XmlNode(\"AccessControlList\");\n        nodes.map(function (node) {\n            containerNode_1.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_1);\n    }\n    if (input.Owner !== undefined && input.Owner !== null) {\n        var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n    if (input.Owner !== undefined && input.Owner !== null) {\n        var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {\n        var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n    if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n        var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n    AnalyticsFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n    if (input.Format !== undefined && input.Format !== null) {\n        var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\")\n            .addChildNode(new __XmlText(input.Format))\n            .withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {\n        var node = new __XmlNode(\"AccountId\")\n            .addChildNode(new __XmlText(input.BucketAccountId))\n            .withName(\"BucketAccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket !== undefined && input.Bucket !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\n    var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n    if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {\n        var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\n    var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n    if (input.Parts !== undefined && input.Parts !== null) {\n        var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Part\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedPart = function (input, context) {\n    var bodyNode = new __XmlNode(\"CompletedPart\");\n    if (input.ETag !== undefined && input.ETag !== null) {\n        var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumCRC32 !== undefined && input.ChecksumCRC32 !== null) {\n        var node = new __XmlNode(\"ChecksumCRC32\")\n            .addChildNode(new __XmlText(input.ChecksumCRC32))\n            .withName(\"ChecksumCRC32\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumCRC32C !== undefined && input.ChecksumCRC32C !== null) {\n        var node = new __XmlNode(\"ChecksumCRC32C\")\n            .addChildNode(new __XmlText(input.ChecksumCRC32C))\n            .withName(\"ChecksumCRC32C\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumSHA1 !== undefined && input.ChecksumSHA1 !== null) {\n        var node = new __XmlNode(\"ChecksumSHA1\").addChildNode(new __XmlText(input.ChecksumSHA1)).withName(\"ChecksumSHA1\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumSHA256 !== undefined && input.ChecksumSHA256 !== null) {\n        var node = new __XmlNode(\"ChecksumSHA256\")\n            .addChildNode(new __XmlText(input.ChecksumSHA256))\n            .withName(\"ChecksumSHA256\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.PartNumber !== undefined && input.PartNumber !== null) {\n        var node = new __XmlNode(\"PartNumber\")\n            .addChildNode(new __XmlText(String(input.PartNumber)))\n            .withName(\"PartNumber\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlCompletedPart(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlCondition = function (input, context) {\n    var bodyNode = new __XmlNode(\"Condition\");\n    if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {\n        var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\")\n            .addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals))\n            .withName(\"HttpErrorCodeReturnedEquals\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {\n        var node = new __XmlNode(\"KeyPrefixEquals\")\n            .addChildNode(new __XmlText(input.KeyPrefixEquals))\n            .withName(\"KeyPrefixEquals\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"CORSConfiguration\");\n    if (input.CORSRules !== undefined && input.CORSRules !== null) {\n        var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"CORSRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"CORSRule\");\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {\n        var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {\n        var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedMethod\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {\n        var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedOrigin\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {\n        var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n        nodes.map(function (node) {\n            node = node.withName(\"ExposeHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {\n        var node = new __XmlNode(\"MaxAgeSeconds\")\n            .addChildNode(new __XmlText(String(input.MaxAgeSeconds)))\n            .withName(\"MaxAgeSeconds\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlCORSRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n    if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {\n        var node = new __XmlNode(\"BucketLocationConstraint\")\n            .addChildNode(new __XmlText(input.LocationConstraint))\n            .withName(\"LocationConstraint\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCSVInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"CSVInput\");\n    if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {\n        var node = new __XmlNode(\"FileHeaderInfo\")\n            .addChildNode(new __XmlText(input.FileHeaderInfo))\n            .withName(\"FileHeaderInfo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comments !== undefined && input.Comments !== null) {\n        var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n        var node = new __XmlNode(\"QuoteEscapeCharacter\")\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n            .withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n        var node = new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n        var node = new __XmlNode(\"FieldDelimiter\")\n            .addChildNode(new __XmlText(input.FieldDelimiter))\n            .withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n        var node = new __XmlNode(\"QuoteCharacter\")\n            .addChildNode(new __XmlText(input.QuoteCharacter))\n            .withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {\n        var node = new __XmlNode(\"AllowQuotedRecordDelimiter\")\n            .addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter)))\n            .withName(\"AllowQuotedRecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCSVOutput = function (input, context) {\n    var bodyNode = new __XmlNode(\"CSVOutput\");\n    if (input.QuoteFields !== undefined && input.QuoteFields !== null) {\n        var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n        var node = new __XmlNode(\"QuoteEscapeCharacter\")\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n            .withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n        var node = new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n        var node = new __XmlNode(\"FieldDelimiter\")\n            .addChildNode(new __XmlText(input.FieldDelimiter))\n            .withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n        var node = new __XmlNode(\"QuoteCharacter\")\n            .addChildNode(new __XmlText(input.QuoteCharacter))\n            .withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\n    var bodyNode = new __XmlNode(\"DefaultRetention\");\n    if (input.Mode !== undefined && input.Mode !== null) {\n        var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Years !== undefined && input.Years !== null) {\n        var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDelete = function (input, context) {\n    var bodyNode = new __XmlNode(\"Delete\");\n    if (input.Objects !== undefined && input.Objects !== null) {\n        var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Object\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Quiet !== undefined && input.Quiet !== null) {\n        var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\n    var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"DeleteMarkerReplicationStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"Destination\");\n    if (input.Bucket !== undefined && input.Bucket !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Account !== undefined && input.Account !== null) {\n        var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {\n        var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {\n        var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {\n        var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Metrics !== undefined && input.Metrics !== null) {\n        var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEncryption = function (input, context) {\n    var bodyNode = new __XmlNode(\"Encryption\");\n    if (input.EncryptionType !== undefined && input.EncryptionType !== null) {\n        var node = new __XmlNode(\"ServerSideEncryption\")\n            .addChildNode(new __XmlText(input.EncryptionType))\n            .withName(\"EncryptionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {\n        var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSContext !== undefined && input.KMSContext !== null) {\n        var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n    if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {\n        var node = new __XmlNode(\"ReplicaKmsKeyID\")\n            .addChildNode(new __XmlText(input.ReplicaKmsKeyID))\n            .withName(\"ReplicaKmsKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlErrorDocument = function (input, context) {\n    var bodyNode = new __XmlNode(\"ErrorDocument\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEventBridgeConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"EventBridgeConfiguration\");\n    return bodyNode;\n};\nvar serializeAws_restXmlEventList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\n    var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ExistingObjectReplicationStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlFilterRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"FilterRule\");\n    if (input.Name !== undefined && input.Name !== null) {\n        var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlFilterRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\n    var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n    if (input.Tier !== undefined && input.Tier !== null) {\n        var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrant = function (input, context) {\n    var bodyNode = new __XmlNode(\"Grant\");\n    if (input.Grantee !== undefined && input.Grantee !== null) {\n        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n        node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission !== undefined && input.Permission !== null) {\n        var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrantee = function (input, context) {\n    var bodyNode = new __XmlNode(\"Grantee\");\n    if (input.DisplayName !== undefined && input.DisplayName !== null) {\n        var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EmailAddress !== undefined && input.EmailAddress !== null) {\n        var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.URI !== undefined && input.URI !== null) {\n        var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        bodyNode.addAttribute(\"xsi:type\", input.Type);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrants = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlGrant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nvar serializeAws_restXmlIndexDocument = function (input, context) {\n    var bodyNode = new __XmlNode(\"IndexDocument\");\n    if (input.Suffix !== undefined && input.Suffix !== null) {\n        var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInputSerialization = function (input, context) {\n    var bodyNode = new __XmlNode(\"InputSerialization\");\n    if (input.CSV !== undefined && input.CSV !== null) {\n        var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CompressionType !== undefined && input.CompressionType !== null) {\n        var node = new __XmlNode(\"CompressionType\")\n            .addChildNode(new __XmlText(input.CompressionType))\n            .withName(\"CompressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON !== undefined && input.JSON !== null) {\n        var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Parquet !== undefined && input.Parquet !== null) {\n        var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"IntelligentTieringId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"IntelligentTieringStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tierings !== undefined && input.Tierings !== null) {\n        var nodes = serializeAws_restXmlTieringList(input.Tierings, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tiering\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tag !== undefined && input.Tag !== null) {\n        var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.And !== undefined && input.And !== null) {\n        var node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName(\"And\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n    if (input.Destination !== undefined && input.Destination !== null) {\n        var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IsEnabled !== undefined && input.IsEnabled !== null) {\n        var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {\n        var node = new __XmlNode(\"InventoryIncludedObjectVersions\")\n            .addChildNode(new __XmlText(input.IncludedObjectVersions))\n            .withName(\"IncludedObjectVersions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OptionalFields !== undefined && input.OptionalFields !== null) {\n        var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n        var containerNode_2 = new __XmlNode(\"OptionalFields\");\n        nodes.map(function (node) {\n            containerNode_2.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_2);\n    }\n    if (input.Schedule !== undefined && input.Schedule !== null) {\n        var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryDestination\");\n    if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n        var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryEncryption\");\n    if (input.SSES3 !== undefined && input.SSES3 !== null) {\n        var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SSEKMS !== undefined && input.SSEKMS !== null) {\n        var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryFilter\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n        return node.withName(\"Field\");\n    });\n};\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n    if (input.AccountId !== undefined && input.AccountId !== null) {\n        var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket !== undefined && input.Bucket !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Format !== undefined && input.Format !== null) {\n        var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption !== undefined && input.Encryption !== null) {\n        var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventorySchedule\");\n    if (input.Frequency !== undefined && input.Frequency !== null) {\n        var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlJSONInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"JSONInput\");\n    if (input.Type !== undefined && input.Type !== null) {\n        var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlJSONOutput = function (input, context) {\n    var bodyNode = new __XmlNode(\"JSONOutput\");\n    if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n        var node = new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {\n        var node = new __XmlNode(\"LambdaFunctionArn\")\n            .addChildNode(new __XmlText(input.LambdaFunctionArn))\n            .withName(\"CloudFunction\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events !== undefined && input.Events !== null) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n    if (input.Date !== undefined && input.Date !== null) {\n        var node = new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {\n        var node = new __XmlNode(\"ExpiredObjectDeleteMarker\")\n            .addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker)))\n            .withName(\"ExpiredObjectDeleteMarker\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRule\");\n    if (input.Expiration !== undefined && input.Expiration !== null) {\n        var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Transitions !== undefined && input.Transitions !== null) {\n        var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Transition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {\n        var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n        nodes.map(function (node) {\n            node = node.withName(\"NoncurrentVersionTransition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {\n        var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {\n        var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ObjectSizeGreaterThan !== undefined && input.ObjectSizeGreaterThan !== null) {\n        var node = new __XmlNode(\"ObjectSizeGreaterThanBytes\")\n            .addChildNode(new __XmlText(String(input.ObjectSizeGreaterThan)))\n            .withName(\"ObjectSizeGreaterThan\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ObjectSizeLessThan !== undefined && input.ObjectSizeLessThan !== null) {\n        var node = new __XmlNode(\"ObjectSizeLessThanBytes\")\n            .addChildNode(new __XmlText(String(input.ObjectSizeLessThan)))\n            .withName(\"ObjectSizeLessThan\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n    LifecycleRuleFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        ObjectSizeGreaterThan: function (value) {\n            var node = new __XmlNode(\"ObjectSizeGreaterThanBytes\")\n                .addChildNode(new __XmlText(String(value)))\n                .withName(\"ObjectSizeGreaterThan\");\n            bodyNode.addChildNode(node);\n        },\n        ObjectSizeLessThan: function (value) {\n            var node = new __XmlNode(\"ObjectSizeLessThanBytes\")\n                .addChildNode(new __XmlText(String(value)))\n                .withName(\"ObjectSizeLessThan\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlLifecycleRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\n    var bodyNode = new __XmlNode(\"LoggingEnabled\");\n    if (input.TargetBucket !== undefined && input.TargetBucket !== null) {\n        var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TargetGrants !== undefined && input.TargetGrants !== null) {\n        var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n        var containerNode_3 = new __XmlNode(\"TargetGrants\");\n        nodes.map(function (node) {\n            containerNode_3.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_3);\n    }\n    if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {\n        var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetadataEntry\");\n    if (input.Name !== undefined && input.Name !== null) {\n        var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetrics = function (input, context) {\n    var bodyNode = new __XmlNode(\"Metrics\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EventThreshold !== undefined && input.EventThreshold !== null) {\n        var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AccessPointArn !== undefined && input.AccessPointArn !== null) {\n        var node = new __XmlNode(\"AccessPointArn\")\n            .addChildNode(new __XmlText(input.AccessPointArn))\n            .withName(\"AccessPointArn\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsFilter\");\n    MetricsFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        AccessPointArn: function (value) {\n            var node = new __XmlNode(\"AccessPointArn\").addChildNode(new __XmlText(value)).withName(\"AccessPointArn\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlMetricsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\n    var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n    if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n        var node = new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n            .withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.NewerNoncurrentVersions !== undefined && input.NewerNoncurrentVersions !== null) {\n        var node = new __XmlNode(\"VersionCount\")\n            .addChildNode(new __XmlText(String(input.NewerNoncurrentVersions)))\n            .withName(\"NewerNoncurrentVersions\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\n    var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n    if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n        var node = new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n            .withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"TransitionStorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.NewerNoncurrentVersions !== undefined && input.NewerNoncurrentVersions !== null) {\n        var node = new __XmlNode(\"VersionCount\")\n            .addChildNode(new __XmlText(String(input.NewerNoncurrentVersions)))\n            .withName(\"NewerNoncurrentVersions\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n    if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {\n        var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"TopicConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {\n        var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"QueueConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {\n        var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"CloudFunctionConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.EventBridgeConfiguration !== undefined && input.EventBridgeConfiguration !== null) {\n        var node = serializeAws_restXmlEventBridgeConfiguration(input.EventBridgeConfiguration, context).withName(\"EventBridgeConfiguration\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.VersionId !== undefined && input.VersionId !== null) {\n        var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlObjectIdentifier(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n    if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {\n        var node = new __XmlNode(\"ObjectLockEnabled\")\n            .addChildNode(new __XmlText(input.ObjectLockEnabled))\n            .withName(\"ObjectLockEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rule !== undefined && input.Rule !== null) {\n        var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ObjectLockLegalHoldStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n    if (input.Mode !== undefined && input.Mode !== null) {\n        var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {\n        var node = new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"RetainUntilDate\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockRule\");\n    if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {\n        var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOutputLocation = function (input, context) {\n    var bodyNode = new __XmlNode(\"OutputLocation\");\n    if (input.S3 !== undefined && input.S3 !== null) {\n        var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\n    var bodyNode = new __XmlNode(\"OutputSerialization\");\n    if (input.CSV !== undefined && input.CSV !== null) {\n        var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON !== undefined && input.JSON !== null) {\n        var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwner = function (input, context) {\n    var bodyNode = new __XmlNode(\"Owner\");\n    if (input.DisplayName !== undefined && input.DisplayName !== null) {\n        var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControls = function (input, context) {\n    var bodyNode = new __XmlNode(\"OwnershipControls\");\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControlsRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n    if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {\n        var node = new __XmlNode(\"ObjectOwnership\")\n            .addChildNode(new __XmlText(input.ObjectOwnership))\n            .withName(\"ObjectOwnership\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControlsRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlOwnershipControlsRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlParquetInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"ParquetInput\");\n    return bodyNode;\n};\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n    if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.BlockPublicAcls)))\n            .withName(\"BlockPublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.IgnorePublicAcls)))\n            .withName(\"IgnorePublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.BlockPublicPolicy)))\n            .withName(\"BlockPublicPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.RestrictPublicBuckets)))\n            .withName(\"RestrictPublicBuckets\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"QueueConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueueArn !== undefined && input.QueueArn !== null) {\n        var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events !== undefined && input.Events !== null) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlQueueConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlRedirect = function (input, context) {\n    var bodyNode = new __XmlNode(\"Redirect\");\n    if (input.HostName !== undefined && input.HostName !== null) {\n        var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {\n        var node = new __XmlNode(\"HttpRedirectCode\")\n            .addChildNode(new __XmlText(input.HttpRedirectCode))\n            .withName(\"HttpRedirectCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol !== undefined && input.Protocol !== null) {\n        var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {\n        var node = new __XmlNode(\"ReplaceKeyPrefixWith\")\n            .addChildNode(new __XmlText(input.ReplaceKeyPrefixWith))\n            .withName(\"ReplaceKeyPrefixWith\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {\n        var node = new __XmlNode(\"ReplaceKeyWith\")\n            .addChildNode(new __XmlText(input.ReplaceKeyWith))\n            .withName(\"ReplaceKeyWith\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\n    var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n    if (input.HostName !== undefined && input.HostName !== null) {\n        var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol !== undefined && input.Protocol !== null) {\n        var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicaModifications = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicaModifications\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ReplicaModificationsStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n    if (input.Role !== undefined && input.Role !== null) {\n        var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRule\");\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Priority !== undefined && input.Priority !== null) {\n        var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {\n        var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {\n        var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination !== undefined && input.Destination !== null) {\n        var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {\n        var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n    ReplicationRuleFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlReplicationRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlReplicationTime = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationTime\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Time !== undefined && input.Time !== null) {\n        var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n    if (input.Minutes !== undefined && input.Minutes !== null) {\n        var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n    if (input.Payer !== undefined && input.Payer !== null) {\n        var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRequestProgress = function (input, context) {\n    var bodyNode = new __XmlNode(\"RequestProgress\");\n    if (input.Enabled !== undefined && input.Enabled !== null) {\n        var node = new __XmlNode(\"EnableRequestProgress\")\n            .addChildNode(new __XmlText(String(input.Enabled)))\n            .withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\n    var bodyNode = new __XmlNode(\"RestoreRequest\");\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {\n        var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tier !== undefined && input.Tier !== null) {\n        var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Description !== undefined && input.Description !== null) {\n        var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SelectParameters !== undefined && input.SelectParameters !== null) {\n        var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputLocation !== undefined && input.OutputLocation !== null) {\n        var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRoutingRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"RoutingRule\");\n    if (input.Condition !== undefined && input.Condition !== null) {\n        var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Redirect !== undefined && input.Redirect !== null) {\n        var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRoutingRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlRoutingRule(entry, context);\n        return node.withName(\"RoutingRule\");\n    });\n};\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"S3KeyFilter\");\n    if (input.FilterRules !== undefined && input.FilterRules !== null) {\n        var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"FilterRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlS3Location = function (input, context) {\n    var bodyNode = new __XmlNode(\"S3Location\");\n    if (input.BucketName !== undefined && input.BucketName !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption !== undefined && input.Encryption !== null) {\n        var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CannedACL !== undefined && input.CannedACL !== null) {\n        var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlList !== undefined && input.AccessControlList !== null) {\n        var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n        var containerNode_4 = new __XmlNode(\"AccessControlList\");\n        nodes.map(function (node) {\n            containerNode_4.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_4);\n    }\n    if (input.Tagging !== undefined && input.Tagging !== null) {\n        var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.UserMetadata !== undefined && input.UserMetadata !== null) {\n        var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n        var containerNode_5 = new __XmlNode(\"UserMetadata\");\n        nodes.map(function (node) {\n            containerNode_5.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_5);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlScanRange = function (input, context) {\n    var bodyNode = new __XmlNode(\"ScanRange\");\n    if (input.Start !== undefined && input.Start !== null) {\n        var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.End !== undefined && input.End !== null) {\n        var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSelectParameters = function (input, context) {\n    var bodyNode = new __XmlNode(\"SelectParameters\");\n    if (input.InputSerialization !== undefined && input.InputSerialization !== null) {\n        var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpressionType !== undefined && input.ExpressionType !== null) {\n        var node = new __XmlNode(\"ExpressionType\")\n            .addChildNode(new __XmlText(input.ExpressionType))\n            .withName(\"ExpressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Expression !== undefined && input.Expression !== null) {\n        var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {\n        var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n    if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {\n        var node = new __XmlNode(\"ServerSideEncryption\")\n            .addChildNode(new __XmlText(input.SSEAlgorithm))\n            .withName(\"SSEAlgorithm\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {\n        var node = new __XmlNode(\"SSEKMSKeyId\")\n            .addChildNode(new __XmlText(input.KMSMasterKeyID))\n            .withName(\"KMSMasterKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n    if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {\n        var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {\n        var node = new __XmlNode(\"BucketKeyEnabled\")\n            .addChildNode(new __XmlText(String(input.BucketKeyEnabled)))\n            .withName(\"BucketKeyEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\n    var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n    if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {\n        var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {\n        var node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSSEKMS = function (input, context) {\n    var bodyNode = new __XmlNode(\"SSE-KMS\");\n    if (input.KeyId !== undefined && input.KeyId !== null) {\n        var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\n    var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSSES3 = function (input, context) {\n    var bodyNode = new __XmlNode(\"SSE-S3\");\n    return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\n    var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n    if (input.DataExport !== undefined && input.DataExport !== null) {\n        var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\n    var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n    if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {\n        var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\")\n            .addChildNode(new __XmlText(input.OutputSchemaVersion))\n            .withName(\"OutputSchemaVersion\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination !== undefined && input.Destination !== null) {\n        var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTag = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tag\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTagging = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tagging\");\n    if (input.TagSet !== undefined && input.TagSet !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n        var containerNode_6 = new __XmlNode(\"TagSet\");\n        nodes.map(function (node) {\n            containerNode_6.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_6);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTagSet = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTag(entry, context);\n        return node.withName(\"Tag\");\n    });\n};\nvar serializeAws_restXmlTargetGrant = function (input, context) {\n    var bodyNode = new __XmlNode(\"TargetGrant\");\n    if (input.Grantee !== undefined && input.Grantee !== null) {\n        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n        node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission !== undefined && input.Permission !== null) {\n        var node = new __XmlNode(\"BucketLogsPermission\")\n            .addChildNode(new __XmlText(input.Permission))\n            .withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTargetGrants = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTargetGrant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nvar serializeAws_restXmlTiering = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tiering\");\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"IntelligentTieringDays\")\n            .addChildNode(new __XmlText(String(input.Days)))\n            .withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessTier !== undefined && input.AccessTier !== null) {\n        var node = new __XmlNode(\"IntelligentTieringAccessTier\")\n            .addChildNode(new __XmlText(input.AccessTier))\n            .withName(\"AccessTier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTieringList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTiering(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"TopicConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events !== undefined && input.Events !== null) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTopicConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlTransition = function (input, context) {\n    var bodyNode = new __XmlNode(\"Transition\");\n    if (input.Date !== undefined && input.Date !== null) {\n        var node = new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"TransitionStorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTransitionList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTransition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlUserMetadata = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlMetadataEntry(entry, context);\n        return node.withName(\"MetadataEntry\");\n    });\n};\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n    if (input.MFADelete !== undefined && input.MFADelete !== null) {\n        var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n    if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {\n        var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IndexDocument !== undefined && input.IndexDocument !== null) {\n        var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {\n        var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RoutingRules !== undefined && input.RoutingRules !== null) {\n        var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n        var containerNode_7 = new __XmlNode(\"RoutingRules\");\n        nodes.map(function (node) {\n            containerNode_7.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_7);\n    }\n    return bodyNode;\n};\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\n    var contents = {\n        DaysAfterInitiation: undefined,\n    };\n    if (output[\"DaysAfterInitiation\"] !== undefined) {\n        contents.DaysAfterInitiation = __strictParseInt32(output[\"DaysAfterInitiation\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\n    var contents = {\n        Owner: undefined,\n    };\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = __expectString(output[\"Owner\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        Filter: undefined,\n        StorageClassAnalysis: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlAnalyticsFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    if (output[\"StorageClassAnalysis\"] !== undefined) {\n        contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\n    var contents = {\n        S3BucketDestination: undefined,\n    };\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\n    var contents = {\n        Format: undefined,\n        BucketAccountId: undefined,\n        Bucket: undefined,\n        Prefix: undefined,\n    };\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = __expectString(output[\"Format\"]);\n    }\n    if (output[\"BucketAccountId\"] !== undefined) {\n        contents.BucketAccountId = __expectString(output[\"BucketAccountId\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlBucket = function (output, context) {\n    var contents = {\n        Name: undefined,\n        CreationDate: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"CreationDate\"] !== undefined) {\n        contents.CreationDate = __expectNonNull(__parseRfc3339DateTime(output[\"CreationDate\"]));\n    }\n    return contents;\n};\nvar deserializeAws_restXmlBuckets = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlBucket(entry, context);\n    });\n};\nvar deserializeAws_restXmlChecksum = function (output, context) {\n    var contents = {\n        ChecksumCRC32: undefined,\n        ChecksumCRC32C: undefined,\n        ChecksumSHA1: undefined,\n        ChecksumSHA256: undefined,\n    };\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlChecksumAlgorithmList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlCommonPrefix(entry, context);\n    });\n};\nvar deserializeAws_restXmlCondition = function (output, context) {\n    var contents = {\n        HttpErrorCodeReturnedEquals: undefined,\n        KeyPrefixEquals: undefined,\n    };\n    if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n        contents.HttpErrorCodeReturnedEquals = __expectString(output[\"HttpErrorCodeReturnedEquals\"]);\n    }\n    if (output[\"KeyPrefixEquals\"] !== undefined) {\n        contents.KeyPrefixEquals = __expectString(output[\"KeyPrefixEquals\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlContinuationEvent = function (output, context) {\n    var contents = {};\n    return contents;\n};\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\n    var contents = {\n        ETag: undefined,\n        LastModified: undefined,\n        ChecksumCRC32: undefined,\n        ChecksumCRC32C: undefined,\n        ChecksumSHA1: undefined,\n        ChecksumSHA256: undefined,\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\n    var contents = {\n        ETag: undefined,\n        LastModified: undefined,\n        ChecksumCRC32: undefined,\n        ChecksumCRC32C: undefined,\n        ChecksumSHA1: undefined,\n        ChecksumSHA256: undefined,\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCORSRule = function (output, context) {\n    var contents = {\n        ID: undefined,\n        AllowedHeaders: undefined,\n        AllowedMethods: undefined,\n        AllowedOrigins: undefined,\n        ExposeHeaders: undefined,\n        MaxAgeSeconds: undefined,\n    };\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output.AllowedHeader === \"\") {\n        contents.AllowedHeaders = [];\n    }\n    else if (output[\"AllowedHeader\"] !== undefined) {\n        contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n    }\n    if (output.AllowedMethod === \"\") {\n        contents.AllowedMethods = [];\n    }\n    else if (output[\"AllowedMethod\"] !== undefined) {\n        contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n    }\n    if (output.AllowedOrigin === \"\") {\n        contents.AllowedOrigins = [];\n    }\n    else if (output[\"AllowedOrigin\"] !== undefined) {\n        contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n    }\n    if (output.ExposeHeader === \"\") {\n        contents.ExposeHeaders = [];\n    }\n    else if (output[\"ExposeHeader\"] !== undefined) {\n        contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n    }\n    if (output[\"MaxAgeSeconds\"] !== undefined) {\n        contents.MaxAgeSeconds = __strictParseInt32(output[\"MaxAgeSeconds\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCORSRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlCORSRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\n    var contents = {\n        Mode: undefined,\n        Days: undefined,\n        Years: undefined,\n    };\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = __expectString(output[\"Mode\"]);\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"Years\"] !== undefined) {\n        contents.Years = __strictParseInt32(output[\"Years\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\n    var contents = {\n        Key: undefined,\n        VersionId: undefined,\n        DeleteMarker: undefined,\n        DeleteMarkerVersionId: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"DeleteMarker\"] !== undefined) {\n        contents.DeleteMarker = __parseBoolean(output[\"DeleteMarker\"]);\n    }\n    if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n        contents.DeleteMarkerVersionId = __expectString(output[\"DeleteMarkerVersionId\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlDeletedObject(entry, context);\n    });\n};\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\n    var contents = {\n        Owner: undefined,\n        Key: undefined,\n        VersionId: undefined,\n        IsLatest: undefined,\n        LastModified: undefined,\n    };\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n    });\n};\nvar deserializeAws_restXmlDestination = function (output, context) {\n    var contents = {\n        Bucket: undefined,\n        Account: undefined,\n        StorageClass: undefined,\n        AccessControlTranslation: undefined,\n        EncryptionConfiguration: undefined,\n        ReplicationTime: undefined,\n        Metrics: undefined,\n    };\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = __expectString(output[\"Account\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"AccessControlTranslation\"] !== undefined) {\n        contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n    }\n    if (output[\"EncryptionConfiguration\"] !== undefined) {\n        contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n    }\n    if (output[\"ReplicationTime\"] !== undefined) {\n        contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n    }\n    if (output[\"Metrics\"] !== undefined) {\n        contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\n    var contents = {\n        ReplicaKmsKeyID: undefined,\n    };\n    if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n        contents.ReplicaKmsKeyID = __expectString(output[\"ReplicaKmsKeyID\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlEndEvent = function (output, context) {\n    var contents = {};\n    return contents;\n};\nvar deserializeAws_restXml_Error = function (output, context) {\n    var contents = {\n        Key: undefined,\n        VersionId: undefined,\n        Code: undefined,\n        Message: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"Code\"] !== undefined) {\n        contents.Code = __expectString(output[\"Code\"]);\n    }\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = __expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\n    var contents = {\n        Key: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlErrors = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXml_Error(entry, context);\n    });\n};\nvar deserializeAws_restXmlEventBridgeConfiguration = function (output, context) {\n    var contents = {};\n    return contents;\n};\nvar deserializeAws_restXmlEventList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlFilterRule = function (output, context) {\n    var contents = {\n        Name: undefined,\n        Value: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = __expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlFilterRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlGetObjectAttributesParts = function (output, context) {\n    var contents = {\n        TotalPartsCount: undefined,\n        PartNumberMarker: undefined,\n        NextPartNumberMarker: undefined,\n        MaxParts: undefined,\n        IsTruncated: undefined,\n        Parts: undefined,\n    };\n    if (output[\"PartsCount\"] !== undefined) {\n        contents.TotalPartsCount = __strictParseInt32(output[\"PartsCount\"]);\n    }\n    if (output[\"PartNumberMarker\"] !== undefined) {\n        contents.PartNumberMarker = __expectString(output[\"PartNumberMarker\"]);\n    }\n    if (output[\"NextPartNumberMarker\"] !== undefined) {\n        contents.NextPartNumberMarker = __expectString(output[\"NextPartNumberMarker\"]);\n    }\n    if (output[\"MaxParts\"] !== undefined) {\n        contents.MaxParts = __strictParseInt32(output[\"MaxParts\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(output[\"IsTruncated\"]);\n    }\n    if (output.Part === \"\") {\n        contents.Parts = [];\n    }\n    else if (output[\"Part\"] !== undefined) {\n        contents.Parts = deserializeAws_restXmlPartsList(__getArrayIfSingleItem(output[\"Part\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlGrant = function (output, context) {\n    var contents = {\n        Grantee: undefined,\n        Permission: undefined,\n    };\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = __expectString(output[\"Permission\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlGrantee = function (output, context) {\n    var contents = {\n        DisplayName: undefined,\n        EmailAddress: undefined,\n        ID: undefined,\n        URI: undefined,\n        Type: undefined,\n    };\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = __expectString(output[\"DisplayName\"]);\n    }\n    if (output[\"EmailAddress\"] !== undefined) {\n        contents.EmailAddress = __expectString(output[\"EmailAddress\"]);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"URI\"] !== undefined) {\n        contents.URI = __expectString(output[\"URI\"]);\n    }\n    if (output[\"xsi:type\"] !== undefined) {\n        contents.Type = __expectString(output[\"xsi:type\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlGrants = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlGrant(entry, context);\n    });\n};\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\n    var contents = {\n        Suffix: undefined,\n    };\n    if (output[\"Suffix\"] !== undefined) {\n        contents.Suffix = __expectString(output[\"Suffix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInitiator = function (output, context) {\n    var contents = {\n        ID: undefined,\n        DisplayName: undefined,\n    };\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = __expectString(output[\"DisplayName\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        Filter: undefined,\n        Status: undefined,\n        Tierings: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output.Tiering === \"\") {\n        contents.Tierings = [];\n    }\n    else if (output[\"Tiering\"] !== undefined) {\n        contents.Tierings = deserializeAws_restXmlTieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlIntelligentTieringFilter = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tag: undefined,\n        And: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n    }\n    if (output[\"And\"] !== undefined) {\n        contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output[\"And\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\n    var contents = {\n        Destination: undefined,\n        IsEnabled: undefined,\n        Filter: undefined,\n        Id: undefined,\n        IncludedObjectVersions: undefined,\n        OptionalFields: undefined,\n        Schedule: undefined,\n    };\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n    }\n    if (output[\"IsEnabled\"] !== undefined) {\n        contents.IsEnabled = __parseBoolean(output[\"IsEnabled\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"IncludedObjectVersions\"] !== undefined) {\n        contents.IncludedObjectVersions = __expectString(output[\"IncludedObjectVersions\"]);\n    }\n    if (output.OptionalFields === \"\") {\n        contents.OptionalFields = [];\n    }\n    else if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n        contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n    }\n    if (output[\"Schedule\"] !== undefined) {\n        contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlInventoryConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\n    var contents = {\n        S3BucketDestination: undefined,\n    };\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\n    var contents = {\n        SSES3: undefined,\n        SSEKMS: undefined,\n    };\n    if (output[\"SSE-S3\"] !== undefined) {\n        contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n    }\n    if (output[\"SSE-KMS\"] !== undefined) {\n        contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\n    var contents = {\n        AccountId: undefined,\n        Bucket: undefined,\n        Format: undefined,\n        Prefix: undefined,\n        Encryption: undefined,\n    };\n    if (output[\"AccountId\"] !== undefined) {\n        contents.AccountId = __expectString(output[\"AccountId\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = __expectString(output[\"Format\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output[\"Encryption\"] !== undefined) {\n        contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\n    var contents = {\n        Frequency: undefined,\n    };\n    if (output[\"Frequency\"] !== undefined) {\n        contents.Frequency = __expectString(output[\"Frequency\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        LambdaFunctionArn: undefined,\n        Events: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"CloudFunction\"] !== undefined) {\n        contents.LambdaFunctionArn = __expectString(output[\"CloudFunction\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    else if (output[\"Event\"] !== undefined) {\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\n    var contents = {\n        Date: undefined,\n        Days: undefined,\n        ExpiredObjectDeleteMarker: undefined,\n    };\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = __expectNonNull(__parseRfc3339DateTime(output[\"Date\"]));\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n        contents.ExpiredObjectDeleteMarker = __parseBoolean(output[\"ExpiredObjectDeleteMarker\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\n    var contents = {\n        Expiration: undefined,\n        ID: undefined,\n        Prefix: undefined,\n        Filter: undefined,\n        Status: undefined,\n        Transitions: undefined,\n        NoncurrentVersionTransitions: undefined,\n        NoncurrentVersionExpiration: undefined,\n        AbortIncompleteMultipartUpload: undefined,\n    };\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output.Transition === \"\") {\n        contents.Transitions = [];\n    }\n    else if (output[\"Transition\"] !== undefined) {\n        contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n    }\n    if (output.NoncurrentVersionTransition === \"\") {\n        contents.NoncurrentVersionTransitions = [];\n    }\n    else if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n        contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n    }\n    if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n        contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n    }\n    if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n        contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n        ObjectSizeGreaterThan: undefined,\n        ObjectSizeLessThan: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n        contents.ObjectSizeGreaterThan = __strictParseLong(output[\"ObjectSizeGreaterThan\"]);\n    }\n    if (output[\"ObjectSizeLessThan\"] !== undefined) {\n        contents.ObjectSizeLessThan = __strictParseLong(output[\"ObjectSizeLessThan\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n        return {\n            ObjectSizeGreaterThan: __strictParseLong(output[\"ObjectSizeGreaterThan\"]),\n        };\n    }\n    if (output[\"ObjectSizeLessThan\"] !== undefined) {\n        return {\n            ObjectSizeLessThan: __strictParseLong(output[\"ObjectSizeLessThan\"]),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlLifecycleRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\n    var contents = {\n        TargetBucket: undefined,\n        TargetGrants: undefined,\n        TargetPrefix: undefined,\n    };\n    if (output[\"TargetBucket\"] !== undefined) {\n        contents.TargetBucket = __expectString(output[\"TargetBucket\"]);\n    }\n    if (output.TargetGrants === \"\") {\n        contents.TargetGrants = [];\n    }\n    else if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n        contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n    }\n    if (output[\"TargetPrefix\"] !== undefined) {\n        contents.TargetPrefix = __expectString(output[\"TargetPrefix\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetrics = function (output, context) {\n    var contents = {\n        Status: undefined,\n        EventThreshold: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"EventThreshold\"] !== undefined) {\n        contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n        AccessPointArn: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    if (output[\"AccessPointArn\"] !== undefined) {\n        contents.AccessPointArn = __expectString(output[\"AccessPointArn\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlMetricsFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlMetricsConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"AccessPointArn\"] !== undefined) {\n        return {\n            AccessPointArn: __expectString(output[\"AccessPointArn\"]),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\n    var contents = {\n        UploadId: undefined,\n        Key: undefined,\n        Initiated: undefined,\n        StorageClass: undefined,\n        Owner: undefined,\n        Initiator: undefined,\n        ChecksumAlgorithm: undefined,\n    };\n    if (output[\"UploadId\"] !== undefined) {\n        contents.UploadId = __expectString(output[\"UploadId\"]);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"Initiated\"] !== undefined) {\n        contents.Initiated = __expectNonNull(__parseRfc3339DateTime(output[\"Initiated\"]));\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"Initiator\"] !== undefined) {\n        contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n    }\n    if (output[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = __expectString(output[\"ChecksumAlgorithm\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlMultipartUpload(entry, context);\n    });\n};\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\n    var contents = {\n        NoncurrentDays: undefined,\n        NewerNoncurrentVersions: undefined,\n    };\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n        contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\n    var contents = {\n        NoncurrentDays: undefined,\n        StorageClass: undefined,\n        NewerNoncurrentVersions: undefined,\n    };\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n        contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    });\n};\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\n    var contents = {\n        Key: undefined,\n    };\n    if (output[\"S3Key\"] !== undefined) {\n        contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXml_Object = function (output, context) {\n    var contents = {\n        Key: undefined,\n        LastModified: undefined,\n        ETag: undefined,\n        ChecksumAlgorithm: undefined,\n        Size: undefined,\n        StorageClass: undefined,\n        Owner: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output.ChecksumAlgorithm === \"\") {\n        contents.ChecksumAlgorithm = [];\n    }\n    else if (output[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = deserializeAws_restXmlChecksumAlgorithmList(__getArrayIfSingleItem(output[\"ChecksumAlgorithm\"]), context);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXml_Object(entry, context);\n    });\n};\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\n    var contents = {\n        ObjectLockEnabled: undefined,\n        Rule: undefined,\n    };\n    if (output[\"ObjectLockEnabled\"] !== undefined) {\n        contents.ObjectLockEnabled = __expectString(output[\"ObjectLockEnabled\"]);\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\n    var contents = {\n        Mode: undefined,\n        RetainUntilDate: undefined,\n    };\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = __expectString(output[\"Mode\"]);\n    }\n    if (output[\"RetainUntilDate\"] !== undefined) {\n        contents.RetainUntilDate = __expectNonNull(__parseRfc3339DateTime(output[\"RetainUntilDate\"]));\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\n    var contents = {\n        DefaultRetention: undefined,\n    };\n    if (output[\"DefaultRetention\"] !== undefined) {\n        contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectPart = function (output, context) {\n    var contents = {\n        PartNumber: undefined,\n        Size: undefined,\n        ChecksumCRC32: undefined,\n        ChecksumCRC32C: undefined,\n        ChecksumSHA1: undefined,\n        ChecksumSHA256: undefined,\n    };\n    if (output[\"PartNumber\"] !== undefined) {\n        contents.PartNumber = __strictParseInt32(output[\"PartNumber\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\n    var contents = {\n        ETag: undefined,\n        ChecksumAlgorithm: undefined,\n        Size: undefined,\n        StorageClass: undefined,\n        Key: undefined,\n        VersionId: undefined,\n        IsLatest: undefined,\n        LastModified: undefined,\n        Owner: undefined,\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output.ChecksumAlgorithm === \"\") {\n        contents.ChecksumAlgorithm = [];\n    }\n    else if (output[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = deserializeAws_restXmlChecksumAlgorithmList(__getArrayIfSingleItem(output[\"ChecksumAlgorithm\"]), context);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlObjectVersion(entry, context);\n    });\n};\nvar deserializeAws_restXmlOwner = function (output, context) {\n    var contents = {\n        DisplayName: undefined,\n        ID: undefined,\n    };\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = __expectString(output[\"DisplayName\"]);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlOwnershipControls = function (output, context) {\n    var contents = {\n        Rules: undefined,\n    };\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rule\"] !== undefined) {\n        contents.Rules = deserializeAws_restXmlOwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlOwnershipControlsRule = function (output, context) {\n    var contents = {\n        ObjectOwnership: undefined,\n    };\n    if (output[\"ObjectOwnership\"] !== undefined) {\n        contents.ObjectOwnership = __expectString(output[\"ObjectOwnership\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlOwnershipControlsRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlOwnershipControlsRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlPart = function (output, context) {\n    var contents = {\n        PartNumber: undefined,\n        LastModified: undefined,\n        ETag: undefined,\n        Size: undefined,\n        ChecksumCRC32: undefined,\n        ChecksumCRC32C: undefined,\n        ChecksumSHA1: undefined,\n        ChecksumSHA256: undefined,\n    };\n    if (output[\"PartNumber\"] !== undefined) {\n        contents.PartNumber = __strictParseInt32(output[\"PartNumber\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTime(output[\"LastModified\"]));\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlParts = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlPart(entry, context);\n    });\n};\nvar deserializeAws_restXmlPartsList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlObjectPart(entry, context);\n    });\n};\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\n    var contents = {\n        IsPublic: undefined,\n    };\n    if (output[\"IsPublic\"] !== undefined) {\n        contents.IsPublic = __parseBoolean(output[\"IsPublic\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlProgress = function (output, context) {\n    var contents = {\n        BytesScanned: undefined,\n        BytesProcessed: undefined,\n        BytesReturned: undefined,\n    };\n    if (output[\"BytesScanned\"] !== undefined) {\n        contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n    }\n    if (output[\"BytesProcessed\"] !== undefined) {\n        contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n    }\n    if (output[\"BytesReturned\"] !== undefined) {\n        contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlProgressEvent = function (output, context) {\n    var contents = {\n        Details: undefined,\n    };\n    if (output[\"Details\"] !== undefined) {\n        contents.Details = deserializeAws_restXmlProgress(output[\"Details\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\n    var contents = {\n        BlockPublicAcls: undefined,\n        IgnorePublicAcls: undefined,\n        BlockPublicPolicy: undefined,\n        RestrictPublicBuckets: undefined,\n    };\n    if (output[\"BlockPublicAcls\"] !== undefined) {\n        contents.BlockPublicAcls = __parseBoolean(output[\"BlockPublicAcls\"]);\n    }\n    if (output[\"IgnorePublicAcls\"] !== undefined) {\n        contents.IgnorePublicAcls = __parseBoolean(output[\"IgnorePublicAcls\"]);\n    }\n    if (output[\"BlockPublicPolicy\"] !== undefined) {\n        contents.BlockPublicPolicy = __parseBoolean(output[\"BlockPublicPolicy\"]);\n    }\n    if (output[\"RestrictPublicBuckets\"] !== undefined) {\n        contents.RestrictPublicBuckets = __parseBoolean(output[\"RestrictPublicBuckets\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        QueueArn: undefined,\n        Events: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Queue\"] !== undefined) {\n        contents.QueueArn = __expectString(output[\"Queue\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    else if (output[\"Event\"] !== undefined) {\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlQueueConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlRecordsEvent = function (output, context) {\n    var contents = {\n        Payload: undefined,\n    };\n    if (output[\"Payload\"] !== undefined) {\n        contents.Payload = context.base64Decoder(output[\"Payload\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRedirect = function (output, context) {\n    var contents = {\n        HostName: undefined,\n        HttpRedirectCode: undefined,\n        Protocol: undefined,\n        ReplaceKeyPrefixWith: undefined,\n        ReplaceKeyWith: undefined,\n    };\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = __expectString(output[\"HostName\"]);\n    }\n    if (output[\"HttpRedirectCode\"] !== undefined) {\n        contents.HttpRedirectCode = __expectString(output[\"HttpRedirectCode\"]);\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = __expectString(output[\"Protocol\"]);\n    }\n    if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n        contents.ReplaceKeyPrefixWith = __expectString(output[\"ReplaceKeyPrefixWith\"]);\n    }\n    if (output[\"ReplaceKeyWith\"] !== undefined) {\n        contents.ReplaceKeyWith = __expectString(output[\"ReplaceKeyWith\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\n    var contents = {\n        HostName: undefined,\n        Protocol: undefined,\n    };\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = __expectString(output[\"HostName\"]);\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = __expectString(output[\"Protocol\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicaModifications = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\n    var contents = {\n        Role: undefined,\n        Rules: undefined,\n    };\n    if (output[\"Role\"] !== undefined) {\n        contents.Role = __expectString(output[\"Role\"]);\n    }\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rule\"] !== undefined) {\n        contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\n    var contents = {\n        ID: undefined,\n        Priority: undefined,\n        Prefix: undefined,\n        Filter: undefined,\n        Status: undefined,\n        SourceSelectionCriteria: undefined,\n        ExistingObjectReplication: undefined,\n        Destination: undefined,\n        DeleteMarkerReplication: undefined,\n    };\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"Priority\"] !== undefined) {\n        contents.Priority = __strictParseInt32(output[\"Priority\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlReplicationRuleFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"SourceSelectionCriteria\"] !== undefined) {\n        contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n    }\n    if (output[\"ExistingObjectReplication\"] !== undefined) {\n        contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n    }\n    if (output[\"DeleteMarkerReplication\"] !== undefined) {\n        contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlReplicationRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\n    var contents = {\n        Status: undefined,\n        Time: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"Time\"] !== undefined) {\n        contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\n    var contents = {\n        Minutes: undefined,\n    };\n    if (output[\"Minutes\"] !== undefined) {\n        contents.Minutes = __strictParseInt32(output[\"Minutes\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\n    var contents = {\n        Condition: undefined,\n        Redirect: undefined,\n    };\n    if (output[\"Condition\"] !== undefined) {\n        contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n    }\n    if (output[\"Redirect\"] !== undefined) {\n        contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlRoutingRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\n    var contents = {\n        FilterRules: undefined,\n    };\n    if (output.FilterRule === \"\") {\n        contents.FilterRules = [];\n    }\n    else if (output[\"FilterRule\"] !== undefined) {\n        contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSelectObjectContentEventStream = function (output, context) {\n    if (output[\"Records\"] !== undefined) {\n        return {\n            Records: deserializeAws_restXmlRecordsEvent(output[\"Records\"], context),\n        };\n    }\n    if (output[\"Stats\"] !== undefined) {\n        return {\n            Stats: deserializeAws_restXmlStatsEvent(output[\"Stats\"], context),\n        };\n    }\n    if (output[\"Progress\"] !== undefined) {\n        return {\n            Progress: deserializeAws_restXmlProgressEvent(output[\"Progress\"], context),\n        };\n    }\n    if (output[\"Cont\"] !== undefined) {\n        return {\n            Cont: deserializeAws_restXmlContinuationEvent(output[\"Cont\"], context),\n        };\n    }\n    if (output[\"End\"] !== undefined) {\n        return {\n            End: deserializeAws_restXmlEndEvent(output[\"End\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\n    var contents = {\n        SSEAlgorithm: undefined,\n        KMSMasterKeyID: undefined,\n    };\n    if (output[\"SSEAlgorithm\"] !== undefined) {\n        contents.SSEAlgorithm = __expectString(output[\"SSEAlgorithm\"]);\n    }\n    if (output[\"KMSMasterKeyID\"] !== undefined) {\n        contents.KMSMasterKeyID = __expectString(output[\"KMSMasterKeyID\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\n    var contents = {\n        Rules: undefined,\n    };\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rule\"] !== undefined) {\n        contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\n    var contents = {\n        ApplyServerSideEncryptionByDefault: undefined,\n        BucketKeyEnabled: undefined,\n    };\n    if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n        contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n    }\n    if (output[\"BucketKeyEnabled\"] !== undefined) {\n        contents.BucketKeyEnabled = __parseBoolean(output[\"BucketKeyEnabled\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\n    var contents = {\n        SseKmsEncryptedObjects: undefined,\n        ReplicaModifications: undefined,\n    };\n    if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n        contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n    }\n    if (output[\"ReplicaModifications\"] !== undefined) {\n        contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output[\"ReplicaModifications\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\n    var contents = {\n        KeyId: undefined,\n    };\n    if (output[\"KeyId\"] !== undefined) {\n        contents.KeyId = __expectString(output[\"KeyId\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSSES3 = function (output, context) {\n    var contents = {};\n    return contents;\n};\nvar deserializeAws_restXmlStats = function (output, context) {\n    var contents = {\n        BytesScanned: undefined,\n        BytesProcessed: undefined,\n        BytesReturned: undefined,\n    };\n    if (output[\"BytesScanned\"] !== undefined) {\n        contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n    }\n    if (output[\"BytesProcessed\"] !== undefined) {\n        contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n    }\n    if (output[\"BytesReturned\"] !== undefined) {\n        contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlStatsEvent = function (output, context) {\n    var contents = {\n        Details: undefined,\n    };\n    if (output[\"Details\"] !== undefined) {\n        contents.Details = deserializeAws_restXmlStats(output[\"Details\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\n    var contents = {\n        DataExport: undefined,\n    };\n    if (output[\"DataExport\"] !== undefined) {\n        contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\n    var contents = {\n        OutputSchemaVersion: undefined,\n        Destination: undefined,\n    };\n    if (output[\"OutputSchemaVersion\"] !== undefined) {\n        contents.OutputSchemaVersion = __expectString(output[\"OutputSchemaVersion\"]);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTag = function (output, context) {\n    var contents = {\n        Key: undefined,\n        Value: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = __expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTagSet = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTag(entry, context);\n    });\n};\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\n    var contents = {\n        Grantee: undefined,\n        Permission: undefined,\n    };\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = __expectString(output[\"Permission\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTargetGrant(entry, context);\n    });\n};\nvar deserializeAws_restXmlTiering = function (output, context) {\n    var contents = {\n        Days: undefined,\n        AccessTier: undefined,\n    };\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = __expectString(output[\"AccessTier\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTieringList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTiering(entry, context);\n    });\n};\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        TopicArn: undefined,\n        Events: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Topic\"] !== undefined) {\n        contents.TopicArn = __expectString(output[\"Topic\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    else if (output[\"Event\"] !== undefined) {\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTopicConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlTransition = function (output, context) {\n    var contents = {\n        Date: undefined,\n        Days: undefined,\n        StorageClass: undefined,\n    };\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = __expectNonNull(__parseRfc3339DateTime(output[\"Date\"]));\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTransitionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTransition(entry, context);\n    });\n};\nvar deserializeMetadata = function (output) {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nvar collectBody = function (streamBody, context) {\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\n};\nvar isSerializableHeaderValue = function (value) {\n    return value !== undefined &&\n        value !== null &&\n        value !== \"\" &&\n        (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n        (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            var parsedObj = xmlParse(encoded, {\n                attributeNamePrefix: \"\",\n                ignoreAttributes: false,\n                parseNodeValue: false,\n                trimValues: false,\n                tagValueProcessor: function (val) { return (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : decodeHTML(val)); },\n            });\n            var textNodeName = \"#text\";\n            var key = Object.keys(parsedObj)[0];\n            var parsedObjToReturn = parsedObj[key];\n            if (parsedObjToReturn[textNodeName]) {\n                parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n                delete parsedObjToReturn[textNodeName];\n            }\n            return __getValueFromTextNode(parsedObjToReturn);\n        }\n        return {};\n    });\n};\nvar loadRestXmlErrorCode = function (output, data) {\n    if (data.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAW,IAAIC,aAAxB,EAAuCC,eAAe,IAAIC,iBAA1D,QAAoF,wBAApF;AACA,SAASC,eAAe,IAAIC,iBAA5B,EAA+CC,wBAAwB,IAAIC,0BAA3E,EAAuGC,aAAa,IAAIC,eAAxH,EAAyIC,YAAY,IAAIC,cAAzJ,EAAyKC,YAAY,IAAIC,cAAzL,EAAyMC,WAAW,IAAIC,aAAxN,EAAuOC,0BAA0B,IAAIC,4BAArQ,EAAmSC,oBAAoB,IAAIC,sBAA3T,EAAmVC,oBAAoB,IAAIC,sBAA3W,EAAmYC,YAAY,IAAIC,cAAnZ,EAAmaC,oBAAoB,IAAIC,sBAA3b,EAAmdC,oBAAoB,IAAIC,sBAA3e,EAAmgBC,gBAAgB,IAAIC,kBAAvhB,EAA2iBC,eAAe,IAAIC,iBAA9jB,QAAwlB,wBAAxlB;AACA,SAASC,OAAO,IAAIC,SAApB,EAA+BC,OAAO,IAAIC,SAA1C,QAA2D,sBAA3D;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,iBAAlC;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,uBAA/C,EAAwEC,kBAAxE,EAA4FC,mBAA5F,EAAiHC,aAAjH,EAAgIC,YAAhI,EAA8IC,SAA9I,EAAyJC,YAAzJ,EAAuKC,QAAvK,EAAiLC,0BAAjL,EAA6MC,qBAA7M,QAA2O,oBAA3O;AACA,SAASC,8BAAT,QAAgD,oBAAhD;AACA,SAASC,kBAAkB,IAAIC,eAA/B,QAAsD,8BAAtD;AACA,OAAO,IAAIC,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUC,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAAsC0D,KAAK,CAACkC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAEnC,KAAK,CAACkC;UAAlB,CAAtE,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIxF,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CwG,CAAhB;AA+CpF,CA/CE;AAgDP,OAAO,IAAIyB,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUrC,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4G0B,QAA5G;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuC,aAAP,CAAzB,IAAkD;YAAE,wBAAwBvC,KAAK,CAACuC;UAAhC,CAA3F,CAAT,EAAwJrB,yBAAyB,CAAClB,KAAK,CAACwC,cAAP,CAAzB,IAAmD;YAAE,yBAAyBxC,KAAK,CAACwC;UAAjC,CAA3M,CAAT,EAA0QtB,yBAAyB,CAAClB,KAAK,CAACyC,YAAP,CAAzB,IAAiD;YAAE,uBAAuBzC,KAAK,CAACyC;UAA/B,CAA3T,CAAT,EAAsXvB,yBAAyB,CAAClB,KAAK,CAAC0C,cAAP,CAAzB,IAAmD;YAAE,yBAAyB1C,KAAK,CAAC0C;UAAjC,CAAza,CAAT,EAAwexB,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAzhB,CAAT,EAAolBD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACrrB,+BAA+BpB,KAAK,CAACoB;UADgpB,CAA5oB,CAAT,EAE9BF,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAC3D,mDAAmD3C,KAAK,CAAC2C;UADE,CAF3B,CAAT,EAIrBzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CAJ9B,CAAT,EAMZ1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CAN1C,CAAlB;UASApC,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAAyC0D,KAAK,CAACkC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAEnC,KAAK,CAACkC;UAAlB,CAAzE,CAAhB;;UACA,IAAIlC,KAAK,CAAC8C,eAAN,KAA0BrB,SAA9B,EAAyC;YACrCb,IAAI,GAAGmC,4CAA4C,CAAC/C,KAAK,CAAC8C,eAAP,EAAwB7C,OAAxB,CAAnD;UACH;;UACD,IAAID,KAAK,CAAC8C,eAAN,KAA0BrB,SAA9B,EAAyC;YACrCa,QAAQ,GAAGS,4CAA4C,CAAC/C,KAAK,CAAC8C,eAAP,EAAwB7C,OAAxB,CAAvD;YACAqC,QAAQ,GAAGA,QAAQ,CAACU,QAAT,CAAkB,yBAAlB,CAAX;YACApC,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,MAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhDR;IA2DH,CA5DiB,CAAlB;EA6DH,CA/D2G,CAAhB;AA+DvF,CA/DE;AAgEP,OAAO,IAAIuC,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAUnD,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoD,GAAP,CAAzB,IAAwC;YAAE,aAAapD,KAAK,CAACoD;UAArB,CAA9C,CAAT,EAAsFlC,yBAAyB,CAAClB,KAAK,CAACqD,YAAP,CAAzB,IAAiD;YAAE,iBAAiBrD,KAAK,CAACqD;UAAzB,CAAvI,CAAT,EAA4LnC,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAAE,4BAA4BtD,KAAK,CAACsD;UAApC,CAAlP,CAAT,EAAuTpC,yBAAyB,CAAClB,KAAK,CAACuD,kBAAP,CAAzB,IAAuD;YAAE,uBAAuBvD,KAAK,CAACuD;UAA/B,CAA9W,CAAT,EAA+arC,yBAAyB,CAAClB,KAAK,CAACwD,eAAP,CAAzB,IAAoD;YAAE,oBAAoBxD,KAAK,CAACwD;UAA5B,CAAne,CAAT,EAA8hBtC,yBAAyB,CAAClB,KAAK,CAACyD,eAAP,CAAzB,IAAoD;YAAE,oBAAoBzD,KAAK,CAACyD;UAA5B,CAAllB,CAAT,EAA6oBvC,yBAAyB,CAAClB,KAAK,CAAC0D,WAAP,CAAzB,IAAgD;YAAE,gBAAgB1D,KAAK,CAAC0D;UAAxB,CAA7rB,CAAT,EAAgvBxC,yBAAyB,CAAClB,KAAK,CAAC2D,UAAP,CAAzB,IAA+C;YAAE,qBAAqB3D,KAAK,CAAC2D;UAA7B,CAA/xB,CAAT,EAAs1BzC,yBAAyB,CAAClB,KAAK,CAAC4D,iBAAP,CAAzB,IAAsD;YACxqC,8BAA8B5D,KAAK,CAAC4D;UADooC,CAA54B,CAAT,EAEjR1C,yBAAyB,CAAClB,KAAK,CAAC6D,yBAAP,CAAzB,IAA8D;YAChE,uCAAuC/G,iBAAiB,CAACkD,KAAK,CAAC6D,yBAAP,CAAjB,CAAmDX,QAAnD;UADyB,CAFmN,CAAT,EAIxQhC,yBAAyB,CAAClB,KAAK,CAAC8D,qBAAP,CAAzB,IAA0D;YAC5D,mCAAmC9D,KAAK,CAAC8D;UADmB,CAJ8M,CAAT,EAM/P5C,yBAAyB,CAAClB,KAAK,CAAC+D,2BAAP,CAAzB,IAAgE;YAClE,yCAAyCjH,iBAAiB,CAACkD,KAAK,CAAC+D,2BAAP,CAAjB,CAAqDb,QAArD;UADyB,CAN+L,CAAT,EAQtPhC,yBAAyB,CAAClB,KAAK,CAACgE,OAAP,CAAzB,IAA4C;YAAEC,OAAO,EAAEnH,iBAAiB,CAACkD,KAAK,CAACgE,OAAP,CAAjB,CAAiCd,QAAjC;UAAX,CAR0M,CAAT,EAQpIhC,yBAAyB,CAAClB,KAAK,CAACkE,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BlE,KAAK,CAACkE;UAApC,CAR+E,CAAT,EAQXhD,yBAAyB,CAAClB,KAAK,CAACmE,SAAP,CAAzB,IAA8C;YAAE,oBAAoBnE,KAAK,CAACmE;UAA5B,CARnC,CAAT,EAQwFjD,yBAAyB,CAAClB,KAAK,CAACoE,YAAP,CAAzB,IAAiD;YAAE,wBAAwBpE,KAAK,CAACoE;UAAhC,CARzI,CAAT,EAQqMlD,yBAAyB,CAAClB,KAAK,CAACqE,aAAP,CAAzB,IAAkD;YAAE,yBAAyBrE,KAAK,CAACqE;UAAjC,CARvP,CAAT,EAQqTnD,yBAAyB,CAAClB,KAAK,CAACsE,iBAAP,CAAzB,IAAsD;YAAE,4BAA4BtE,KAAK,CAACsE;UAApC,CAR3W,CAAT,EAQgbpD,yBAAyB,CAAClB,KAAK,CAACuE,gBAAP,CAAzB,IAAqD;YAAE,2BAA2BvE,KAAK,CAACuE;UAAnC,CARre,CAAT,EAQwiBrD,yBAAyB,CAAClB,KAAK,CAACwE,oBAAP,CAAzB,IAAyD;YAC1xB,gCAAgCxE,KAAK,CAACwE;UADovB,CARjmB,CAAT,EAU9KtD,yBAAyB,CAAClB,KAAK,CAACyE,YAAP,CAAzB,IAAiD;YAAE,uBAAuBzE,KAAK,CAACyE;UAA/B,CAV6H,CAAT,EAUlEvD,yBAAyB,CAAClB,KAAK,CAAC0E,uBAAP,CAAzB,IAA4D;YACjK,mCAAmC1E,KAAK,CAAC0E;UADwH,CAVM,CAAT,EAY5JxD,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAC3D,mDAAmD3C,KAAK,CAAC2C;UADE,CAZmG,CAAT,EAcnJzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CAdgG,CAAT,EAgB1I1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CAhBoF,CAAT,EAkBjI3B,yBAAyB,CAAClB,KAAK,CAAC2E,WAAP,CAAzB,IAAgD;YAClD,+CAA+C3E,KAAK,CAAC2E;UADH,CAlBiF,CAAT,EAoBxHzD,yBAAyB,CAAClB,KAAK,CAAC4E,uBAAP,CAAzB,IAA4D;YAC9D,wCAAwC5E,KAAK,CAAC4E;UADgB,CApB4D,CAAT,EAsB/G1D,yBAAyB,CAAClB,KAAK,CAAC6E,gBAAP,CAAzB,IAAqD;YACvD,mDAAmD7E,KAAK,CAAC6E,gBAAN,CAAuB3B,QAAvB;UADI,CAtB0D,CAAT,EAwBtGhC,yBAAyB,CAAClB,KAAK,CAAC8E,8BAAP,CAAzB,IAAmE;YACrE,+DAA+D9E,KAAK,CAAC8E;UADA,CAxBmC,CAAT,EA0B7F5D,yBAAyB,CAAClB,KAAK,CAAC+E,wBAAP,CAAzB,IAA6D;YAC/D,yDAAyD/E,KAAK,CAAC+E;UADA,CA1BgC,CAAT,EA4BpF7D,yBAAyB,CAAClB,KAAK,CAACgF,2BAAP,CAAzB,IAAgE;YAClE,6DAA6DhF,KAAK,CAACgF;UADD,CA5BoB,CAAT,EA8B3E9D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CA9B0B,CAAT,EA8BiCD,yBAAyB,CAAClB,KAAK,CAACiF,OAAP,CAAzB,IAA4C;YAAE,iBAAiBjF,KAAK,CAACiF;UAAzB,CA9B7E,CAAT,EA8B6H/D,yBAAyB,CAAClB,KAAK,CAACkF,cAAP,CAAzB,IAAmD;YAAE,0BAA0BlF,KAAK,CAACkF;UAAlC,CA9BhL,CAAT,EA8BgPhE,yBAAyB,CAAClB,KAAK,CAACmF,yBAAP,CAAzB,IAA8D;YAChW,uCAAuC,CAACnF,KAAK,CAACmF,yBAAN,CAAgCC,WAAhC,GAA8CtD,KAA9C,CAAoD,GAApD,EAAyD,CAAzD,IAA8D,GAA/D,EAAoEoB,QAApE;UADyT,CA9B9S,CAAT,EAgCvChC,yBAAyB,CAAClB,KAAK,CAACqF,yBAAP,CAAzB,IAA8D;YAChE,gCAAgCrF,KAAK,CAACqF;UAD0B,CAhCvB,CAAT,EAkC9BnE,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAlC1B,CAAT,EAoCrBF,yBAAyB,CAAClB,KAAK,CAACsF,yBAAP,CAAzB,IAA8D;YAChE,sCAAsCtF,KAAK,CAACsF;UADoB,CApCzC,CAAT,EAsCZtF,KAAK,CAACuF,QAAN,KAAmB9D,SAAnB,IACF+D,MAAM,CAACC,IAAP,CAAYzF,KAAK,CAACuF,QAAlB,EAA4BG,MAA5B,CAAmC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;YACtD,IAAI1F,EAAJ;;YACA,OAAQ5D,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKqJ,GAAL,CAAT,GAAqBzF,EAAE,GAAG,EAAL,EAASA,EAAE,CAAC,cAAcmB,MAAd,CAAqBuE,MAAM,CAACC,WAAP,EAArB,CAAD,CAAF,GAAiD7F,KAAK,CAACuF,QAAN,CAAeK,MAAf,CAA1D,EAAkF1F,EAAvG,EAAhB;UACH,CAHD,EAGG,EAHH,CAvCc,CAAlB;UA2CAO,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ,QAAQ;UADJ,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIjE,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA1ER;IAqFH,CAtFiB,CAAlB;EAuFH,CAzF8F,CAAhB;AAyF1E,CAzFE;AA0FP,OAAO,IAAIkF,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAU9F,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFE,IAAnF,EAAyF0B,QAAzF;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACoD,GAAP,CAAzB,IAAwC;YAAE,aAAapD,KAAK,CAACoD;UAArB,CAAjF,CAAT,EAAyHlC,yBAAyB,CAAClB,KAAK,CAACkE,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BlE,KAAK,CAACkE;UAApC,CAA9K,CAAT,EAAkPhD,yBAAyB,CAAClB,KAAK,CAACmE,SAAP,CAAzB,IAA8C;YAAE,oBAAoBnE,KAAK,CAACmE;UAA5B,CAAhS,CAAT,EAAqVjD,yBAAyB,CAAClB,KAAK,CAACoE,YAAP,CAAzB,IAAiD;YAAE,wBAAwBpE,KAAK,CAACoE;UAAhC,CAAtY,CAAT,EAAkclD,yBAAyB,CAAClB,KAAK,CAAC+F,UAAP,CAAzB,IAA+C;YAAE,qBAAqB/F,KAAK,CAAC+F;UAA7B,CAAjf,CAAT,EAAwiB7E,yBAAyB,CAAClB,KAAK,CAACqE,aAAP,CAAzB,IAAkD;YAAE,yBAAyBrE,KAAK,CAACqE;UAAjC,CAA1lB,CAAT,EAAwpBnD,yBAAyB,CAAClB,KAAK,CAACgG,0BAAP,CAAzB,IAA+D;YAC9uB,oCAAoChG,KAAK,CAACgG,0BAAN,CAAiC9C,QAAjC;UAD0sB,CAAvtB,CAAT,EAEZhC,yBAAyB,CAAClB,KAAK,CAACiG,eAAP,CAAzB,IAAoD;YAAE,0BAA0BjG,KAAK,CAACiG;UAAlC,CAFxC,CAAlB;UAGAxF,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAACkG,yBAAN,KAAoCzE,SAAxC,EAAmD;YAC/Cb,IAAI,GAAGuF,6CAA6C,CAACnG,KAAK,CAACkG,yBAAP,EAAkCjG,OAAlC,CAApD;UACH;;UACD,IAAID,KAAK,CAACkG,yBAAN,KAAoCzE,SAAxC,EAAmD;YAC/Ca,QAAQ,GAAG6D,6CAA6C,CAACnG,KAAK,CAACkG,yBAAP,EAAkCjG,OAAlC,CAAxD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBG,IAAI,EAAEA;UAPe,CAAlB,CAAJ,CAAP;MA3BR;IAqCH,CAtCiB,CAAlB;EAuCH,CAzCgG,CAAhB;AAyC5E,CAzCE;AA0CP,OAAO,IAAIwF,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUpG,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoD,GAAP,CAAzB,IAAwC;YAAE,aAAapD,KAAK,CAACoD;UAArB,CAA9C,CAAT,EAAsFlC,yBAAyB,CAAClB,KAAK,CAACqD,YAAP,CAAzB,IAAiD;YAAE,iBAAiBrD,KAAK,CAACqD;UAAzB,CAAvI,CAAT,EAA4LnC,yBAAyB,CAAClB,KAAK,CAACuD,kBAAP,CAAzB,IAAuD;YAAE,uBAAuBvD,KAAK,CAACuD;UAA/B,CAAnP,CAAT,EAAoTrC,yBAAyB,CAAClB,KAAK,CAACwD,eAAP,CAAzB,IAAoD;YAAE,oBAAoBxD,KAAK,CAACwD;UAA5B,CAAxW,CAAT,EAAmatC,yBAAyB,CAAClB,KAAK,CAACyD,eAAP,CAAzB,IAAoD;YAAE,oBAAoBzD,KAAK,CAACyD;UAA5B,CAAvd,CAAT,EAAkhBvC,yBAAyB,CAAClB,KAAK,CAAC0D,WAAP,CAAzB,IAAgD;YAAE,gBAAgB1D,KAAK,CAAC0D;UAAxB,CAAlkB,CAAT,EAAqnBxC,yBAAyB,CAAClB,KAAK,CAACgE,OAAP,CAAzB,IAA4C;YAAEC,OAAO,EAAEnH,iBAAiB,CAACkD,KAAK,CAACgE,OAAP,CAAjB,CAAiCd,QAAjC;UAAX,CAAjqB,CAAT,EAAuuBhC,yBAAyB,CAAClB,KAAK,CAACkE,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BlE,KAAK,CAACkE;UAApC,CAA5xB,CAAT,EAAg2BhD,yBAAyB,CAAClB,KAAK,CAACmE,SAAP,CAAzB,IAA8C;YAAE,oBAAoBnE,KAAK,CAACmE;UAA5B,CAA94B,CAAT,EAAm8BjD,yBAAyB,CAAClB,KAAK,CAACoE,YAAP,CAAzB,IAAiD;YAAE,wBAAwBpE,KAAK,CAACoE;UAAhC,CAAp/B,CAAT,EAAgjClD,yBAAyB,CAAClB,KAAK,CAACqE,aAAP,CAAzB,IAAkD;YAAE,yBAAyBrE,KAAK,CAACqE;UAAjC,CAAlmC,CAAT,EAAgqCnD,yBAAyB,CAAClB,KAAK,CAACwE,oBAAP,CAAzB,IAAyD;YACv3C,gCAAgCxE,KAAK,CAACwE;UADi1C,CAAztC,CAAT,EAEnJtD,yBAAyB,CAAClB,KAAK,CAACyE,YAAP,CAAzB,IAAiD;YAAE,uBAAuBzE,KAAK,CAACyE;UAA/B,CAFkG,CAAT,EAEvCvD,yBAAyB,CAAClB,KAAK,CAAC0E,uBAAP,CAAzB,IAA4D;YACjK,mCAAmC1E,KAAK,CAAC0E;UADwH,CAFrB,CAAT,EAIjIxD,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAC3D,mDAAmD3C,KAAK,CAAC2C;UADE,CAJwE,CAAT,EAMxHzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CANqE,CAAT,EAQ/G1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CARyD,CAAT,EAUtG3B,yBAAyB,CAAClB,KAAK,CAAC2E,WAAP,CAAzB,IAAgD;YAClD,+CAA+C3E,KAAK,CAAC2E;UADH,CAVsD,CAAT,EAY7FzD,yBAAyB,CAAClB,KAAK,CAAC4E,uBAAP,CAAzB,IAA4D;YAC9D,wCAAwC5E,KAAK,CAAC4E;UADgB,CAZiC,CAAT,EAcpF1D,yBAAyB,CAAClB,KAAK,CAAC6E,gBAAP,CAAzB,IAAqD;YACvD,mDAAmD7E,KAAK,CAAC6E,gBAAN,CAAuB3B,QAAvB;UADI,CAd+B,CAAT,EAgB3EhC,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAhB0B,CAAT,EAgBiCD,yBAAyB,CAAClB,KAAK,CAACiF,OAAP,CAAzB,IAA4C;YAAE,iBAAiBjF,KAAK,CAACiF;UAAzB,CAhB7E,CAAT,EAgB6H/D,yBAAyB,CAAClB,KAAK,CAACkF,cAAP,CAAzB,IAAmD;YAAE,0BAA0BlF,KAAK,CAACkF;UAAlC,CAhBhL,CAAT,EAgBgPhE,yBAAyB,CAAClB,KAAK,CAACmF,yBAAP,CAAzB,IAA8D;YAChW,uCAAuC,CAACnF,KAAK,CAACmF,yBAAN,CAAgCC,WAAhC,GAA8CtD,KAA9C,CAAoD,GAApD,EAAyD,CAAzD,IAA8D,GAA/D,EAAoEoB,QAApE;UADyT,CAhB9S,CAAT,EAkBvChC,yBAAyB,CAAClB,KAAK,CAACqF,yBAAP,CAAzB,IAA8D;YAChE,gCAAgCrF,KAAK,CAACqF;UAD0B,CAlBvB,CAAT,EAoB9BnE,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CApB1B,CAAT,EAsBrBF,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAAE,4BAA4BtD,KAAK,CAACsD;UAApC,CAtBjC,CAAT,EAsBsGtD,KAAK,CAACuF,QAAN,KAAmB9D,SAAnB,IACpH+D,MAAM,CAACC,IAAP,CAAYzF,KAAK,CAACuF,QAAlB,EAA4BG,MAA5B,CAAmC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;YACtD,IAAI1F,EAAJ;;YACA,OAAQ5D,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKqJ,GAAL,CAAT,GAAqBzF,EAAE,GAAG,EAAL,EAASA,EAAE,CAAC,cAAcmB,MAAd,CAAqBuE,MAAM,CAACC,WAAP,EAArB,CAAD,CAAF,GAAiD7F,KAAK,CAACuF,QAAN,CAAeK,MAAf,CAA1D,EAAkF1F,EAAvG,EAAhB;UACH,CAHD,EAGG,EAHH,CAvBc,CAAlB;UA2BAO,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ0F,OAAO,EAAE,EADL;YAEJ,QAAQ;UAFJ,CAAR;UAIA,OAAO,CAAC,CAAD,EAAI,IAAI3J,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,MAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA3DR;IAsEH,CAvEiB,CAAlB;EAwEH,CA1EyG,CAAhB;AA0ErF,CA1EE;AA2EP,OAAO,IAAI0F,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUtG,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFE,IAAnF;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIjF,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBG,IAAI,EAAEA;UAPe,CAAlB,CAAJ,CAAP;MAlBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhCgG,CAAhB;AAgC5E,CAhCE;AAiCP,OAAO,IAAI2F,6DAA6D,GAAG,SAAhEA,6DAAgE,CAAUvG,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEkK,SAAS,EAAE;UAAb,CAAD,EAAqBxG,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA/C,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI/J,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCsH,CAAhB;AAkClG,CAlCE;AAmCP,OAAO,IAAI+F,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAU3G,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJiG,IAAI,EAAE;UADF,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIlK,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoG,CAAhB;AAoChF,CApCE;AAqCP,OAAO,IAAIiG,iDAAiD,GAAG,SAApDA,iDAAoD,CAAU7G,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJmG,UAAU,EAAE;UADR,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIpK,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC0G,CAAhB;AAoCtF,CApCE;AAqCP,OAAO,IAAImG,sEAAsE,GAAG,SAAzEA,sEAAyE,CAAU/G,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjK,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG,EAAV;UACAC,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE,uBAAuB;UAAzB,CAAD,EAAiC0D,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA3D,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI/J,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhC+H,CAAhB;AAgC3G,CAhCE;AAiCP,OAAO,IAAIoG,6DAA6D,GAAG,SAAhEA,6DAAgE,CAAUhH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE2K,SAAS,EAAE;UAAb,CAAD,EAAqBjH,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA/C,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI/J,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCsH,CAAhB;AAkClG,CAlCE;AAmCP,OAAO,IAAIsG,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUlH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJwG,SAAS,EAAE;UADP,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIzK,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCyG,CAAhB;AAoCrF,CApCE;AAqCP,OAAO,IAAIwG,2DAA2D,GAAG,SAA9DA,2DAA8D,CAAUpH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE+K,OAAO,EAAE;UAAX,CAAD,EAAmBrH,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA7C,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI/J,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCoH,CAAhB;AAkChG,CAlCE;AAmCP,OAAO,IAAI0G,wDAAwD,GAAG,SAA3DA,wDAA2D,CAAUtH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ4G,iBAAiB,EAAE;UADf,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI7K,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCiH,CAAhB;AAoC7F,CApCE;AAqCP,OAAO,IAAI4G,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUxH,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ8G,MAAM,EAAE;UADJ,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI/K,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCsG,CAAhB;AAoClF,CApCE;AAqCP,OAAO,IAAI8G,kDAAkD,GAAG,SAArDA,kDAAqD,CAAU1H,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJgH,WAAW,EAAE;UADT,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIjL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC2G,CAAhB;AAoCvF,CApCE;AAqCP,OAAO,IAAIgH,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU5H,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJkH,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAInL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCuG,CAAhB;AAoCnF,CApCE;AAqCP,OAAO,IAAIkH,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU9H,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJoH,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIrL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCuG,CAAhB;AAoCnF,CApCE;AAqCP,OAAO,IAAIoH,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUhI,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACiI,GAAP,CAAzB,IAAwC;YAAE,aAAajI,KAAK,CAACiI;UAArB,CAA9C,CAAT,EAAsF/G,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvI,CAAT,EAAkMD,yBAAyB,CAAClB,KAAK,CAACkI,yBAAP,CAAzB,IAA8D;YACvR,qCAAqClI,KAAK,CAACkI,yBAAN,CAAgChF,QAAhC;UADkP,CAAhQ,CAAT,EAEZhC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAA8B0D,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAA/D,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIzL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAlCR;IA6CH,CA9CiB,CAAlB;EA+CH,CAjDgG,CAAhB;AAiD5E,CAjDE;AAkDP,OAAO,IAAIyH,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUrI,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACiI,GAAP,CAAzB,IAAwC;YAAE,aAAajI,KAAK,CAACiI;UAArB,CAAjF,CAAT,EAAyH/G,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1K,CAAT,EAAqOD,yBAAyB,CAAClB,KAAK,CAACkI,yBAAP,CAAzB,IAA8D;YACnU,qCAAqClI,KAAK,CAACkI,yBAAN,CAAgChF,QAAhC;UAD8R,CAAnS,CAAT,EAErBhC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAFnC,CAAT,EAIZF,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACxD,gCAAgCtD,KAAK,CAACsD;UADkB,CAJ1C,CAAlB;UAOA7C,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ2H,MAAM,EAAE,EADJ;YAEJ,QAAQ;UAFJ,CAAR;;UAIA,IAAItI,KAAK,CAACuI,MAAN,KAAiB9G,SAArB,EAAgC;YAC5Bb,IAAI,GAAG4H,0BAA0B,CAACxI,KAAK,CAACuI,MAAP,EAAetI,OAAf,CAAjC;UACH;;UACD,IAAID,KAAK,CAACuI,MAAN,KAAiB9G,SAArB,EAAgC;YAC5Ba,QAAQ,GAAGkG,0BAA0B,CAACxI,KAAK,CAACuI,MAAP,EAAetI,OAAf,CAArC;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,MAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnCR;IA8CH,CA/CiB,CAAlB;EAgDH,CAlDiG,CAAhB;AAkD7E,CAlDE;AAmDP,OAAO,IAAI6H,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUzI,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEuL,OAAO,EAAE;UAAX,CAAD,EAAmB7H,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAApD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIzL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CuG,CAAhB;AA+CnF,CA/CE;AAgDP,OAAO,IAAI8H,kDAAkD,GAAG,SAArDA,kDAAqD,CAAU1I,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJgI,iBAAiB,EAAE;UADf,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIjM,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,QAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC2G,CAAhB;AAoCvF,CApCE;AAqCP,OAAO,IAAIgI,2DAA2D,GAAG,SAA9DA,2DAA8D,CAAU5I,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJkI,UAAU,EAAE;UADR,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAInM,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoH,CAAhB;AAoChG,CApCE;AAqCP,OAAO,IAAIkI,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAU9I,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJoI,GAAG,EAAE;UADD,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIrM,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCgG,CAAhB;AAoC5E,CApCE;AAqCP,OAAO,IAAIoI,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAUhJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEkK,SAAS,EAAE,EAAb;YAAiB,QAAQ;UAAzB,CAAD,EAAgExG,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA1F,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI/J,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCmH,CAAhB;AAkC/F,CAlCE;AAmCP,OAAO,IAAIqI,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUjJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJiG,IAAI,EAAE;UADF,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIlK,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCiG,CAAhB;AAoC7E,CApCE;AAqCP,OAAO,IAAIsI,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUlJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJmG,UAAU,EAAE;UADR,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIpK,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCuG,CAAhB;AAoCnF,CApCE;AAqCP,OAAO,IAAIuI,mEAAmE,GAAG,SAAtEA,mEAAsE,CAAUnJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9J,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG,EAAV;UACAC,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE,uBAAuB,EAAzB;YAA6B,QAAQ;UAArC,CAAD,EAAqF0D,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA/G,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI/J,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhC4H,CAAhB;AAgCxG,CAhCE;AAiCP,OAAO,IAAIwI,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAUpJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE2K,SAAS,EAAE,EAAb;YAAiB,QAAQ;UAAzB,CAAD,EAAgEjH,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA1F,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI/J,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCmH,CAAhB;AAkC/F,CAlCE;AAmCP,OAAO,IAAIyI,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAUrJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJwG,SAAS,EAAE;UADP,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIzK,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCmH,CAAhB;AAoC/F,CApCE;AAqCP,OAAO,IAAI0I,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUtJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ4I,QAAQ,EAAE;UADN,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI7M,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCqG,CAAhB;AAoCjF,CApCE;AAqCP,OAAO,IAAI4I,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUxJ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ8I,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI/M,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoG,CAAhB;AAoChF,CApCE;AAqCP,OAAO,IAAI8I,wDAAwD,GAAG,SAA3DA,wDAA2D,CAAU1J,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE+K,OAAO,EAAE,EAAX;YAAe,QAAQ;UAAvB,CAAD,EAA4DrH,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAAtF,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI/J,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCiH,CAAhB;AAkC7F,CAlCE;AAmCP,OAAO,IAAI+I,6DAA6D,GAAG,SAAhEA,6DAAgE,CAAU3J,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJiJ,YAAY,EAAE;UADV,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIlN,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCsH,CAAhB;AAoClG,CApCE;AAqCP,OAAO,IAAIiJ,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAU7J,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ4G,iBAAiB,EAAE;UADf,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI7K,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC8G,CAAhB;AAoC1F,CApCE;AAqCP,OAAO,IAAIkJ,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAU9J,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ8G,MAAM,EAAE;UADJ,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI/K,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCmG,CAAhB;AAoC/E,CApCE;AAqCP,OAAO,IAAImJ,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU/J,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJqJ,YAAY,EAAE;UADV,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAItN,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCyG,CAAhB;AAoCrF,CApCE;AAqCP,OAAO,IAAIqJ,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUjK,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJgH,WAAW,EAAE;UADT,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIjL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCwG,CAAhB;AAoCpF,CApCE;AAqCP,OAAO,IAAIsJ,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUlK,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJwJ,cAAc,EAAE;UADZ,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIzN,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC2G,CAAhB;AAoCvF,CApCE;AAqCP,OAAO,IAAIwJ,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUpK,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJkH,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAInL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoG,CAAhB;AAoChF,CApCE;AAqCP,OAAO,IAAIyJ,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUrK,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ2J,UAAU,EAAE;UADR,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI5N,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCuG,CAAhB;AAoCnF,CApCE;AAqCP,OAAO,IAAI2J,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUvK,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJoH,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIrL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCoG,CAAhB;AAoChF,CApCE;AAqCP,OAAO,IAAI4J,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUxK,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/H,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACyK,OAAP,CAAzB,IAA4C;YAAE,YAAYzK,KAAK,CAACyK;UAApB,CAAlD,CAAT,EAA6FvJ,yBAAyB,CAAClB,KAAK,CAAC0K,eAAP,CAAzB,IAAoD;YAChP,qBAAqB5N,iBAAiB,CAACkD,KAAK,CAAC0K,eAAP,CAAjB,CAAyCxH,QAAzC;UAD2N,CAAjJ,CAAT,EAEpFhC,yBAAyB,CAAClB,KAAK,CAAC2K,WAAP,CAAzB,IAAgD;YAAE,iBAAiB3K,KAAK,CAAC2K;UAAzB,CAFoC,CAAT,EAEgBzJ,yBAAyB,CAAClB,KAAK,CAAC4K,iBAAP,CAAzB,IAAsD;YACnJ,uBAAuB9N,iBAAiB,CAACkD,KAAK,CAAC4K,iBAAP,CAAjB,CAA2C1H,QAA3C;UAD4H,CAFtE,CAAT,EAIlEhC,yBAAyB,CAAClB,KAAK,CAAC6K,KAAP,CAAzB,IAA0C;YAAEC,KAAK,EAAE9K,KAAK,CAAC6K;UAAf,CAJwB,CAAT,EAIY3J,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAChI,mDAAmD3C,KAAK,CAAC2C;UADuE,CAJrE,CAAT,EAMhDzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CANH,CAAT,EAQvC1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CARf,CAAT,EAU9B3B,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAVnB,CAAT,EAU8ED,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC7J,+BAA+BpB,KAAK,CAACoB;UADwH,CAVtI,CAAT,EAYZF,yBAAyB,CAAClB,KAAK,CAAC+K,YAAP,CAAzB,IAAiD;YAAE,uBAAuB/K,KAAK,CAAC+K;UAA/B,CAZrC,CAAlB;UAaAtK,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAA2B0D,KAAK,CAACgL,oBAAN,KAA+BvJ,SAA/B,IAA4C;YAAE,0BAA0BzB,KAAK,CAACgL;UAAlC,CAAvE,CAAT,EAA6IhL,KAAK,CAACiL,0BAAN,KAAqCxJ,SAArC,IAAkD;YACjQ,gCAAgCzB,KAAK,CAACiL;UAD2N,CAA/L,CAAT,EAEvDjL,KAAK,CAACkL,uBAAN,KAAkCzJ,SAAlC,IAA+C;YAAE,6BAA6BzB,KAAK,CAACkL;UAArC,CAFQ,CAAT,EAEoElL,KAAK,CAACmL,uBAAN,KAAkC1J,SAAlC,IAA+C;YAAE,6BAA6BzB,KAAK,CAACmL;UAArC,CAFnH,CAAT,EAE+LnL,KAAK,CAACoL,mBAAN,KAA8B3J,SAA9B,IAA2C;YAAE,yBAAyBzB,KAAK,CAACoL;UAAjC,CAF1O,CAAT,EAE8SpL,KAAK,CAACqL,eAAN,KAA0B5J,SAA1B,IAAuC;YACnX,oBAAoB3E,iBAAiB,CAACkD,KAAK,CAACqL,eAAP,CAAjB,CAAyCnI,QAAzC;UAD+V,CAFrV,CAAT,EAInBlD,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAJd,CAAT,EAI0DnI,KAAK,CAACsL,UAAN,KAAqB7J,SAArB,IAAkC;YAAE8J,UAAU,EAAEvL,KAAK,CAACsL,UAAN,CAAiBpI,QAAjB;UAAd,CAJ5F,CAAhB;UAKA,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9CR;IAyDH,CA1DiB,CAAlB;EA2DH,CA7D6F,CAAhB;AA6DzE,CA7DE;AA8DP,OAAO,IAAI4K,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUxL,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEyM,GAAG,EAAE;UAAP,CAAD,EAAe/I,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAAhD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIzL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CgG,CAAhB;AA+C5E,CA/CE;AAgDP,OAAO,IAAI6K,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUzL,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAAC0L,QAAP,CAAzB,IAA6C;YAAE,mBAAmB1L,KAAK,CAAC0L,QAAN,CAAexI,QAAf;UAArB,CAAnD,CAAT,EAAiHhC,yBAAyB,CAAClB,KAAK,CAAC2L,gBAAP,CAAzB,IAAqD;YAAE,4BAA4B3L,KAAK,CAAC2L;UAApC,CAAtK,CAAT,EAA0OzK,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAC9V,mDAAmD3C,KAAK,CAAC2C;UADqS,CAAnS,CAAT,EAEhDzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CAFH,CAAT,EAIvC1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CAJf,CAAT,EAM9B3B,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CANnB,CAAT,EAM8ED,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC7J,+BAA+BpB,KAAK,CAACoB;UADwH,CANtI,CAAT,EAQZF,yBAAyB,CAAClB,KAAK,CAAC4L,gBAAP,CAAzB,IAAqD;YACvD,2BAA2B,CAAC5L,KAAK,CAAC4L,gBAAN,IAA0B,EAA3B,EAA+B7J,GAA/B,CAAmC,UAAU8J,MAAV,EAAkB;cAAE,OAAOA,MAAP;YAAgB,CAAvE,EAAyE5J,IAAzE,CAA8E,IAA9E;UAD4B,CARzC,CAAlB;UAWAxB,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEwP,UAAU,EAAE;UAAd,CAAD,EAAsB9L,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAAvD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIzL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAxCR;IAmDH,CApDiB,CAAlB;EAqDH,CAvDuG,CAAhB;AAuDnF,CAvDE;AAwDP,OAAO,IAAImL,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU/L,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE,cAAc;UAAhB,CAAD,EAAwB0D,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAAzD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIzL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CsG,CAAhB;AA+ClF,CA/CE;AAgDP,OAAO,IAAIoL,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUhM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ,eAAe;UADX,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIjE,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApC8G,CAAhB;AAoC1F,CApCE;AAqCP,OAAO,IAAIqL,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUjM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE4P,SAAS,EAAE;UAAb,CAAD,EAAqBlM,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAAtD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIzL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CsG,CAAhB;AA+ClF,CA/CE;AAgDP,OAAO,IAAIuL,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUnM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACrF,+BAA+BpB,KAAK,CAACoB;UADgD,CAA9D,CAAT,EAEZF,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAFrC,CAAlB;UAGAV,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEuL,OAAO,EAAE;UAAX,CAAD,EAAmB7H,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAApD,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIzL,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CoG,CAAhB;AA+ChF,CA/CE;AAgDP,OAAO,IAAIwL,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUpM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ0L,OAAO,EAAE;UADL,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAI3P,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAlCR;IA6CH,CA9CiB,CAAlB;EA+CH,CAjDoG,CAAhB;AAiDhF,CAjDE;AAkDP,OAAO,IAAI0L,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUtM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJgI,iBAAiB,EAAE;UADf,CAAR;UAGA,OAAO,CAAC,CAAD,EAAI,IAAIjM,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MArBR;IAgCH,CAjCiB,CAAlB;EAkCH,CApCwG,CAAhB;AAoCpF,CApCE;AAqCP,OAAO,IAAI2L,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAUvM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFE,IAAnF;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIjF,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,MAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBG,IAAI,EAAEA;UAPe,CAAlB,CAAJ,CAAP;MAlBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhC8F,CAAhB;AAgC1E,CAhCE;AAiCP,OAAO,IAAI4L,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAUxM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACyK,OAAP,CAAzB,IAA4C;YAAE,YAAYzK,KAAK,CAACyK;UAApB,CAAlD,CAAT,EAA6FvJ,yBAAyB,CAAClB,KAAK,CAAC0K,eAAP,CAAzB,IAAoD;YAChP,qBAAqB5N,iBAAiB,CAACkD,KAAK,CAAC0K,eAAP,CAAjB,CAAyCxH,QAAzC;UAD2N,CAAjJ,CAAT,EAEpFhC,yBAAyB,CAAClB,KAAK,CAAC2K,WAAP,CAAzB,IAAgD;YAAE,iBAAiB3K,KAAK,CAAC2K;UAAzB,CAFoC,CAAT,EAEgBzJ,yBAAyB,CAAClB,KAAK,CAAC4K,iBAAP,CAAzB,IAAsD;YACnJ,uBAAuB9N,iBAAiB,CAACkD,KAAK,CAAC4K,iBAAP,CAAjB,CAA2C1H,QAA3C;UAD4H,CAFtE,CAAT,EAIlEhC,yBAAyB,CAAClB,KAAK,CAAC6K,KAAP,CAAzB,IAA0C;YAAEC,KAAK,EAAE9K,KAAK,CAAC6K;UAAf,CAJwB,CAAT,EAIY3J,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAChI,mDAAmD3C,KAAK,CAAC2C;UADuE,CAJrE,CAAT,EAMhDzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CANH,CAAT,EAQvC1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CARf,CAAT,EAU9B3B,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAVnB,CAAT,EAU8ED,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC7J,+BAA+BpB,KAAK,CAACoB;UADwH,CAVtI,CAAT,EAYZF,yBAAyB,CAAClB,KAAK,CAAC+K,YAAP,CAAzB,IAAiD;YAAE,uBAAuB/K,KAAK,CAAC+K;UAA/B,CAZrC,CAAlB;UAaAtK,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM0D,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAAvC,CAAT,EAAmFnI,KAAK,CAACsL,UAAN,KAAqB7J,SAArB,IAAkC;YAAE8J,UAAU,EAAEvL,KAAK,CAACsL,UAAN,CAAiBpI,QAAjB;UAAd,CAArH,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,MAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA1CR;IAqDH,CAtDiB,CAAlB;EAuDH,CAzD8F,CAAhB;AAyD1E,CAzDE;AA0DP,OAAO,IAAI6L,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUzM,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEkK,SAAS,EAAE,EAAb;YAAiB,QAAQ;UAAzB,CAAD,EAAkExG,KAAK,CAAC0M,iBAAN,KAA4BjL,SAA5B,IAAyC;YAAE,sBAAsBzB,KAAK,CAAC0M;UAA9B,CAA3G,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIhQ,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCqH,CAAhB;AAkCjG,CAlCE;AAmCP,OAAO,IAAI+L,qEAAqE,GAAG,SAAxEA,qEAAwE,CAAU3M,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChK,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG,EAAV;UACAC,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE,uBAAuB,EAAzB;YAA6B,QAAQ;UAArC,CAAD,EAAuF0D,KAAK,CAAC0M,iBAAN,KAA4BjL,SAA5B,IAAyC;YAAE,sBAAsBzB,KAAK,CAAC0M;UAA9B,CAAhI,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIhQ,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjBR;IA4BH,CA7BiB,CAAlB;EA8BH,CAhC8H,CAAhB;AAgC1G,CAhCE;AAiCP,OAAO,IAAIgM,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAU5M,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE2K,SAAS,EAAE,EAAb;YAAiB,QAAQ;UAAzB,CAAD,EAAkEjH,KAAK,CAAC0M,iBAAN,KAA4BjL,SAA5B,IAAyC;YAAE,sBAAsBzB,KAAK,CAAC0M;UAA9B,CAA3G,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIhQ,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCqH,CAAhB;AAkCjG,CAlCE;AAmCP,OAAO,IAAIiM,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAU7M,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE+K,OAAO,EAAE,EAAX;YAAe,QAAQ;UAAvB,CAAD,EAA8DrH,KAAK,CAAC0M,iBAAN,KAA4BjL,SAA5B,IAAyC;YAAE,sBAAsBzB,KAAK,CAAC0M;UAA9B,CAAvG,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIhQ,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCmH,CAAhB;AAkC/F,CAlCE;AAmCP,OAAO,IAAIkM,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAU9M,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEG,IAAvE;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG;YACN,gBAAgB;UADV,CAAV;UAGAC,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,GAAlJ;UACAK,IAAI,GAAG,EAAP;UACA,OAAO,CAAC,CAAD,EAAI,IAAIlE,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBG,IAAI,EAAEA;UAPe,CAAlB,CAAJ,CAAP;MATR;IAmBH,CApBiB,CAAlB;EAqBH,CAvB+F,CAAhB;AAuB3E,CAvBE;AAwBP,OAAO,IAAImM,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAU/M,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE+J,OAAO,EAAE;UAAX,CAAD,EAAmBrG,KAAK,CAACgN,SAAN,KAAoBvL,SAApB,IAAiC;YAAEwL,SAAS,EAAEjN,KAAK,CAACgN;UAAnB,CAApD,CAAT,EAAgGhN,KAAK,CAACkN,YAAN,KAAuBzL,SAAvB,IAAoC;YAAE,iBAAiBzB,KAAK,CAACkN;UAAzB,CAApI,CAAT,EAAyLlN,KAAK,CAACmN,SAAN,KAAoB1L,SAApB,IAAiC;YAAE,cAAczB,KAAK,CAACmN;UAAtB,CAA1N,CAAT,EAAyQnN,KAAK,CAACoN,UAAN,KAAqB3L,SAArB,IAAkC;YAAE,eAAezB,KAAK,CAACoN,UAAN,CAAiBlK,QAAjB;UAAjB,CAA3S,CAAT,EAAuWlD,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8B;YAAE6L,MAAM,EAAEtN,KAAK,CAACqN;UAAhB,CAArY,CAAT,EAA2arN,KAAK,CAACuN,cAAN,KAAyB9L,SAAzB,IAAsC;YAAE,oBAAoBzB,KAAK,CAACuN;UAA5B,CAAjd,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI7Q,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCwG,CAAhB;AAkCpF,CAlCE;AAmCP,OAAO,IAAI4M,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUxN,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM0D,KAAK,CAACgN,SAAN,KAAoBvL,SAApB,IAAiC;YAAEwL,SAAS,EAAEjN,KAAK,CAACgN;UAAnB,CAAvC,CAAT,EAAmFhN,KAAK,CAACkN,YAAN,KAAuBzL,SAAvB,IAAoC;YAAE,iBAAiBzB,KAAK,CAACkN;UAAzB,CAAvH,CAAT,EAA4KlN,KAAK,CAACyN,MAAN,KAAiBhM,SAAjB,IAA8B;YAAEiM,MAAM,EAAE1N,KAAK,CAACyN;UAAhB,CAA1M,CAAT,EAAgPzN,KAAK,CAAC2N,OAAN,KAAkBlM,SAAlB,IAA+B;YAAE,YAAYzB,KAAK,CAAC2N,OAAN,CAAczK,QAAd;UAAd,CAA/Q,CAAT,EAAqUlD,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8B;YAAE6L,MAAM,EAAEtN,KAAK,CAACqN;UAAhB,CAAnW,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAI3Q,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlC+F,CAAhB;AAkC3E,CAlCE;AAmCP,OAAO,IAAIgN,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAU5N,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxL,+BAA+BpB,KAAK,CAACoB;UADmJ,CAA1K,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,aAAa;UAAf,CAAD,EAAwB0D,KAAK,CAACgN,SAAN,KAAoBvL,SAApB,IAAiC;YAAEwL,SAAS,EAAEjN,KAAK,CAACgN;UAAnB,CAAzD,CAAT,EAAqGhN,KAAK,CAACkN,YAAN,KAAuBzL,SAAvB,IAAoC;YAAE,iBAAiBzB,KAAK,CAACkN;UAAzB,CAAzI,CAAT,EAA8LlN,KAAK,CAAC2N,OAAN,KAAkBlM,SAAlB,IAA+B;YAAE,YAAYzB,KAAK,CAAC2N,OAAN,CAAczK,QAAd;UAAd,CAA7N,CAAT,EAAmRlD,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8B;YAAE6L,MAAM,EAAEtN,KAAK,CAACqN;UAAhB,CAAjT,CAAT,EAAuVrN,KAAK,CAAC0M,iBAAN,KAA4BjL,SAA5B,IAAyC;YAAE,sBAAsBzB,KAAK,CAAC0M;UAA9B,CAAhY,CAAT,EAA+b1M,KAAK,CAAC6N,UAAN,KAAqBpM,SAArB,IAAkC;YAAE,eAAezB,KAAK,CAAC6N,UAAN,CAAiB3K,QAAjB;UAAjB,CAAje,CAAT,EAA6hBlD,KAAK,CAAC8N,UAAN,KAAqBrM,SAArB,IAAkC;YAAE,eAAezB,KAAK,CAAC8N;UAAvB,CAA/jB,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIpR,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCiG,CAAhB;AAkC7E,CAlCE;AAmCP,OAAO,IAAImN,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU/N,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5E,+BAA+BpB,KAAK,CAACoB;UADuC,CAA9D,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE0R,QAAQ,EAAE;UAAZ,CAAD,EAAoBhO,KAAK,CAACgN,SAAN,KAAoBvL,SAApB,IAAiC;YAAEwL,SAAS,EAAEjN,KAAK,CAACgN;UAAnB,CAArD,CAAT,EAAiGhN,KAAK,CAACkN,YAAN,KAAuBzL,SAAvB,IAAoC;YAAE,iBAAiBzB,KAAK,CAACkN;UAAzB,CAArI,CAAT,EAA0LlN,KAAK,CAACmN,SAAN,KAAoB1L,SAApB,IAAiC;YAAE,cAAczB,KAAK,CAACmN;UAAtB,CAA3N,CAAT,EAA0QnN,KAAK,CAAC2N,OAAN,KAAkBlM,SAAlB,IAA+B;YAAE,YAAYzB,KAAK,CAAC2N,OAAN,CAAczK,QAAd;UAAd,CAAzS,CAAT,EAA+VlD,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8B;YAAE6L,MAAM,EAAEtN,KAAK,CAACqN;UAAhB,CAA7X,CAAT,EAAmarN,KAAK,CAACiO,eAAN,KAA0BxM,SAA1B,IAAuC;YAAE,qBAAqBzB,KAAK,CAACiO;UAA7B,CAA1c,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIvR,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnBR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCsG,CAAhB;AAkClF,CAlCE;AAmCP,OAAO,IAAIsN,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUlO,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/H,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAAvD,CAAT,EAAkHD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACnN,+BAA+BpB,KAAK,CAACoB;UAD8K,CAA1K,CAAT,EAE9BF,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAC3D,mDAAmD3C,KAAK,CAAC2C;UADE,CAF3B,CAAT,EAIrBzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CAJ9B,CAAT,EAMZ1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CAN1C,CAAlB;UASApC,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAA2B0D,KAAK,CAAC0L,QAAN,KAAmBjK,SAAnB,IAAgC;YAAE,aAAazB,KAAK,CAAC0L,QAAN,CAAexI,QAAf;UAAf,CAA3D,CAAT,EAAmHlD,KAAK,CAAC2L,gBAAN,KAA2BlK,SAA3B,IAAwC;YAAE,sBAAsBzB,KAAK,CAAC2L;UAA9B,CAA3J,CAAT,EAAyN3L,KAAK,CAACkC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAEnC,KAAK,CAACkC;UAAlB,CAAzP,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIxF,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAtCR;IAiDH,CAlDiB,CAAlB;EAmDH,CArD6F,CAAhB;AAqDzE,CArDE;AAsDP,OAAO,IAAIuN,2DAA2D,GAAG,SAA9DA,2DAA8D,CAAUnO,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxH,+BAA+BpB,KAAK,CAACoB;UADmF,CAAjG,CAAT,EAEZF,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACxD,gCAAgCtD,KAAK,CAACsD;UADkB,CAF1C,CAAlB;UAKA7C,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJkI,UAAU,EAAE;UADR,CAAR;;UAGA,IAAI7I,KAAK,CAACoO,uBAAN,KAAkC3M,SAAtC,EAAiD;YAC7Cb,IAAI,GAAGyN,2CAA2C,CAACrO,KAAK,CAACoO,uBAAP,EAAgCnO,OAAhC,CAAlD;UACH;;UACD,IAAID,KAAK,CAACoO,uBAAN,KAAkC3M,SAAtC,EAAiD;YAC7Ca,QAAQ,GAAG+L,2CAA2C,CAACrO,KAAK,CAACoO,uBAAP,EAAgCnO,OAAhC,CAAtD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CoH,CAAhB;AA+ChG,CA/CE;AAgDP,OAAO,IAAI0N,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUtO,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACoD,GAAP,CAAzB,IAAwC;YAAE,aAAapD,KAAK,CAACoD;UAArB,CAAjF,CAAT,EAAyHlC,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxK,CAAT,EAAyNrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACnV,gCAAgCtD,KAAK,CAACsD;UAD6S,CAA/Q,CAAT,EAEzDpC,yBAAyB,CAAClB,KAAK,CAACkE,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BlE,KAAK,CAACkE;UAApC,CAFI,CAAT,EAEgEhD,yBAAyB,CAAClB,KAAK,CAACmE,SAAP,CAAzB,IAA8C;YAAE,oBAAoBnE,KAAK,CAACmE;UAA5B,CAF9G,CAAT,EAEmKjD,yBAAyB,CAAClB,KAAK,CAACoE,YAAP,CAAzB,IAAiD;YAAE,wBAAwBpE,KAAK,CAACoE;UAAhC,CAFpN,CAAT,EAEgRlD,yBAAyB,CAAClB,KAAK,CAAC+F,UAAP,CAAzB,IAA+C;YAAE,qBAAqB/F,KAAK,CAAC+F;UAA7B,CAF/T,CAAT,EAEsX7E,yBAAyB,CAAClB,KAAK,CAACqE,aAAP,CAAzB,IAAkD;YAAE,yBAAyBrE,KAAK,CAACqE;UAAjC,CAFxa,CAAT,EAEsenD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC5iB,+BAA+BpB,KAAK,CAACoB;UADugB,CAF9hB,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJoI,GAAG,EAAE;UADD,CAAR;;UAGA,IAAI/I,KAAK,CAACwO,mBAAN,KAA8B/M,SAAlC,EAA6C;YACzCb,IAAI,GAAG6N,uCAAuC,CAACzO,KAAK,CAACwO,mBAAP,EAA4BvO,OAA5B,CAA9C;UACH;;UACD,IAAID,KAAK,CAACwO,mBAAN,KAA8B/M,SAAlC,EAA6C;YACzCa,QAAQ,GAAGmM,uCAAuC,CAACzO,KAAK,CAACwO,mBAAP,EAA4BvO,OAA5B,CAAlD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CgG,CAAhB;AA+C5E,CA/CE;AAgDP,OAAO,IAAI8N,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAU1O,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/G,+BAA+BpB,KAAK,CAACoB;UAD0E,CAAjG,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEkK,SAAS,EAAE;UAAb,CAAD,EAAqBxG,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA/C,CAAhB;;UACA,IAAIzG,KAAK,CAAC2O,sBAAN,KAAiClN,SAArC,EAAgD;YAC5Cb,IAAI,GAAGgO,0CAA0C,CAAC5O,KAAK,CAAC2O,sBAAP,EAA+B1O,OAA/B,CAAjD;UACH;;UACD,IAAID,KAAK,CAAC2O,sBAAN,KAAiClN,SAArC,EAAgD;YAC5Ca,QAAQ,GAAGsM,0CAA0C,CAAC5O,KAAK,CAAC2O,sBAAP,EAA+B1O,OAA/B,CAArD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5BR;IAuCH,CAxCiB,CAAlB;EAyCH,CA3CmH,CAAhB;AA2C/F,CA3CE;AA4CP,OAAO,IAAIiO,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAU7O,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACtN,gCAAgCtD,KAAK,CAACsD;UADgL,CAA/L,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJiG,IAAI,EAAE;UADF,CAAR;;UAGA,IAAI5G,KAAK,CAAC8O,iBAAN,KAA4BrN,SAAhC,EAA2C;YACvCb,IAAI,GAAGmO,qCAAqC,CAAC/O,KAAK,CAAC8O,iBAAP,EAA0B7O,OAA1B,CAA5C;UACH;;UACD,IAAID,KAAK,CAAC8O,iBAAN,KAA4BrN,SAAhC,EAA2C;YACvCa,QAAQ,GAAGyM,qCAAqC,CAAC/O,KAAK,CAAC8O,iBAAP,EAA0B7O,OAA1B,CAAhD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CiG,CAAhB;AA+C7E,CA/CE;AAgDP,OAAO,IAAIoO,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUhP,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACtN,gCAAgCtD,KAAK,CAACsD;UADgL,CAA/L,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJmG,UAAU,EAAE;UADR,CAAR;;UAGA,IAAI9G,KAAK,CAACiP,iCAAN,KAA4CxN,SAAhD,EAA2D;YACvDb,IAAI,GAAGsO,qDAAqD,CAAClP,KAAK,CAACiP,iCAAP,EAA0ChP,OAA1C,CAA5D;UACH;;UACD,IAAID,KAAK,CAACiP,iCAAN,KAA4CxN,SAAhD,EAA2D;YACvDa,QAAQ,GAAG4M,qDAAqD,CAAClP,KAAK,CAACiP,iCAAP,EAA0ChP,OAA1C,CAAhE;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CuG,CAAhB;AA+CnF,CA/CE;AAgDP,OAAO,IAAIuO,mEAAmE,GAAG,SAAtEA,mEAAsE,CAAUnP,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9J,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAG;YACN,gBAAgB;UADV,CAAV;UAGAC,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE,uBAAuB;UAAzB,CAAD,EAAiC0D,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA3D,CAAhB;;UACA,IAAIzG,KAAK,CAACoP,+BAAN,KAA0C3N,SAA9C,EAAyD;YACrDb,IAAI,GAAGyO,mDAAmD,CAACrP,KAAK,CAACoP,+BAAP,EAAwCnP,OAAxC,CAA1D;UACH;;UACD,IAAID,KAAK,CAACoP,+BAAN,KAA0C3N,SAA9C,EAAyD;YACrDa,QAAQ,GAAG+M,mDAAmD,CAACrP,KAAK,CAACoP,+BAAP,EAAwCnP,OAAxC,CAA9D;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5BR;IAuCH,CAxCiB,CAAlB;EAyCH,CA3C4H,CAAhB;AA2CxG,CA3CE;AA4CP,OAAO,IAAI0O,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAUtP,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/G,+BAA+BpB,KAAK,CAACoB;UAD0E,CAAjG,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE2K,SAAS,EAAE;UAAb,CAAD,EAAqBjH,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA/C,CAAhB;;UACA,IAAIzG,KAAK,CAACuP,sBAAN,KAAiC9N,SAArC,EAAgD;YAC5Cb,IAAI,GAAG4O,0CAA0C,CAACxP,KAAK,CAACuP,sBAAP,EAA+BtP,OAA/B,CAAjD;UACH;;UACD,IAAID,KAAK,CAACuP,sBAAN,KAAiC9N,SAArC,EAAgD;YAC5Ca,QAAQ,GAAGkN,0CAA0C,CAACxP,KAAK,CAACuP,sBAAP,EAA+BtP,OAA/B,CAArD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5BR;IAuCH,CAxCiB,CAAlB;EAyCH,CA3CmH,CAAhB;AA2C/F,CA3CE;AA4CP,OAAO,IAAI6O,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAUzP,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACtH,gCAAgCtD,KAAK,CAACsD;UADgF,CAA/F,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJwG,SAAS,EAAE;UADP,CAAR;;UAGA,IAAInH,KAAK,CAAC0P,sBAAN,KAAiCjO,SAArC,EAAgD;YAC5Cb,IAAI,GAAG+O,gDAAgD,CAAC3P,KAAK,CAAC0P,sBAAP,EAA+BzP,OAA/B,CAAvD;UACH;;UACD,IAAID,KAAK,CAAC0P,sBAAN,KAAiCjO,SAArC,EAAgD;YAC5Ca,QAAQ,GAAGqN,gDAAgD,CAAC3P,KAAK,CAAC0P,sBAAP,EAA+BzP,OAA/B,CAA3D;YACAqC,QAAQ,GAAGA,QAAQ,CAACU,QAAT,CAAkB,wBAAlB,CAAX;YACApC,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjCR;IA4CH,CA7CiB,CAAlB;EA8CH,CAhDmH,CAAhB;AAgD/F,CAhDE;AAiDP,OAAO,IAAIgP,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAU5P,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACtN,gCAAgCtD,KAAK,CAACsD;UADgL,CAA/L,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ8I,OAAO,EAAE;UADL,CAAR;;UAGA,IAAIzJ,KAAK,CAAC6P,mBAAN,KAA8BpO,SAAlC,EAA6C;YACzCb,IAAI,GAAGkP,uCAAuC,CAAC9P,KAAK,CAAC6P,mBAAP,EAA4B5P,OAA5B,CAA9C;UACH;;UACD,IAAID,KAAK,CAAC6P,mBAAN,KAA8BpO,SAAlC,EAA6C;YACzCa,QAAQ,GAAGwN,uCAAuC,CAAC9P,KAAK,CAAC6P,mBAAP,EAA4B5P,OAA5B,CAAlD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CoG,CAAhB;AA+ChF,CA/CE;AAgDP,OAAO,IAAImP,wDAAwD,GAAG,SAA3DA,wDAA2D,CAAU/P,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/G,+BAA+BpB,KAAK,CAACoB;UAD0E,CAAjG,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE+K,OAAO,EAAE;UAAX,CAAD,EAAmBrH,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0B;YAAEiF,EAAE,EAAE1G,KAAK,CAACyG;UAAZ,CAA7C,CAAhB;;UACA,IAAIzG,KAAK,CAACgQ,oBAAN,KAA+BvO,SAAnC,EAA8C;YAC1Cb,IAAI,GAAGqP,wCAAwC,CAACjQ,KAAK,CAACgQ,oBAAP,EAA6B/P,OAA7B,CAA/C;UACH;;UACD,IAAID,KAAK,CAACgQ,oBAAN,KAA+BvO,SAAnC,EAA8C;YAC1Ca,QAAQ,GAAG2N,wCAAwC,CAACjQ,KAAK,CAACgQ,oBAAP,EAA6B/P,OAA7B,CAAnD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5BR;IAuCH,CAxCiB,CAAlB;EAyCH,CA3CiH,CAAhB;AA2C7F,CA3CE;AA4CP,OAAO,IAAIsP,6DAA6D,GAAG,SAAhEA,6DAAgE,CAAUlQ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACxH,+BAA+BpB,KAAK,CAACoB;UADmF,CAAjG,CAAT,EAEZF,yBAAyB,CAAClB,KAAK,CAACmQ,yBAAP,CAAzB,IAA8D;YAChE,qCAAqCnQ,KAAK,CAACmQ,yBAAN,CAAgCjN,QAAhC;UAD2B,CAFlD,CAAlB;UAKAzC,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJiJ,YAAY,EAAE;UADV,CAAR;;UAGA,IAAI5J,KAAK,CAACoQ,yBAAN,KAAoC3O,SAAxC,EAAmD;YAC/Cb,IAAI,GAAGyP,6CAA6C,CAACrQ,KAAK,CAACoQ,yBAAP,EAAkCnQ,OAAlC,CAApD;UACH;;UACD,IAAID,KAAK,CAACoQ,yBAAN,KAAoC3O,SAAxC,EAAmD;YAC/Ca,QAAQ,GAAG+N,6CAA6C,CAACrQ,KAAK,CAACoQ,yBAAP,EAAkCnQ,OAAlC,CAAxD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CsH,CAAhB;AA+ClG,CA/CE;AAgDP,OAAO,IAAI0P,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUtQ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/M,+BAA+BpB,KAAK,CAACoB;UAD0K,CAAjM,CAAlB;UAGAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ4G,iBAAiB,EAAE;UADf,CAAR;;UAGA,IAAIvH,KAAK,CAACuQ,iBAAN,KAA4B9O,SAAhC,EAA2C;YACvCb,IAAI,GAAG4P,qCAAqC,CAACxQ,KAAK,CAACuQ,iBAAP,EAA0BtQ,OAA1B,CAA5C;UACH;;UACD,IAAID,KAAK,CAACuQ,iBAAN,KAA4B9O,SAAhC,EAA2C;YACvCa,QAAQ,GAAGkO,qCAAqC,CAACxQ,KAAK,CAACuQ,iBAAP,EAA0BtQ,OAA1B,CAAhD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9BR;IAyCH,CA1CiB,CAAlB;EA2CH,CA7C8G,CAAhB;AA6C1F,CA7CE;AA8CP,OAAO,IAAI6P,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUzQ,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAoC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAnF,CAAT,EAAoIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAC1N,gCAAgCtD,KAAK,CAACsD;UADoL,CAA1L,CAAT,EAErBpC,yBAAyB,CAAClB,KAAK,CAAC0Q,6BAAP,CAAzB,IAAkE;YACpE,2CAA2C1Q,KAAK,CAAC0Q,6BAAN,CAAoCxN,QAApC;UADyB,CAF7C,CAAT,EAIZhC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAJ5C,CAAlB;UAOAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ8G,MAAM,EAAE;UADJ,CAAR;;UAGA,IAAIzH,KAAK,CAAC2Q,MAAN,KAAiBlP,SAArB,EAAgC;YAC5Bb,IAAI,GAAGZ,KAAK,CAAC2Q,MAAb;UACH;;UACD,IAAI3Q,KAAK,CAAC2Q,MAAN,KAAiBlP,SAArB,EAAgC;YAC5Ba,QAAQ,GAAGtC,KAAK,CAAC2Q,MAAjB;YACA/P,IAAI,GAAG0B,QAAP;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAI5F,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CmG,CAAhB;AA+C/E,CA/CE;AAgDP,OAAO,IAAIgQ,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAU5Q,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAC/N,gCAAgCtD,KAAK,CAACsD;UADyL,CAA/L,CAAT,EAErBpC,yBAAyB,CAAClB,KAAK,CAAC6Q,KAAP,CAAzB,IAA0C;YAAE,kCAAkC7Q,KAAK,CAAC6Q;UAA1C,CAFrB,CAAT,EAEoF3P,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1J,+BAA+BpB,KAAK,CAACoB;UADqH,CAF5I,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJgH,WAAW,EAAE;UADT,CAAR;;UAGA,IAAI3H,KAAK,CAAC8Q,wBAAN,KAAmCrP,SAAvC,EAAkD;YAC9Cb,IAAI,GAAGmQ,4CAA4C,CAAC/Q,KAAK,CAAC8Q,wBAAP,EAAiC7Q,OAAjC,CAAnD;UACH;;UACD,IAAID,KAAK,CAAC8Q,wBAAN,KAAmCrP,SAAvC,EAAkD;YAC9Ca,QAAQ,GAAGyO,4CAA4C,CAAC/Q,KAAK,CAAC8Q,wBAAP,EAAiC7Q,OAAjC,CAAvD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CwG,CAAhB;AA+CpF,CA/CE;AAgDP,OAAO,IAAIoQ,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUhR,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACtN,gCAAgCtD,KAAK,CAACsD;UADgL,CAA/L,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJwJ,cAAc,EAAE;UADZ,CAAR;;UAGA,IAAInK,KAAK,CAACiR,2BAAN,KAAsCxP,SAA1C,EAAqD;YACjDb,IAAI,GAAGsQ,+CAA+C,CAAClR,KAAK,CAACiR,2BAAP,EAAoChR,OAApC,CAAtD;UACH;;UACD,IAAID,KAAK,CAACiR,2BAAN,KAAsCxP,SAA1C,EAAqD;YACjDa,QAAQ,GAAG4O,+CAA+C,CAAClR,KAAK,CAACiR,2BAAP,EAAoChR,OAApC,CAA1D;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/C2G,CAAhB;AA+CvF,CA/CE;AAgDP,OAAO,IAAIuQ,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUnR,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACtN,gCAAgCtD,KAAK,CAACsD;UADgL,CAA/L,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJkH,OAAO,EAAE;UADL,CAAR;;UAGA,IAAI7H,KAAK,CAACiF,OAAN,KAAkBxD,SAAtB,EAAiC;YAC7Bb,IAAI,GAAGwQ,2BAA2B,CAACpR,KAAK,CAACiF,OAAP,EAAgBhF,OAAhB,CAAlC;UACH;;UACD,IAAID,KAAK,CAACiF,OAAN,KAAkBxD,SAAtB,EAAiC;YAC7Ba,QAAQ,GAAG8O,2BAA2B,CAACpR,KAAK,CAACiF,OAAP,EAAgBhF,OAAhB,CAAtC;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CoG,CAAhB;AA+ChF,CA/CE;AAgDP,OAAO,IAAIyQ,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUrR,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAC/N,gCAAgCtD,KAAK,CAACsD;UADyL,CAA/L,CAAT,EAErBpC,yBAAyB,CAAClB,KAAK,CAACiI,GAAP,CAAzB,IAAwC;YAAE,aAAajI,KAAK,CAACiI;UAArB,CAFnB,CAAT,EAE2D/G,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YACjI,+BAA+BpB,KAAK,CAACoB;UAD4F,CAFnH,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ2J,UAAU,EAAE;UADR,CAAR;;UAGA,IAAItK,KAAK,CAACsR,uBAAN,KAAkC7P,SAAtC,EAAiD;YAC7Cb,IAAI,GAAG2Q,2CAA2C,CAACvR,KAAK,CAACsR,uBAAP,EAAgCrR,OAAhC,CAAlD;UACH;;UACD,IAAID,KAAK,CAACsR,uBAAN,KAAkC7P,SAAtC,EAAiD;YAC7Ca,QAAQ,GAAGiP,2CAA2C,CAACvR,KAAK,CAACsR,uBAAP,EAAgCrR,OAAhC,CAAtD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CuG,CAAhB;AA+CnF,CA/CE;AAgDP,OAAO,IAAI4Q,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUxR,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACtN,gCAAgCtD,KAAK,CAACsD;UADgL,CAA/L,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJoH,OAAO,EAAE;UADL,CAAR;;UAGA,IAAI/H,KAAK,CAACyR,oBAAN,KAA+BhQ,SAAnC,EAA8C;YAC1Cb,IAAI,GAAG8Q,wCAAwC,CAAC1R,KAAK,CAACyR,oBAAP,EAA6BxR,OAA7B,CAA/C;UACH;;UACD,IAAID,KAAK,CAACyR,oBAAN,KAA+BhQ,SAAnC,EAA8C;YAC1Ca,QAAQ,GAAGoP,wCAAwC,CAAC1R,KAAK,CAACyR,oBAAP,EAA6BxR,OAA7B,CAAnD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CoG,CAAhB;AA+ChF,CA/CE;AAgDP,OAAO,IAAI+Q,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAU3R,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/H,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4G0B,QAA5G;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAkD4E,yBAAyB,CAAClB,KAAK,CAACoD,GAAP,CAAzB,IAAwC;YAAE,aAAapD,KAAK,CAACoD;UAArB,CAA1F,CAAT,EAAkIlC,yBAAyB,CAAClB,KAAK,CAACqD,YAAP,CAAzB,IAAiD;YAAE,iBAAiBrD,KAAK,CAACqD;UAAzB,CAAnL,CAAT,EAAwOnC,yBAAyB,CAAClB,KAAK,CAACuD,kBAAP,CAAzB,IAAuD;YAAE,uBAAuBvD,KAAK,CAACuD;UAA/B,CAA/R,CAAT,EAAgWrC,yBAAyB,CAAClB,KAAK,CAACwD,eAAP,CAAzB,IAAoD;YAAE,oBAAoBxD,KAAK,CAACwD;UAA5B,CAApZ,CAAT,EAA+ctC,yBAAyB,CAAClB,KAAK,CAACyD,eAAP,CAAzB,IAAoD;YAAE,oBAAoBzD,KAAK,CAACyD;UAA5B,CAAngB,CAAT,EAA8jBvC,yBAAyB,CAAClB,KAAK,CAAC4R,aAAP,CAAzB,IAAkD;YAAE,kBAAkB5R,KAAK,CAAC4R,aAAN,CAAoB1O,QAApB;UAApB,CAAhnB,CAAT,EAAkrBhC,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAjuB,CAAT,EAAkxBrN,yBAAyB,CAAClB,KAAK,CAAC0D,WAAP,CAAzB,IAAgD;YAAE,gBAAgB1D,KAAK,CAAC0D;UAAxB,CAAl0B,CAAT,EAAq3BxC,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAC1pC,gCAAgCtD,KAAK,CAACsD;UADonC,CAA36B,CAAT,EAEpOpC,yBAAyB,CAAClB,KAAK,CAACuC,aAAP,CAAzB,IAAkD;YAAE,wBAAwBvC,KAAK,CAACuC;UAAhC,CAFkL,CAAT,EAErHrB,yBAAyB,CAAClB,KAAK,CAACwC,cAAP,CAAzB,IAAmD;YAAE,yBAAyBxC,KAAK,CAACwC;UAAjC,CAFkE,CAAT,EAEHtB,yBAAyB,CAAClB,KAAK,CAACyC,YAAP,CAAzB,IAAiD;YAAE,uBAAuBzC,KAAK,CAACyC;UAA/B,CAF9C,CAAT,EAEyGvB,yBAAyB,CAAClB,KAAK,CAAC0C,cAAP,CAAzB,IAAmD;YAAE,yBAAyB1C,KAAK,CAAC0C;UAAjC,CAF5J,CAAT,EAE2NxB,yBAAyB,CAAClB,KAAK,CAACgE,OAAP,CAAzB,IAA4C;YAAEC,OAAO,EAAEnH,iBAAiB,CAACkD,KAAK,CAACgE,OAAP,CAAjB,CAAiCd,QAAjC;UAAX,CAFvQ,CAAT,EAE6UhC,yBAAyB,CAAClB,KAAK,CAACkE,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BlE,KAAK,CAACkE;UAApC,CAFlY,CAAT,EAEschD,yBAAyB,CAAClB,KAAK,CAACmE,SAAP,CAAzB,IAA8C;YAAE,oBAAoBnE,KAAK,CAACmE;UAA5B,CAFpf,CAAT,EAEyiBjD,yBAAyB,CAAClB,KAAK,CAACoE,YAAP,CAAzB,IAAiD;YAAE,wBAAwBpE,KAAK,CAACoE;UAAhC,CAF1lB,CAAT,EAEspBlD,yBAAyB,CAAClB,KAAK,CAACqE,aAAP,CAAzB,IAAkD;YAAE,yBAAyBrE,KAAK,CAACqE;UAAjC,CAFxsB,CAAT,EAEswBnD,yBAAyB,CAAClB,KAAK,CAACwE,oBAAP,CAAzB,IAAyD;YACp9B,gCAAgCxE,KAAK,CAACwE;UAD86B,CAF/zB,CAAT,EAI1ItD,yBAAyB,CAAClB,KAAK,CAACyE,YAAP,CAAzB,IAAiD;YAAE,uBAAuBzE,KAAK,CAACyE;UAA/B,CAJyF,CAAT,EAI9BvD,yBAAyB,CAAClB,KAAK,CAAC0E,uBAAP,CAAzB,IAA4D;YACjK,mCAAmC1E,KAAK,CAAC0E;UADwH,CAJ9B,CAAT,EAMxHxD,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAC3D,mDAAmD3C,KAAK,CAAC2C;UADE,CAN+D,CAAT,EAQ/GzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CAR4D,CAAT,EAUtG1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CAVgD,CAAT,EAY7F3B,yBAAyB,CAAClB,KAAK,CAAC2E,WAAP,CAAzB,IAAgD;YAClD,+CAA+C3E,KAAK,CAAC2E;UADH,CAZ6C,CAAT,EAcpFzD,yBAAyB,CAAClB,KAAK,CAAC4E,uBAAP,CAAzB,IAA4D;YAC9D,wCAAwC5E,KAAK,CAAC4E;UADgB,CAdwB,CAAT,EAgB3E1D,yBAAyB,CAAClB,KAAK,CAAC6E,gBAAP,CAAzB,IAAqD;YACvD,mDAAmD7E,KAAK,CAAC6E,gBAAN,CAAuB3B,QAAvB;UADI,CAhBsB,CAAT,EAkBlEhC,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAlBiB,CAAT,EAkB0CD,yBAAyB,CAAClB,KAAK,CAACiF,OAAP,CAAzB,IAA4C;YAAE,iBAAiBjF,KAAK,CAACiF;UAAzB,CAlBtF,CAAT,EAkBsI/D,yBAAyB,CAAClB,KAAK,CAACkF,cAAP,CAAzB,IAAmD;YAAE,0BAA0BlF,KAAK,CAACkF;UAAlC,CAlBzL,CAAT,EAkByPhE,yBAAyB,CAAClB,KAAK,CAACmF,yBAAP,CAAzB,IAA8D;YAChW,uCAAuC,CAACnF,KAAK,CAACmF,yBAAN,CAAgCC,WAAhC,GAA8CtD,KAA9C,CAAoD,GAApD,EAAyD,CAAzD,IAA8D,GAA/D,EAAoEoB,QAApE;UADyT,CAlBvT,CAAT,EAoB9BhC,yBAAyB,CAAClB,KAAK,CAACqF,yBAAP,CAAzB,IAA8D;YAChE,gCAAgCrF,KAAK,CAACqF;UAD0B,CApBhC,CAAT,EAsBrBnE,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAtBnC,CAAT,EAwBZpB,KAAK,CAACuF,QAAN,KAAmB9D,SAAnB,IACF+D,MAAM,CAACC,IAAP,CAAYzF,KAAK,CAACuF,QAAlB,EAA4BG,MAA5B,CAAmC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;YACtD,IAAI1F,EAAJ;;YACA,OAAQ5D,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKqJ,GAAL,CAAT,GAAqBzF,EAAE,GAAG,EAAL,EAASA,EAAE,CAAC,cAAcmB,MAAd,CAAqBuE,MAAM,CAACC,WAAP,EAArB,CAAD,CAAF,GAAiD7F,KAAK,CAACuF,QAAN,CAAeK,MAAf,CAA1D,EAAkF1F,EAAvG,EAAhB;UACH,CAHD,EAGG,EAHH,CAzBc,CAAlB;UA6BAO,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ,QAAQ;UADJ,CAAR;;UAGA,IAAIX,KAAK,CAAC6R,IAAN,KAAepQ,SAAnB,EAA8B;YAC1Bb,IAAI,GAAGZ,KAAK,CAAC6R,IAAb;UACH;;UACD,IAAI7R,KAAK,CAAC6R,IAAN,KAAepQ,SAAnB,EAA8B;YAC1Ba,QAAQ,GAAGtC,KAAK,CAAC6R,IAAjB;YACAjR,IAAI,GAAG0B,QAAP;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAI5F,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAnER;IA8EH,CA/EiB,CAAlB;EAgFH,CAlF6F,CAAhB;AAkFzE,CAlFE;AAmFP,OAAO,IAAIkR,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAU9R,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4G0B,QAA5G;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACoD,GAAP,CAAzB,IAAwC;YAAE,aAAapD,KAAK,CAACoD;UAArB,CAAjF,CAAT,EAAyHlC,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxK,CAAT,EAAyNrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAC5V,gCAAgCtD,KAAK,CAACsD;UADsT,CAA/Q,CAAT,EAElEpC,yBAAyB,CAAClB,KAAK,CAACkE,gBAAP,CAAzB,IAAqD;YAAE,4BAA4BlE,KAAK,CAACkE;UAApC,CAFa,CAAT,EAEuDhD,yBAAyB,CAAClB,KAAK,CAACmE,SAAP,CAAzB,IAA8C;YAAE,oBAAoBnE,KAAK,CAACmE;UAA5B,CAFrG,CAAT,EAE0JjD,yBAAyB,CAAClB,KAAK,CAACoE,YAAP,CAAzB,IAAiD;YAAE,wBAAwBpE,KAAK,CAACoE;UAAhC,CAF3M,CAAT,EAEuQlD,yBAAyB,CAAClB,KAAK,CAAC+F,UAAP,CAAzB,IAA+C;YAAE,qBAAqB/F,KAAK,CAAC+F;UAA7B,CAFtT,CAAT,EAE6W7E,yBAAyB,CAAClB,KAAK,CAACqE,aAAP,CAAzB,IAAkD;YAAE,yBAAyBrE,KAAK,CAACqE;UAAjC,CAF/Z,CAAT,EAE6dnD,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAF9gB,CAAT,EAEykBD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC/oB,+BAA+BpB,KAAK,CAACoB;UAD0mB,CAFjoB,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEyM,GAAG,EAAE;UAAP,CAAD,EAAe/I,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAAhD,CAAhB;;UACA,IAAInI,KAAK,CAACwO,mBAAN,KAA8B/M,SAAlC,EAA6C;YACzCb,IAAI,GAAG6N,uCAAuC,CAACzO,KAAK,CAACwO,mBAAP,EAA4BvO,OAA5B,CAA9C;UACH;;UACD,IAAID,KAAK,CAACwO,mBAAN,KAA8B/M,SAAlC,EAA6C;YACzCa,QAAQ,GAAGmM,uCAAuC,CAACzO,KAAK,CAACwO,mBAAP,EAA4BvO,OAA5B,CAAlD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA3CR;IAsDH,CAvDiB,CAAlB;EAwDH,CA1DgG,CAAhB;AA0D5E,CA1DE;AA2DP,OAAO,IAAImR,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU/R,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4G0B,QAA5G;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1F,CAAT,EAAqJD,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAApM,CAAT,EAAqPrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAClU,gCAAgCtD,KAAK,CAACsD;UAD4R,CAA3S,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE,cAAc;UAAhB,CAAD,EAAwB0D,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAAzD,CAAhB;;UACA,IAAInI,KAAK,CAACgS,SAAN,KAAoBvQ,SAAxB,EAAmC;YAC/Bb,IAAI,GAAGqR,uCAAuC,CAACjS,KAAK,CAACgS,SAAP,EAAkB/R,OAAlB,CAA9C;UACH;;UACD,IAAID,KAAK,CAACgS,SAAN,KAAoBvQ,SAAxB,EAAmC;YAC/Ba,QAAQ,GAAG2P,uCAAuC,CAACjS,KAAK,CAACgS,SAAP,EAAkB/R,OAAlB,CAAlD;YACAqC,QAAQ,GAAGA,QAAQ,CAACU,QAAT,CAAkB,WAAlB,CAAX;YACApC,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA5CR;IAuDH,CAxDiB,CAAlB;EAyDH,CA3DsG,CAAhB;AA2DlF,CA3DE;AA4DP,OAAO,IAAIsR,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUlS,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1F,CAAT,EAAqJD,yBAAyB,CAAClB,KAAK,CAAC6Q,KAAP,CAAzB,IAA0C;YAAE,kCAAkC7Q,KAAK,CAAC6Q;UAA1C,CAA/L,CAAT,EAA8P3P,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAA7S,CAAT,EAA8VrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAC3a,gCAAgCtD,KAAK,CAACsD;UADqY,CAApZ,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJ,eAAe;UADX,CAAR;;UAGA,IAAIX,KAAK,CAACmS,uBAAN,KAAkC1Q,SAAtC,EAAiD;YAC7Cb,IAAI,GAAGwR,2CAA2C,CAACpS,KAAK,CAACmS,uBAAP,EAAgClS,OAAhC,CAAlD;UACH;;UACD,IAAID,KAAK,CAACmS,uBAAN,KAAkC1Q,SAAtC,EAAiD;YAC7Ca,QAAQ,GAAG8P,2CAA2C,CAACpS,KAAK,CAACmS,uBAAP,EAAgClS,OAAhC,CAAtD;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/C8G,CAAhB;AA+C1F,CA/CE;AAgDP,OAAO,IAAIyR,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUrS,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4G0B,QAA5G;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1F,CAAT,EAAqJD,yBAAyB,CAAClB,KAAK,CAACkI,yBAAP,CAAzB,IAA8D;YAC5P,qCAAqClI,KAAK,CAACkI,yBAAN,CAAgChF,QAAhC;UADuN,CAAnN,CAAT,EAE9BhC,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAFjB,CAAT,EAEkErN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAC/I,gCAAgCtD,KAAK,CAACsD;UADyG,CAFxH,CAAT,EAIZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAJ5C,CAAlB;UAOAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAE4P,SAAS,EAAE;UAAb,CAAD,EAAqBlM,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAAtD,CAAhB;;UACA,IAAInI,KAAK,CAACsS,SAAN,KAAoB7Q,SAAxB,EAAmC;YAC/Bb,IAAI,GAAG2R,uCAAuC,CAACvS,KAAK,CAACsS,SAAP,EAAkBrS,OAAlB,CAA9C;UACH;;UACD,IAAID,KAAK,CAACsS,SAAN,KAAoB7Q,SAAxB,EAAmC;YAC/Ba,QAAQ,GAAGiQ,uCAAuC,CAACvS,KAAK,CAACsS,SAAP,EAAkBrS,OAAlB,CAAlD;YACAqC,QAAQ,GAAGA,QAAQ,CAACU,QAAT,CAAkB,WAAlB,CAAX;YACApC,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA9CR;IAyDH,CA1DiB,CAAlB;EA2DH,CA7DsG,CAAhB;AA6DlF,CA7DE;AA8DP,OAAO,IAAI4R,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUxS,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4G0B,QAA5G;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAC/N,gCAAgCtD,KAAK,CAACsD;UADyL,CAA/L,CAAT,EAErBpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAFnC,CAAT,EAIZF,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAJrC,CAAlB;UAKAV,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEuL,OAAO,EAAE;UAAX,CAAD,EAAmB7H,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAApD,CAAhB;;UACA,IAAInI,KAAK,CAACiF,OAAN,KAAkBxD,SAAtB,EAAiC;YAC7Bb,IAAI,GAAGwQ,2BAA2B,CAACpR,KAAK,CAACiF,OAAP,EAAgBhF,OAAhB,CAAlC;UACH;;UACD,IAAID,KAAK,CAACiF,OAAN,KAAkBxD,SAAtB,EAAiC;YAC7Ba,QAAQ,GAAG8O,2BAA2B,CAACpR,KAAK,CAACiF,OAAP,EAAgBhF,OAAhB,CAAtC;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA3CR;IAsDH,CAvDiB,CAAlB;EAwDH,CA1DoG,CAAhB;AA0DhF,CA1DE;AA2DP,OAAO,IAAI6R,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUzS,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,KAAnF,EAA0FC,IAA1F,EAAgG0B,QAAhG;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAAxF,CAAT,EAAyIrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YACtN,gCAAgCtD,KAAK,CAACsD;UADgL,CAA/L,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,WAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJgI,iBAAiB,EAAE;UADf,CAAR;;UAGA,IAAI3I,KAAK,CAAC0S,8BAAN,KAAyCjR,SAA7C,EAAwD;YACpDb,IAAI,GAAG+R,kDAAkD,CAAC3S,KAAK,CAAC0S,8BAAP,EAAuCzS,OAAvC,CAAzD;UACH;;UACD,IAAID,KAAK,CAAC0S,8BAAN,KAAyCjR,SAA7C,EAAwD;YACpDa,QAAQ,GAAGqQ,kDAAkD,CAAC3S,KAAK,CAAC0S,8BAAP,EAAuCzS,OAAvC,CAA7D;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAhCR;IA2CH,CA5CiB,CAAlB;EA6CH,CA/CwG,CAAhB;AA+CpF,CA/CE;AAgDP,OAAO,IAAIgS,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAU5S,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4G0B,QAA5G;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAA1F,CAAT,EAAqJD,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAClO,gCAAgCtD,KAAK,CAACsD;UAD4L,CAA3M,CAAT,EAEZpC,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAF5C,CAAlB;UAKAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAAC;YAAEuW,OAAO,EAAE,EAAX;YAAe,QAAQ;UAAvB,CAAD,EAA4C7S,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiC;YAAE2G,SAAS,EAAEpI,KAAK,CAACmI;UAAnB,CAA7E,CAAhB;;UACA,IAAInI,KAAK,CAAC8S,cAAN,KAAyBrR,SAA7B,EAAwC;YACpCb,IAAI,GAAGmS,kCAAkC,CAAC/S,KAAK,CAAC8S,cAAP,EAAuB7S,OAAvB,CAAzC;UACH;;UACD,IAAID,KAAK,CAAC8S,cAAN,KAAyBrR,SAA7B,EAAwC;YACpCa,QAAQ,GAAGyQ,kCAAkC,CAAC/S,KAAK,CAAC8S,cAAP,EAAuB7S,OAAvB,CAA7C;YACAW,IAAI,GAAG,wCAAP;YACA0B,QAAQ,CAACW,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;YACArC,IAAI,IAAI0B,QAAQ,CAACY,QAAT,EAAR;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,MAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA3CR;IAsDH,CAvDiB,CAAlB;EAwDH,CA1DiG,CAAhB;AA0D7E,CA1DE;AA2DP,OAAO,IAAIoS,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUhT,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4GqS,QAA5G,EAAsHC,IAAtH,EAA4HA,IAA5H,EAAkIA,IAAlI,EAAwIA,IAAxI,EAA8IA,IAA9I,EAAoJA,IAApJ;;IACA,OAAO1W,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAyC4E,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAC3I,mDAAmD3C,KAAK,CAAC2C;UADkF,CAAlG,CAAT,EAE9BzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CAFrB,CAAT,EAIrB1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CAJjC,CAAT,EAMZ3B,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC1D,+BAA+BpB,KAAK,CAACoB;UADqB,CAN5C,CAAlB;UASAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAG;YACJwS,MAAM,EAAE,EADJ;YAEJ,eAAe,GAFX;YAGJ,QAAQ;UAHJ,CAAR;UAKAvS,IAAI,GAAG,wCAAP;UACAqS,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,4BAAd,CAAX;UACAuU,QAAQ,CAAChQ,YAAT,CAAsB,OAAtB,EAA+B,yCAA/B;;UACA,IAAIjD,KAAK,CAACoT,UAAN,KAAqB3R,SAAzB,EAAoC;YAChCyR,IAAI,GAAG,IAAIxU,SAAJ,CAAc,YAAd,EAA4B2U,YAA5B,CAAyC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACoT,UAApB,CAAzC,EAA0EpQ,QAA1E,CAAmF,YAAnF,CAAP;YACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIlT,KAAK,CAACsT,cAAN,KAAyB7R,SAA7B,EAAwC;YACpCyR,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACF2U,YADE,CACW,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsT,cAApB,CADX,EAEFtQ,QAFE,CAEO,gBAFP,CAAP;YAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIlT,KAAK,CAACuT,kBAAN,KAA6B9R,SAAjC,EAA4C;YACxCyR,IAAI,GAAGM,sCAAsC,CAACxT,KAAK,CAACuT,kBAAP,EAA2BtT,OAA3B,CAAtC,CAA0E+C,QAA1E,CAAmF,oBAAnF,CAAP;YACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIlT,KAAK,CAACyT,mBAAN,KAA8BhS,SAAlC,EAA6C;YACzCyR,IAAI,GAAGQ,uCAAuC,CAAC1T,KAAK,CAACyT,mBAAP,EAA4BxT,OAA5B,CAAvC,CAA4E+C,QAA5E,CAAqF,qBAArF,CAAP;YACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIlT,KAAK,CAAC2T,eAAN,KAA0BlS,SAA9B,EAAyC;YACrCyR,IAAI,GAAGU,mCAAmC,CAAC5T,KAAK,CAAC2T,eAAP,EAAwB1T,OAAxB,CAAnC,CAAoE+C,QAApE,CAA6E,iBAA7E,CAAP;YACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACD,IAAIlT,KAAK,CAAC6T,SAAN,KAAoBpS,SAAxB,EAAmC;YAC/ByR,IAAI,GAAGY,6BAA6B,CAAC9T,KAAK,CAAC6T,SAAP,EAAkB5T,OAAlB,CAA7B,CAAwD+C,QAAxD,CAAiE,WAAjE,CAAP;YACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;UACH;;UACDtS,IAAI,IAAIqS,QAAQ,CAAC/P,QAAT,EAAR;UACA,OAAO,CAAC,CAAD,EAAI,IAAIxG,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,MAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAxER;IAmFH,CApFiB,CAAlB;EAqFH,CAvFuG,CAAhB;AAuFnF,CAvFE;AAwFP,OAAO,IAAImT,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAU/T,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG,EAA4G0B,QAA5G;;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB;UAAlB,CAAD,EAAkD4E,yBAAyB,CAAClB,KAAK,CAAC4R,aAAP,CAAzB,IAAkD;YAAE,kBAAkB5R,KAAK,CAAC4R,aAAN,CAAoB1O,QAApB;UAApB,CAApG,CAAT,EAAsKhC,yBAAyB,CAAClB,KAAK,CAACuO,UAAP,CAAzB,IAA+C;YAAE,eAAevO,KAAK,CAACuO;UAAvB,CAArN,CAAT,EAAsQrN,yBAAyB,CAAClB,KAAK,CAACsD,iBAAP,CAAzB,IAAsD;YAC3Z,gCAAgCtD,KAAK,CAACsD;UADqX,CAA5T,CAAT,EAEpFpC,yBAAyB,CAAClB,KAAK,CAACuC,aAAP,CAAzB,IAAkD;YAAE,wBAAwBvC,KAAK,CAACuC;UAAhC,CAFkC,CAAT,EAE2BrB,yBAAyB,CAAClB,KAAK,CAACwC,cAAP,CAAzB,IAAmD;YAAE,yBAAyBxC,KAAK,CAACwC;UAAjC,CAF9E,CAAT,EAE6ItB,yBAAyB,CAAClB,KAAK,CAACyC,YAAP,CAAzB,IAAiD;YAAE,uBAAuBzC,KAAK,CAACyC;UAA/B,CAF9L,CAAT,EAEyPvB,yBAAyB,CAAClB,KAAK,CAAC0C,cAAP,CAAzB,IAAmD;YAAE,yBAAyB1C,KAAK,CAAC0C;UAAjC,CAF5S,CAAT,EAE2WxB,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YACtd,mDAAmD3C,KAAK,CAAC2C;UAD6Z,CAFpa,CAAT,EAIvCzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CAJZ,CAAT,EAM9B1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CANxB,CAAT,EAQrB3B,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CAR5B,CAAT,EAQuFD,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC7J,+BAA+BpB,KAAK,CAACoB;UADwH,CAR/I,CAAlB;UAWAX,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAACA,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAA4B0D,KAAK,CAACsL,UAAN,KAAqB7J,SAArB,IAAkC;YAAE8J,UAAU,EAAEvL,KAAK,CAACsL,UAAN,CAAiBpI,QAAjB;UAAd,CAA9D,CAAT,EAAuHlD,KAAK,CAACkC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAEnC,KAAK,CAACkC;UAAlB,CAAvJ,CAAhB;;UACA,IAAIlC,KAAK,CAAC6R,IAAN,KAAepQ,SAAnB,EAA8B;YAC1Bb,IAAI,GAAGZ,KAAK,CAAC6R,IAAb;UACH;;UACD,IAAI7R,KAAK,CAAC6R,IAAN,KAAepQ,SAAnB,EAA8B;YAC1Ba,QAAQ,GAAGtC,KAAK,CAAC6R,IAAjB;YACAjR,IAAI,GAAG0B,QAAP;UACH;;UACD,OAAO,CAAC,CAAD,EAAI,IAAI5F,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MA/CR;IA0DH,CA3DiB,CAAlB;EA4DH,CA9D8F,CAAhB;AA8D1E,CA9DE;AA+DP,OAAO,IAAIoT,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUhU,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFA,UAAnF,EAA+FC,KAA/F,EAAsGC,IAAtG;;IACA,OAAOpE,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAM4E,yBAAyB,CAAClB,KAAK,CAAC2D,UAAP,CAAzB,IAA+C;YAAE,qBAAqB3D,KAAK,CAAC2D;UAA7B,CAArD,CAAT,EAA4GzC,yBAAyB,CAAClB,KAAK,CAAC4D,iBAAP,CAAzB,IAAsD;YACrS,8BAA8B5D,KAAK,CAAC4D;UADiQ,CAAlK,CAAT,EAExH1C,yBAAyB,CAAClB,KAAK,CAAC6D,yBAAP,CAAzB,IAA8D;YAChE,uCAAuC/G,iBAAiB,CAACkD,KAAK,CAAC6D,yBAAP,CAAjB,CAAmDX,QAAnD;UADyB,CAF0D,CAAT,EAI/GhC,yBAAyB,CAAClB,KAAK,CAAC8D,qBAAP,CAAzB,IAA0D;YAC5D,mCAAmC9D,KAAK,CAAC8D;UADmB,CAJqD,CAAT,EAMtG5C,yBAAyB,CAAClB,KAAK,CAAC+D,2BAAP,CAAzB,IAAgE;YAClE,yCAAyCjH,iBAAiB,CAACkD,KAAK,CAAC+D,2BAAP,CAAjB,CAAqDb,QAArD;UADyB,CANsC,CAAT,EAQ7FhC,yBAAyB,CAAClB,KAAK,CAACiU,eAAP,CAAzB,IAAoD;YAAE,2BAA2BjU,KAAK,CAACiU;UAAnC,CARyC,CAAT,EAQyB/S,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YACxK,mDAAmD3C,KAAK,CAAC2C;UAD+G,CARlF,CAAT,EAU3EzB,yBAAyB,CAAClB,KAAK,CAAC4C,cAAP,CAAzB,IAAmD;YACrD,6CAA6C5C,KAAK,CAAC4C;UADE,CAVwB,CAAT,EAYlE1B,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,iDAAiD7C,KAAK,CAAC6C;UADC,CAZY,CAAT,EAczD3B,yBAAyB,CAAClB,KAAK,CAAC8E,8BAAP,CAAzB,IAAmE;YACrE,+DAA+D9E,KAAK,CAAC8E;UADA,CAdV,CAAT,EAgBhD5D,yBAAyB,CAAClB,KAAK,CAAC+E,wBAAP,CAAzB,IAA6D;YAC/D,yDAAyD/E,KAAK,CAAC+E;UADA,CAhBb,CAAT,EAkBvC7D,yBAAyB,CAAClB,KAAK,CAACgF,2BAAP,CAAzB,IAAgE;YAClE,6DAA6DhF,KAAK,CAACgF;UADD,CAlBzB,CAAT,EAoB9B9D,yBAAyB,CAAClB,KAAK,CAACmB,YAAP,CAAzB,IAAiD;YAAE,uBAAuBnB,KAAK,CAACmB;UAA/B,CApBnB,CAAT,EAoB8ED,yBAAyB,CAAClB,KAAK,CAACoB,mBAAP,CAAzB,IAAwD;YAC7J,+BAA+BpB,KAAK,CAACoB;UADwH,CApBtI,CAAT,EAsBZF,yBAAyB,CAAClB,KAAK,CAACsF,yBAAP,CAAzB,IAA8D;YAChE,sCAAsCtF,KAAK,CAACsF;UADoB,CAtBlD,CAAlB;UAyBA7E,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,kBAAlJ;;UACA,IAAIP,KAAK,CAACwB,MAAN,KAAiBC,SAArB,EAAgC;YAC5Bf,UAAU,GAAGV,KAAK,CAACwB,MAAnB;;YACA,IAAId,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiClE,4BAA4B,CAACgD,UAAD,CAA7D,CAAf;UACH,CAND,MAOK;YACD,MAAM,IAAIiB,KAAJ,CAAU,iDAAV,CAAN;UACH;;UACD,IAAI3B,KAAK,CAAC6B,GAAN,KAAcJ,SAAlB,EAA6B;YACzBf,UAAU,GAAGV,KAAK,CAAC6B,GAAnB;;YACA,IAAInB,UAAU,CAACgB,MAAX,IAAqB,CAAzB,EAA4B;cACxB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;YACH;;YACDlB,YAAY,GAAGA,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BlB,UAAU,CACnDoB,KADyC,CACnC,GADmC,EAEzCC,GAFyC,CAErC,UAAUC,OAAV,EAAmB;cAAE,OAAOtE,4BAA4B,CAACsE,OAAD,CAAnC;YAA+C,CAF/B,EAGzCC,IAHyC,CAGpC,GAHoC,CAA/B,CAAf;UAIH,CATD,MAUK;YACD,MAAM,IAAIN,KAAJ,CAAU,8CAAV,CAAN;UACH;;UACDhB,KAAK,GAAGrE,QAAQ,CAACA,QAAQ,CAAC;YAAE,QAAQ;UAAV,CAAD,EAAgC0D,KAAK,CAACsL,UAAN,KAAqB7J,SAArB,IAAkC;YAAE8J,UAAU,EAAEvL,KAAK,CAACsL,UAAN,CAAiBpI,QAAjB;UAAd,CAAlE,CAAT,EAA2HlD,KAAK,CAACkC,QAAN,KAAmBT,SAAnB,IAAgC;YAAEU,QAAQ,EAAEnC,KAAK,CAACkC;UAAlB,CAA3J,CAAhB;UACA,OAAO,CAAC,CAAD,EAAI,IAAIxF,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEA,QAFW;YAGrBG,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,KAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAtDR;IAiEH,CAlEiB,CAAlB;EAmEH,CArEkG,CAAhB;AAqE9E,CArEE;AAsEP,OAAO,IAAIsT,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUlU,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI2D,EAAJ,EAAQC,QAAR,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEE,KAAvE,EAA8EC,IAA9E,EAAoF0B,QAApF,EAA8F6R,gBAA9F;;IACA,OAAO3X,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIb,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACR,KAAK,CAAL;UACIb,EAAE,GAAGW,EAAE,CAACG,IAAH,EAAL,EAAgBb,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G,EAAmHC,QAAQ,GAAGL,EAAE,CAACe,IAAjI;UACAT,OAAO,GAAGlE,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC;YAAE,gBAAgB,0BAAlB;YAA8C,wBAAwB;UAAtE,CAAD,EAA8F4E,yBAAyB,CAAClB,KAAK,CAACoU,YAAP,CAAzB,IAAiD;YAAE,uBAAuBpU,KAAK,CAACoU;UAA/B,CAA/I,CAAT,EAA0MlT,yBAAyB,CAAClB,KAAK,CAACqU,YAAP,CAAzB,IAAiD;YAAE,uBAAuBrU,KAAK,CAACqU;UAA/B,CAA3P,CAAT,EAAsTnT,yBAAyB,CAAClB,KAAK,CAACsU,UAAP,CAAzB,IAA+C;YAAE,oBAAoBtU,KAAK,CAACsU,UAAN,CAAiBpR,QAAjB;UAAtB,CAArW,CAAT,EAAsahC,yBAAyB,CAAClB,KAAK,CAACuU,SAAP,CAAzB,IAA8C;YAAE,wBAAwBvU,KAAK,CAACuU;UAAhC,CAApd,CAAT,EAA6gBrT,yBAAyB,CAAClB,KAAK,CAACwU,YAAP,CAAzB,IAAiD;YAAE,2BAA2BxU,KAAK,CAACwU;UAAnC,CAA9jB,CAAT,EAA6nBtT,yBAAyB,CAAClB,KAAK,CAACyU,YAAP,CAAzB,IAAiD;YAAE,kCAAkCzU,KAAK,CAACyU;UAA1C,CAA9qB,CAAT,EAAovBvT,yBAAyB,CAAClB,KAAK,CAACqD,YAAP,CAAzB,IAAiD;YAAE,kCAAkCrD,KAAK,CAACqD;UAA1C,CAAryB,CAAT,EAA22BnC,yBAAyB,CAAClB,KAAK,CAACuD,kBAAP,CAAzB,IAAuD;YACvsC,wCAAwCvD,KAAK,CAACuD;UADypC,CAAl6B,CAAT,EAE1RrC,yBAAyB,CAAClB,KAAK,CAACwD,eAAP,CAAzB,IAAoD;YACtD,qCAAqCxD,KAAK,CAACwD;UADW,CAFsO,CAAT,EAIjRtC,yBAAyB,CAAClB,KAAK,CAACyD,eAAP,CAAzB,IAAoD;YACtD,qCAAqCzD,KAAK,CAACyD;UADW,CAJ6N,CAAT,EAMxQvC,yBAAyB,CAAClB,KAAK,CAAC4R,aAAP,CAAzB,IAAkD;YAAE,kBAAkB5R,KAAK,CAAC4R,aAAN,CAAoB1O,QAApB;UAApB,CANsN,CAAT,EAMpJhC,yBAAyB,CAAClB,KAAK,CAAC0U,YAAP,CAAzB,IAAiD;YAAE,kCAAkC1U,KAAK,CAAC0U;UAA1C,CANmG,CAAT,EAM7BxT,yBAAyB,CAAClB,KAAK,CAAC0D,WAAP,CAAzB,IAAgD;YAAE,iCAAiC1D,KAAK,CAAC0D;UAAzC,CANnB,CAAT,EAMuFxC,yBAAyB,CAAClB,KAAK,CAACuC,aAAP,CAAzB,IAAkD;YACxX,yCAAyCvC,KAAK,CAACuC;UADyU,CANzI,CAAT,EAQpOrB,yBAAyB,CAAClB,KAAK,CAACwC,cAAP,CAAzB,IAAmD;YACrD,0CAA0CxC,KAAK,CAACwC;UADK,CARiL,CAAT,EAU3NtB,yBAAyB,CAAClB,KAAK,CAACyC,YAAP,CAAzB,IAAiD;YACnD,wCAAwCzC,KAAK,CAACyC;UADK,CAV0K,CAAT,EAYlNvB,yBAAyB,CAAClB,KAAK,CAAC0C,cAAP,CAAzB,IAAmD;YACrD,0CAA0C1C,KAAK,CAAC0C;UADK,CAZ+J,CAAT,EAczMxB,yBAAyB,CAAClB,KAAK,CAAC2U,YAAP,CAAzB,IAAiD;YACnD,wCAAwC3U,KAAK,CAAC2U,YAAN,CAAmBzR,QAAnB;UADW,CAdwJ,CAAT,EAgBhMhC,yBAAyB,CAAClB,KAAK,CAAC4U,IAAP,CAAzB,IAAyC;YAAE,yBAAyB5U,KAAK,CAAC4U;UAAjC,CAhBuJ,CAAT,EAgBlG1T,yBAAyB,CAAClB,KAAK,CAACgE,OAAP,CAAzB,IAA4C;YACnI,4BAA4BlH,iBAAiB,CAACkD,KAAK,CAACgE,OAAP,CAAjB,CAAiCd,QAAjC;UADuG,CAhBsD,CAAT,EAkB9KhC,yBAAyB,CAAClB,KAAK,CAAC6U,UAAP,CAAzB,IAA+C;YAAE,qCAAqC7U,KAAK,CAAC6U;UAA7C,CAlB+H,CAAT,EAkBxD3T,yBAAyB,CAAClB,KAAK,CAAC8U,YAAP,CAAzB,IAAiD;YAChK,kCAAkChY,iBAAiB,CAACkD,KAAK,CAAC8U,YAAP,CAAjB,CAAsC5R,QAAtC;UAD8H,CAlBO,CAAT,EAoB5JhC,yBAAyB,CAAClB,KAAK,CAAC+U,WAAP,CAAzB,IAAgD;YAClD,uCAAuC/U,KAAK,CAAC+U,WAAN,CAAkB7R,QAAlB;UADW,CApB4G,CAAT,EAsBnJhC,yBAAyB,CAAClB,KAAK,CAACkF,cAAP,CAAzB,IAAmD;YACrD,2CAA2ClF,KAAK,CAACkF;UADI,CAtBgG,CAAT,EAwB1IhE,yBAAyB,CAAClB,KAAK,CAACqF,yBAAP,CAAzB,IAA8D;YAChE,iDAAiDrF,KAAK,CAACqF;UADS,CAxB4E,CAAT,EA0BjInE,yBAAyB,CAAClB,KAAK,CAACmF,yBAAP,CAAzB,IAA8D;YAChE,wDAAwD,CAACnF,KAAK,CAACmF,yBAAN,CAAgCC,WAAhC,GAA8CtD,KAA9C,CAAoD,GAApD,EAAyD,CAAzD,IAA8D,GAA/D,EAAoEoB,QAApE;UADQ,CA1BmE,CAAT,EA4BxHhC,yBAAyB,CAAClB,KAAK,CAACgV,UAAP,CAAzB,IAA+C;YACjD,yCAAyChV,KAAK,CAACgV,UAAN,CAAiB9R,QAAjB;UADQ,CA5ByE,CAAT,EA8B/GhC,yBAAyB,CAAClB,KAAK,CAACiV,iBAAP,CAAzB,IAAsD;YACxD,6CAA6CjV,KAAK,CAACiV;UADK,CA9ByD,CAAT,EAgCtG/T,yBAAyB,CAAClB,KAAK,CAACkV,cAAP,CAAzB,IAAmD;YACrD,0CAA0ClV,KAAK,CAACkV;UADK,CAhCmD,CAAT,EAkC7FhU,yBAAyB,CAAClB,KAAK,CAACmV,OAAP,CAAzB,IAA4C;YAAE,kCAAkCnV,KAAK,CAACmV;UAA1C,CAlCiD,CAAT,EAkCgBjU,yBAAyB,CAAClB,KAAK,CAACwE,oBAAP,CAAzB,IAAyD;YAC/J,iDAAiDxE,KAAK,CAACwE;UADwG,CAlCzE,CAAT,EAoC3EtD,yBAAyB,CAAClB,KAAK,CAAC2C,oBAAP,CAAzB,IAAyD;YAC3D,oEAAoE3C,KAAK,CAAC2C;UADf,CApCkB,CAAT,EAsClEzB,yBAAyB,CAAClB,KAAK,CAAC2E,WAAP,CAAzB,IAAgD;YAClD,gEAAgE3E,KAAK,CAAC2E;UADpB,CAtCkB,CAAT,EAwCzDzD,yBAAyB,CAAClB,KAAK,CAAC6C,iBAAP,CAAzB,IAAsD;YACxD,kEAAkE7C,KAAK,CAAC6C;UADhB,CAxCG,CAAT,EA0ChD3B,yBAAyB,CAAClB,KAAK,CAACyE,YAAP,CAAzB,IAAiD;YACnD,wCAAwCzE,KAAK,CAACyE;UADK,CA1CD,CAAT,EA4CvCvD,yBAAyB,CAAClB,KAAK,CAACoV,QAAP,CAAzB,IAA6C;YAC/C,wCAAwCpV,KAAK,CAACoV,QAAN,CAAelS,QAAf;UADO,CA5CN,CAAT,EA8C9BhC,yBAAyB,CAAClB,KAAK,CAACmI,SAAP,CAAzB,IAA8C;YAAE,qCAAqCnI,KAAK,CAACmI;UAA7C,CA9ChB,CAAT,EA8CsFjH,yBAAyB,CAAClB,KAAK,CAAC6E,gBAAP,CAAzB,IAAqD;YAClK,oEAAoE7E,KAAK,CAAC6E,gBAAN,CAAuB3B,QAAvB;UAD8F,CA9C3I,CAAT,EAgDZlD,KAAK,CAACuF,QAAN,KAAmB9D,SAAnB,IACF+D,MAAM,CAACC,IAAP,CAAYzF,KAAK,CAACuF,QAAlB,EAA4BG,MAA5B,CAAmC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;YACtD,IAAI1F,EAAJ;;YACA,OAAQ5D,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKqJ,GAAL,CAAT,GAAqBzF,EAAE,GAAG,EAAL,EAASA,EAAE,CAAC,cAAcmB,MAAd,CAAqBuE,MAAM,CAACC,WAAP,EAArB,CAAD,CAAF,GAAiD7F,KAAK,CAACuF,QAAN,CAAeK,MAAf,CAA1D,EAAkF1F,EAAvG,EAAhB;UACH,CAHD,EAGG,EAHH,CAjDc,CAAlB;UAqDAO,YAAY,GAAG,GAAGY,MAAH,CAAU,CAACd,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,CAArD,IAA+Ef,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA/E,GAAuGhB,QAAQ,IAAI,EAA7H,IAAmI,yBAAlJ;UACAI,KAAK,GAAG;YACJ,QAAQ;UADJ,CAAR;;UAGA,IAAIX,KAAK,CAAC6R,IAAN,KAAepQ,SAAnB,EAA8B;YAC1Bb,IAAI,GAAGZ,KAAK,CAAC6R,IAAb;UACH;;UACD,IAAI7R,KAAK,CAAC6R,IAAN,KAAepQ,SAAnB,EAA8B;YAC1Ba,QAAQ,GAAGtC,KAAK,CAAC6R,IAAjB;YACAjR,IAAI,GAAG0B,QAAP;UACH;;UACD,OAAO,CAAC,CAAD,EAAIrC,OAAO,CAACc,QAAR,EAAJ,CAAP;;QACJ,KAAK,CAAL;UACIoT,gBAAgB,GAAItT,EAAE,CAACG,IAAH,EAAD,CAAYb,QAA/B;;UACA,IAAIF,OAAO,CAACoV,iBAAR,KAA8B,IAAlC,EAAwC;YACpClB,gBAAgB,GAAG,oBAAoBA,gBAAvC;;YACA,IAAInU,KAAK,CAACoU,YAAN,KAAuB3S,SAA3B,EAAsC;cAClC,MAAM,IAAIE,KAAJ,CAAU,2DAAV,CAAN;YACH;;YACDwS,gBAAgB,GAAGA,gBAAgB,CAACvS,OAAjB,CAAyB,gBAAzB,EAA2C5B,KAAK,CAACoU,YAAjD,CAAnB;;YACA,IAAI,CAACxX,iBAAiB,CAACuX,gBAAD,CAAtB,EAA0C;cACtC,MAAM,IAAIxS,KAAJ,CAAU,iEAAV,CAAN;YACH;UACJ;;UACD,OAAO,CAAC,CAAD,EAAI,IAAIjF,aAAJ,CAAkB;YACrB2D,QAAQ,EAAEA,QADW;YAErBF,QAAQ,EAAEgU,gBAFW;YAGrB7T,IAAI,EAAEA,IAHe;YAIrB8B,MAAM,EAAE,MAJa;YAKrB5B,OAAO,EAAEA,OALY;YAMrBS,IAAI,EAAER,YANe;YAOrBE,KAAK,EAAEA,KAPc;YAQrBC,IAAI,EAAEA;UARe,CAAlB,CAAJ,CAAP;MAjFR;IA4FH,CA7FiB,CAAlB;EA8FH,CAhG0G,CAAhB;AAgGtF,CAhGE;AAiGP,OAAO,IAAI0U,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUC,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIC,sDAAsD,CAACF,MAAD,EAAStV,OAAT,CAA1D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAEzT;UAFT,CAAX;;UAIA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArB2G,CAAhB;AAqBvF,CArBE;;AAsBP,IAAImT,sDAAsD,GAAG,SAAzDA,sDAAyD,CAAUF,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,cAAL;cAAqB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACrB,KAAK,+BAAL;cAAsC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAF1C;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAImW,0CAA0C,CAACR,YAAD,EAAe9V,OAAf,CAA9C,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/ByG,CAAhB;AA+BrF,CA/BL;;AAgCA,OAAO,IAAIU,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUrB,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsB,yDAAyD,CAACvB,MAAD,EAAStV,OAAT,CAA7D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP/T,MAAM,EAAEC,SAFD;YAGPoD,gBAAgB,EAAEpD,SAHX;YAIPc,aAAa,EAAEd,SAJR;YAKPe,cAAc,EAAEf,SALT;YAMPgB,YAAY,EAAEhB,SANP;YAOPiB,cAAc,EAAEjB,SAPT;YAQPmT,IAAI,EAAEnT,SARC;YASPoT,UAAU,EAAEpT,SATL;YAUPI,GAAG,EAAEJ,SAVE;YAWPsV,QAAQ,EAAEtV,SAXH;YAYPyT,cAAc,EAAEzT,SAZT;YAaPkD,WAAW,EAAElD,SAbN;YAcP+C,oBAAoB,EAAE/C,SAdf;YAeP0G,SAAS,EAAE1G;UAfJ,CAAX;;UAiBA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAACuS,UAAT,GAAsBU,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAAtB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAACkC,oBAAT,GAAgC+Q,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,6CAAf,MAAkEiB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACqC,WAAT,GAAuB4Q,MAAM,CAAC/U,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACuC,gBAAT,GAA4B7G,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACd,MAAT,GAAkBlE,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,eAAD,CAAJ,KAA0BpV,SAA9B,EAAyC;YACrCa,QAAQ,CAACC,aAAT,GAAyBjF,cAAc,CAACuZ,IAAI,CAAC,eAAD,CAAL,CAAvC;UACH;;UACD,IAAIA,IAAI,CAAC,gBAAD,CAAJ,KAA2BpV,SAA/B,EAA0C;YACtCa,QAAQ,CAACE,cAAT,GAA0BlF,cAAc,CAACuZ,IAAI,CAAC,gBAAD,CAAL,CAAxC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAA7B,EAAwC;YACpCa,QAAQ,CAACG,YAAT,GAAwBnF,cAAc,CAACuZ,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,gBAAD,CAAJ,KAA2BpV,SAA/B,EAA0C;YACtCa,QAAQ,CAACI,cAAT,GAA0BpF,cAAc,CAACuZ,IAAI,CAAC,gBAAD,CAAL,CAAxC;UACH;;UACD,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiBpV,SAArB,EAAgC;YAC5Ba,QAAQ,CAACsS,IAAT,GAAgBtX,cAAc,CAACuZ,IAAI,CAAC,MAAD,CAAL,CAA9B;UACH;;UACD,IAAIA,IAAI,CAAC,KAAD,CAAJ,KAAgBpV,SAApB,EAA+B;YAC3Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACuZ,IAAI,CAAC,KAAD,CAAL,CAA7B;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBpV,SAAzB,EAAoC;YAChCa,QAAQ,CAACyU,QAAT,GAAoBzZ,cAAc,CAACuZ,IAAI,CAAC,UAAD,CAAL,CAAlC;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MArER;IAuEH,CAxEiB,CAAlB;EAyEH,CA3E8G,CAAhB;AA2E1F,CA3EE;;AA4EP,IAAIwU,yDAAyD,GAAG,SAA5DA,yDAA4D,CAAUvB,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B4G,CAAhB;AA0BxF,CA1BL;;AA2BA,OAAO,IAAIc,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUzB,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyB,4CAA4C,CAAC1B,MAAD,EAAStV,OAAT,CAAhD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP1Q,gBAAgB,EAAEpD,SAFX;YAGPyV,gBAAgB,EAAEzV,SAHX;YAIP0V,mBAAmB,EAAE1V,SAJd;YAKPoT,UAAU,EAAEpT,SALL;YAMPyT,cAAc,EAAEzT,SANT;YAOPkB,oBAAoB,EAAElB,SAPf;YAQPoB,iBAAiB,EAAEpB,SARZ;YASPmD,uBAAuB,EAAEnD,SATlB;YAUPkD,WAAW,EAAElD,SAVN;YAWP+C,oBAAoB,EAAE/C,SAXf;YAYP0G,SAAS,EAAE1G;UAZJ,CAAX;;UAcA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAACuS,UAAT,GAAsBU,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAAtB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC6U,mBAAT,GAA+B5B,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAA/B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAACkC,oBAAT,GAAgC+Q,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACK,oBAAT,GAAgC4S,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,+CAAf,MAAoEiB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAACO,iBAAT,GAA6B0S,MAAM,CAAC/U,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,6CAAf,MAAkEiB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACqC,WAAT,GAAuB4Q,MAAM,CAAC/U,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sCAAf,MAA2DiB,SAA/D,EAA0E;YACtEa,QAAQ,CAACsC,uBAAT,GAAmC2Q,MAAM,CAAC/U,OAAP,CAAe,sCAAf,CAAnC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACuC,gBAAT,GAA4B7G,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAAC4U,gBAAT,GAA4BE,sCAAsC,CAACP,IAAD,EAAO5W,OAAP,CAAlE;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAtDR;IAwDH,CAzDiB,CAAlB;EA0DH,CA5DiG,CAAhB;AA4D7E,CA5DE;;AA6DP,IAAI2U,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAU1B,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,4BAAL;cAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACnC,KAAK,6CAAL;cAAoD,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFxD;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIiX,wDAAwD,CAACtB,YAAD,EAAe9V,OAAf,CAA5D,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/B+F,CAAhB;AA+B3E,CA/BL;;AAgCA,OAAO,IAAIoB,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAU/B,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+B,8CAA8C,CAAChC,MAAD,EAAStV,OAAT,CAAlD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPwB,QAAQ,EAAEtV;UAFH,CAAX;;UAIA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,UAAf,MAA+BiB,SAAnC,EAA8C;YAC1Ca,QAAQ,CAACyU,QAAT,GAAoBxB,MAAM,CAAC/U,OAAP,CAAe,UAAf,CAApB;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArBmG,CAAhB;AAqB/E,CArBE;;AAsBP,IAAIiV,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUhC,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,qBAAL;cAA4B,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAC5B,KAAK,sCAAL;cAA6C,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAC7C,KAAK,yBAAL;cAAgC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAChC,KAAK,0CAAL;cAAiD,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAJrD;;UAMA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIoX,iDAAiD,CAACzB,YAAD,EAAe9V,OAAf,CAArD,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIyW,qDAAqD,CAAC1B,YAAD,EAAe9V,OAAf,CAAzD,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MA5BR;IA8BH,CA/BiB,CAAlB;EAgCH,CAnCiG,CAAhB;AAmC7E,CAnCL;;AAoCA,OAAO,IAAIwB,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUnC,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImC,uDAAuD,CAACpC,MAAD,EAAStV,OAAT,CAA3D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPqC,SAAS,EAAEnW,SAFJ;YAGPoW,WAAW,EAAEpW,SAHN;YAIPD,MAAM,EAAEC,SAJD;YAKPoD,gBAAgB,EAAEpD,SALX;YAMP6B,iBAAiB,EAAE7B,SANZ;YAOPI,GAAG,EAAEJ,SAPE;YAQPyT,cAAc,EAAEzT,SART;YASPkB,oBAAoB,EAAElB,SATf;YAUPoB,iBAAiB,EAAEpB,SAVZ;YAWPmD,uBAAuB,EAAEnD,SAXlB;YAYPkD,WAAW,EAAElD,SAZN;YAaP+C,oBAAoB,EAAE/C,SAbf;YAcPS,QAAQ,EAAET;UAdH,CAAX;;UAgBA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAACsV,SAAT,GAAqB1a,eAAe,CAACkB,sBAAsB,CAACmX,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAAD,CAAvB,CAApC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACuV,WAAT,GAAuBtC,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAACkC,oBAAT,GAAgC+Q,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACK,oBAAT,GAAgC4S,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,+CAAf,MAAoEiB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAACO,iBAAT,GAA6B0S,MAAM,CAAC/U,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,6CAAf,MAAkEiB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACqC,WAAT,GAAuB4Q,MAAM,CAAC/U,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sCAAf,MAA2DiB,SAA/D,EAA0E;YACtEa,QAAQ,CAACsC,uBAAT,GAAmC2Q,MAAM,CAAC/U,OAAP,CAAe,sCAAf,CAAnC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACuC,gBAAT,GAA4B7G,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,0BAAf,MAA+CiB,SAAnD,EAA8D;YAC1Da,QAAQ,CAACgB,iBAAT,GAA6BiS,MAAM,CAAC/U,OAAP,CAAe,0BAAf,CAA7B;UACH;;UACDN,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACd,MAAT,GAAkBlE,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,KAAD,CAAJ,KAAgBpV,SAApB,EAA+B;YAC3Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACuZ,IAAI,CAAC,KAAD,CAAL,CAA7B;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBpV,SAAzB,EAAoC;YAChCa,QAAQ,CAACJ,QAAT,GAAoB5E,cAAc,CAACuZ,IAAI,CAAC,UAAD,CAAL,CAAlC;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAjER;IAmEH,CApEiB,CAAlB;EAqEH,CAvE4G,CAAhB;AAuExF,CAvEE;;AAwEP,IAAIqV,uDAAuD,GAAG,SAA1DA,uDAA0D,CAAUpC,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B0G,CAAhB;AA0BtF,CA1BL;;AA2BA,OAAO,IAAI4B,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUvC,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuC,8CAA8C,CAACxC,MAAD,EAAStV,OAAT,CAAlD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBmG,CAAhB;AAiB/E,CAjBE;;AAkBP,IAAIyV,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUxC,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BiG,CAAhB;AA0B7E,CA1BL;;AA2BA,OAAO,IAAI8B,+DAA+D,GAAG,SAAlEA,+DAAkE,CAAUzC,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3J,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyC,oEAAoE,CAAC1C,MAAD,EAAStV,OAAT,CAAxE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjByH,CAAhB;AAiBrG,CAjBE;;AAkBP,IAAI2V,oEAAoE,GAAG,SAAvEA,oEAAuE,CAAU1C,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuH,CAAhB;AA0BnG,CA1BL;;AA2BA,OAAO,IAAIgC,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU3C,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2C,kDAAkD,CAAC5C,MAAD,EAAStV,OAAT,CAAtD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuG,CAAhB;AAiBnF,CAjBE;;AAkBP,IAAI6V,kDAAkD,GAAG,SAArDA,kDAAqD,CAAU5C,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAIkC,mDAAmD,GAAG,SAAtDA,mDAAsD,CAAU7C,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6C,wDAAwD,CAAC9C,MAAD,EAAStV,OAAT,CAA5D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB6G,CAAhB;AAiBzF,CAjBE;;AAkBP,IAAI+V,wDAAwD,GAAG,SAA3DA,wDAA2D,CAAU9C,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B2G,CAAhB;AA0BvF,CA1BL;;AA2BA,OAAO,IAAIoC,wEAAwE,GAAG,SAA3EA,wEAA2E,CAAU/C,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpK,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+C,6EAA6E,CAAChD,MAAD,EAAStV,OAAT,CAAjF,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBkI,CAAhB;AAiB9G,CAjBE;;AAkBP,IAAIiW,6EAA6E,GAAG,SAAhFA,6EAAgF,CAAUhD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClK,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BgI,CAAhB;AA0B5G,CA1BL;;AA2BA,OAAO,IAAIsC,+DAA+D,GAAG,SAAlEA,+DAAkE,CAAUjD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3J,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiD,oEAAoE,CAAClD,MAAD,EAAStV,OAAT,CAAxE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjByH,CAAhB;AAiBrG,CAjBE;;AAkBP,IAAImW,oEAAoE,GAAG,SAAvEA,oEAAuE,CAAUlD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuH,CAAhB;AA0BnG,CA1BL;;AA2BA,OAAO,IAAIwC,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUnD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImD,uDAAuD,CAACpD,MAAD,EAAStV,OAAT,CAA3D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB4G,CAAhB;AAiBxF,CAjBE;;AAkBP,IAAIqW,uDAAuD,GAAG,SAA1DA,uDAA0D,CAAUpD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B0G,CAAhB;AA0BtF,CA1BL;;AA2BA,OAAO,IAAI0C,6DAA6D,GAAG,SAAhEA,6DAAgE,CAAUrD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqD,kEAAkE,CAACtD,MAAD,EAAStV,OAAT,CAAtE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuH,CAAhB;AAiBnG,CAjBE;;AAkBP,IAAIuW,kEAAkE,GAAG,SAArEA,kEAAqE,CAAUtD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqH,CAAhB;AA0BjG,CA1BL;;AA2BA,OAAO,IAAI4C,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAUvD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuD,+DAA+D,CAACxD,MAAD,EAAStV,OAAT,CAAnE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBoH,CAAhB;AAiBhG,CAjBE;;AAkBP,IAAIyW,+DAA+D,GAAG,SAAlEA,+DAAkE,CAAUxD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BkH,CAAhB;AA0B9F,CA1BL;;AA2BA,OAAO,IAAI8C,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUzD,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyD,oDAAoD,CAAC1D,MAAD,EAAStV,OAAT,CAAxD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjByG,CAAhB;AAiBrF,CAjBE;;AAkBP,IAAI2W,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAU1D,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuG,CAAhB;AA0BnF,CA1BL;;AA2BA,OAAO,IAAIgD,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAU3D,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2D,yDAAyD,CAAC5D,MAAD,EAAStV,OAAT,CAA7D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB8G,CAAhB;AAiB1F,CAjBE;;AAkBP,IAAI6W,yDAAyD,GAAG,SAA5DA,yDAA4D,CAAU5D,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B4G,CAAhB;AA0BxF,CA1BL;;AA2BA,OAAO,IAAIkD,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU7D,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6D,qDAAqD,CAAC9D,MAAD,EAAStV,OAAT,CAAzD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB0G,CAAhB;AAiBtF,CAjBE;;AAkBP,IAAI+W,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAU9D,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BwG,CAAhB;AA0BpF,CA1BL;;AA2BA,OAAO,IAAIoD,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU/D,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+D,qDAAqD,CAAChE,MAAD,EAAStV,OAAT,CAAzD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB0G,CAAhB;AAiBtF,CAjBE;;AAkBP,IAAIiX,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUhE,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BwG,CAAhB;AA0BpF,CA1BL;;AA2BA,OAAO,IAAIsD,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUjE,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiE,8CAA8C,CAAClE,MAAD,EAAStV,OAAT,CAAlD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPZ,YAAY,EAAElT,SAFP;YAGPyT,cAAc,EAAEzT,SAHT;YAIP0G,SAAS,EAAE1G;UAJJ,CAAX;;UAMA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACqS,YAAT,GAAwB3W,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAD,CAAtC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAvBR;IAyBH,CA1BiB,CAAlB;EA2BH,CA7BmG,CAAhB;AA6B/E,CA7BE;;AA8BP,IAAImX,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUlE,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BiG,CAAhB;AA0B7E,CA1BL;;AA2BA,OAAO,IAAIwD,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUnE,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImE,+CAA+C,CAACpE,MAAD,EAAStV,OAAT,CAAnD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPqE,OAAO,EAAEnY,SAFF;YAGPoY,MAAM,EAAEpY,SAHD;YAIPyT,cAAc,EAAEzT;UAJT,CAAX;;UAMA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC+C,OAAL,KAAiB,EAArB,EAAyB;YACrBtX,QAAQ,CAACsX,OAAT,GAAmB,EAAnB;UACH,CAFD,MAGK,IAAI/C,IAAI,CAAC,SAAD,CAAJ,KAAoBpV,SAAxB,EAAmC;YACpCa,QAAQ,CAACsX,OAAT,GAAmBE,oCAAoC,CAAClc,sBAAsB,CAACiZ,IAAI,CAAC,SAAD,CAAL,CAAvB,EAA0C5W,OAA1C,CAAvD;UACH;;UACD,IAAI4W,IAAI,CAAClV,KAAL,KAAe,EAAnB,EAAuB;YACnBW,QAAQ,CAACuX,MAAT,GAAkB,EAAlB;UACH,CAFD,MAGK,IAAIhD,IAAI,CAAC,OAAD,CAAJ,KAAkBpV,SAAtB,EAAiC;YAClCa,QAAQ,CAACuX,MAAT,GAAkBE,4BAA4B,CAACnc,sBAAsB,CAACiZ,IAAI,CAAC,OAAD,CAAL,CAAvB,EAAwC5W,OAAxC,CAA9C;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MA/BR;IAiCH,CAlCiB,CAAlB;EAmCH,CArCoG,CAAhB;AAqChF,CArCE;;AAsCP,IAAIqX,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUpE,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BkG,CAAhB;AA0B9E,CA1BL;;AA2BA,OAAO,IAAI8D,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUzE,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyE,qDAAqD,CAAC1E,MAAD,EAAStV,OAAT,CAAzD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPpN,SAAS,EAAE1G;UAFJ,CAAX;;UAIA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArB0G,CAAhB;AAqBtF,CArBE;;AAsBP,IAAI2X,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAU1E,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BwG,CAAhB;AA0BpF,CA1BL;;AA2BA,OAAO,IAAIgE,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAU3E,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2E,yDAAyD,CAAC5E,MAAD,EAAStV,OAAT,CAA7D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB8G,CAAhB;AAiB1F,CAjBE;;AAkBP,IAAI6X,yDAAyD,GAAG,SAA5DA,yDAA4D,CAAU5E,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B4G,CAAhB;AA0BxF,CA1BL;;AA2BA,OAAO,IAAIkE,6DAA6D,GAAG,SAAhEA,6DAAgE,CAAU7E,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6E,kEAAkE,CAAC9E,MAAD,EAAStV,OAAT,CAAtE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP+E,MAAM,EAAE7Y;UAFD,CAAX;UAIAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAjBR;IAmBH,CApBiB,CAAlB;EAqBH,CAvBuH,CAAhB;AAuBnG,CAvBE;;AAwBP,IAAI+X,kEAAkE,GAAG,SAArEA,kEAAqE,CAAU9E,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqH,CAAhB;AA0BjG,CA1BL;;AA2BA,OAAO,IAAIqE,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUhF,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIgF,8CAA8C,CAACjF,MAAD,EAAStV,OAAT,CAAlD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPkF,MAAM,EAAEhZ,SAFD;YAGPiZ,KAAK,EAAEjZ;UAHA,CAAX;UAKAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC8D,iBAAL,KAA2B,EAA/B,EAAmC;YAC/BrY,QAAQ,CAACmY,MAAT,GAAkB,EAAlB;UACH,CAFD,MAGK,IAAI5D,IAAI,CAAC,mBAAD,CAAJ,KAA8BpV,SAA9B,IAA2CoV,IAAI,CAAC,mBAAD,CAAJ,CAA0B,OAA1B,MAAuCpV,SAAtF,EAAiG;YAClGa,QAAQ,CAACmY,MAAT,GAAkBG,4BAA4B,CAAChd,sBAAsB,CAACiZ,IAAI,CAAC,mBAAD,CAAJ,CAA0B,OAA1B,CAAD,CAAvB,EAA6D5W,OAA7D,CAA9C;UACH;;UACD,IAAI4W,IAAI,CAAC,OAAD,CAAJ,KAAkBpV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACoY,KAAT,GAAiBG,2BAA2B,CAAChE,IAAI,CAAC,OAAD,CAAL,EAAgB5W,OAAhB,CAA5C;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA9BmG,CAAhB;AA8B/E,CA9BE;;AA+BP,IAAIkY,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUjF,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BiG,CAAhB;AA0B7E,CA1BL;;AA2BA,OAAO,IAAI4E,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUvF,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuF,iEAAiE,CAACxF,MAAD,EAAStV,OAAT,CAArE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP5G,sBAAsB,EAAElN;UAFjB,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAACqM,sBAAT,GAAkCqM,4CAA4C,CAACnE,IAAD,EAAO5W,OAAP,CAA9E;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBsH,CAAhB;AAoBlG,CApBE;;AAqBP,IAAIyY,iEAAiE,GAAG,SAApEA,iEAAoE,CAAUxF,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BoH,CAAhB;AA0BhG,CA1BL;;AA2BA,OAAO,IAAI+E,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAU1F,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI0F,+CAA+C,CAAC3F,MAAD,EAAStV,OAAT,CAAnD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP4F,SAAS,EAAE1Z;UAFJ,CAAX;UAIAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAACuE,QAAL,KAAkB,EAAtB,EAA0B;YACtB9Y,QAAQ,CAAC6Y,SAAT,GAAqB,EAArB;UACH,CAFD,MAGK,IAAItE,IAAI,CAAC,UAAD,CAAJ,KAAqBpV,SAAzB,EAAoC;YACrCa,QAAQ,CAAC6Y,SAAT,GAAqBE,+BAA+B,CAACzd,sBAAsB,CAACiZ,IAAI,CAAC,UAAD,CAAL,CAAvB,EAA2C5W,OAA3C,CAApD;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MApBR;IAsBH,CAvBiB,CAAlB;EAwBH,CA1BoG,CAAhB;AA0BhF,CA1BE;;AA2BP,IAAI4Y,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAU3F,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BkG,CAAhB;AA0B9E,CA1BL;;AA2BA,OAAO,IAAIoF,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU/F,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+F,qDAAqD,CAAChG,MAAD,EAAStV,OAAT,CAAzD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPtG,iCAAiC,EAAExN;UAF5B,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAAC2M,iCAAT,GAA6CuM,uDAAuD,CAAC3E,IAAD,EAAO5W,OAAP,CAApG;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB0G,CAAhB;AAoBtF,CApBE;;AAqBP,IAAIiZ,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUhG,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BwG,CAAhB;AA0BpF,CA1BL;;AA2BA,OAAO,IAAIuF,qEAAqE,GAAG,SAAxEA,qEAAwE,CAAUlG,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjK,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkG,0EAA0E,CAACnG,MAAD,EAAStV,OAAT,CAA9E,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPnG,+BAA+B,EAAE3N;UAF1B,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAAC8M,+BAAT,GAA2CuM,qDAAqD,CAAC9E,IAAD,EAAO5W,OAAP,CAAhG;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB+H,CAAhB;AAoB3G,CApBE;;AAqBP,IAAIoZ,0EAA0E,GAAG,SAA7EA,0EAA6E,CAAUnG,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/J,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B6H,CAAhB;AA0BzG,CA1BL;;AA2BA,OAAO,IAAI0F,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUrG,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqG,iEAAiE,CAACtG,MAAD,EAAStV,OAAT,CAArE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPhG,sBAAsB,EAAE9N;UAFjB,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAACiN,sBAAT,GAAkCuM,4CAA4C,CAACjF,IAAD,EAAO5W,OAAP,CAA9E;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBsH,CAAhB;AAoBlG,CApBE;;AAqBP,IAAIuZ,iEAAiE,GAAG,SAApEA,iEAAoE,CAAUtG,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BoH,CAAhB;AA0BhG,CA1BL;;AA2BA,OAAO,IAAI6F,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUxG,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIwG,iEAAiE,CAACzG,MAAD,EAAStV,OAAT,CAArE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP0G,KAAK,EAAExa;UAFA,CAAX;UAIAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAACqF,IAAL,KAAc,EAAlB,EAAsB;YAClB5Z,QAAQ,CAAC2Z,KAAT,GAAiB,EAAjB;UACH,CAFD,MAGK,IAAIpF,IAAI,CAAC,MAAD,CAAJ,KAAiBpV,SAArB,EAAgC;YACjCa,QAAQ,CAAC2Z,KAAT,GAAiBE,oCAAoC,CAACve,sBAAsB,CAACiZ,IAAI,CAAC,MAAD,CAAL,CAAvB,EAAuC5W,OAAvC,CAArD;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MApBR;IAsBH,CAvBiB,CAAlB;EAwBH,CA1BsH,CAAhB;AA0BlG,CA1BE;;AA2BP,IAAI0Z,iEAAiE,GAAG,SAApEA,iEAAoE,CAAUzG,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BoH,CAAhB;AA0BhG,CA1BL;;AA2BA,OAAO,IAAIkG,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU7G,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6G,mDAAmD,CAAC9G,MAAD,EAAStV,OAAT,CAAvD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP+G,kBAAkB,EAAE7a;UAFb,CAAX;UAIAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,oBAAD,CAAJ,KAA+BpV,SAAnC,EAA8C;YAC1Ca,QAAQ,CAACga,kBAAT,GAA8Bhf,cAAc,CAACuZ,IAAI,CAAC,oBAAD,CAAL,CAA5C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAjBR;IAmBH,CApBiB,CAAlB;EAqBH,CAvBwG,CAAhB;AAuBpF,CAvBE;;AAwBP,IAAI+Z,mDAAmD,GAAG,SAAtDA,mDAAsD,CAAU9G,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BsG,CAAhB;AA0BlF,CA1BL;;AA2BA,OAAO,IAAIqG,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUhH,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIgH,kDAAkD,CAACjH,MAAD,EAAStV,OAAT,CAAtD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPkH,cAAc,EAAEhb;UAFT,CAAX;UAIAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,gBAAD,CAAJ,KAA2BpV,SAA/B,EAA0C;YACtCa,QAAQ,CAACma,cAAT,GAA0BC,oCAAoC,CAAC7F,IAAI,CAAC,gBAAD,CAAL,EAAyB5W,OAAzB,CAA9D;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAjBR;IAmBH,CApBiB,CAAlB;EAqBH,CAvBuG,CAAhB;AAuBnF,CAvBE;;AAwBP,IAAIka,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUjH,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAIyG,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAUpH,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIoH,+DAA+D,CAACrH,MAAD,EAAStV,OAAT,CAAnE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPvF,oBAAoB,EAAEvO;UAFf,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAAC0N,oBAAT,GAAgC6M,0CAA0C,CAAChG,IAAD,EAAO5W,OAAP,CAA1E;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBoH,CAAhB;AAoBhG,CApBE;;AAqBP,IAAIsa,+DAA+D,GAAG,SAAlEA,+DAAkE,CAAUrH,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BkH,CAAhB;AA0B9F,CA1BL;;AA2BA,OAAO,IAAI4G,+DAA+D,GAAG,SAAlEA,+DAAkE,CAAUvH,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3J,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuH,oEAAoE,CAACxH,MAAD,EAAStV,OAAT,CAAxE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPyH,wBAAwB,EAAEvb,SAFnB;YAGPwb,4BAA4B,EAAExb,SAHvB;YAIPyb,mBAAmB,EAAEzb,SAJd;YAKP0b,mBAAmB,EAAE1b;UALd,CAAX;UAOAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,0BAAD,CAAJ,KAAqCpV,SAAzC,EAAoD;YAChDa,QAAQ,CAAC0a,wBAAT,GAAoCI,8CAA8C,CAACvG,IAAI,CAAC,0BAAD,CAAL,EAAmC5W,OAAnC,CAAlF;UACH;;UACD,IAAI4W,IAAI,CAACwG,0BAAL,KAAoC,EAAxC,EAA4C;YACxC/a,QAAQ,CAAC2a,4BAAT,GAAwC,EAAxC;UACH,CAFD,MAGK,IAAIpG,IAAI,CAAC,4BAAD,CAAJ,KAAuCpV,SAA3C,EAAsD;YACvDa,QAAQ,CAAC2a,4BAAT,GAAwCK,qDAAqD,CAAC1f,sBAAsB,CAACiZ,IAAI,CAAC,4BAAD,CAAL,CAAvB,EAA6D5W,OAA7D,CAA7F;UACH;;UACD,IAAI4W,IAAI,CAAC0G,kBAAL,KAA4B,EAAhC,EAAoC;YAChCjb,QAAQ,CAAC4a,mBAAT,GAA+B,EAA/B;UACH,CAFD,MAGK,IAAIrG,IAAI,CAAC,oBAAD,CAAJ,KAA+BpV,SAAnC,EAA8C;YAC/Ca,QAAQ,CAAC4a,mBAAT,GAA+BM,4CAA4C,CAAC5f,sBAAsB,CAACiZ,IAAI,CAAC,oBAAD,CAAL,CAAvB,EAAqD5W,OAArD,CAA3E;UACH;;UACD,IAAI4W,IAAI,CAAC4G,kBAAL,KAA4B,EAAhC,EAAoC;YAChCnb,QAAQ,CAAC6a,mBAAT,GAA+B,EAA/B;UACH,CAFD,MAGK,IAAItG,IAAI,CAAC,oBAAD,CAAJ,KAA+BpV,SAAnC,EAA8C;YAC/Ca,QAAQ,CAAC6a,mBAAT,GAA+BO,4CAA4C,CAAC9f,sBAAsB,CAACiZ,IAAI,CAAC,oBAAD,CAAL,CAAvB,EAAqD5W,OAArD,CAA3E;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAtCR;IAwCH,CAzCiB,CAAlB;EA0CH,CA5CyH,CAAhB;AA4CrG,CA5CE;;AA6CP,IAAIya,oEAAoE,GAAG,SAAvEA,oEAAuE,CAAUxH,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuH,CAAhB;AA0BnG,CA1BL;;AA2BA,OAAO,IAAIyH,uDAAuD,GAAG,SAA1DA,uDAA0D,CAAUpI,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIoI,4DAA4D,CAACrI,MAAD,EAAStV,OAAT,CAAhE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPhF,iBAAiB,EAAE9O;UAFZ,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAACiO,iBAAT,GAA6BsN,uCAAuC,CAAChH,IAAD,EAAO5W,OAAP,CAApE;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBiH,CAAhB;AAoB7F,CApBE;;AAqBP,IAAIsb,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUrI,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B+G,CAAhB;AA0B3F,CA1BL;;AA2BA,OAAO,IAAI4H,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUvI,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI+F,QAAJ,EAAcuU,IAAd;IACA,OAAOra,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuI,iDAAiD,CAACxI,MAAD,EAAStV,OAAT,CAArD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP5E,MAAM,EAAElP;UAFD,CAAX;UAIA,OAAO,CAAC,CAAD,EAAIuc,iBAAiB,CAACzI,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAArB,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACc,IAAH,EAAP;UACAsB,QAAQ,CAACqO,MAAT,GAAkBrT,cAAc,CAACuZ,IAAD,CAAhC;UACA,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAbR;IAeH,CAhBiB,CAAlB;EAiBH,CAnBsG,CAAhB;AAmBlF,CAnBE;;AAoBP,IAAIyb,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUxI,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BoG,CAAhB;AA0BhF,CA1BL;;AA2BA,OAAO,IAAI+H,kDAAkD,GAAG,SAArDA,kDAAqD,CAAU1I,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI0I,uDAAuD,CAAC3I,MAAD,EAAStV,OAAT,CAA3D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP4I,YAAY,EAAE1c;UAFP,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAAC6b,YAAT,GAAwBC,kCAAkC,CAACvH,IAAD,EAAO5W,OAAP,CAA1D;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB4G,CAAhB;AAoBxF,CApBE;;AAqBP,IAAI4b,uDAAuD,GAAG,SAA1DA,uDAA0D,CAAU3I,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B0G,CAAhB;AA0BtF,CA1BL;;AA2BA,OAAO,IAAImI,iDAAiD,GAAG,SAApDA,iDAAoD,CAAU9I,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI8I,sDAAsD,CAAC/I,MAAD,EAAStV,OAAT,CAA1D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPzE,wBAAwB,EAAErP;UAFnB,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAACwO,wBAAT,GAAoCyN,8CAA8C,CAAC1H,IAAD,EAAO5W,OAAP,CAAlF;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB2G,CAAhB;AAoBvF,CApBE;;AAqBP,IAAIgc,sDAAsD,GAAG,SAAzDA,sDAAyD,CAAU/I,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1ByG,CAAhB;AA0BrF,CA1BL;;AA2BA,OAAO,IAAIsI,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUjJ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiJ,yDAAyD,CAAClJ,MAAD,EAAStV,OAAT,CAA7D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPmJ,KAAK,EAAEjd;UAFA,CAAX;UAIAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,OAAD,CAAJ,KAAkBpV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACoc,KAAT,GAAiBphB,cAAc,CAACuZ,IAAI,CAAC,OAAD,CAAL,CAA/B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAjBR;IAmBH,CApBiB,CAAlB;EAqBH,CAvB8G,CAAhB;AAuB1F,CAvBE;;AAwBP,IAAImc,yDAAyD,GAAG,SAA5DA,yDAA4D,CAAUlJ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B4G,CAAhB;AA0BxF,CA1BL;;AA2BA,OAAO,IAAIyI,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUpJ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIoJ,kDAAkD,CAACrJ,MAAD,EAAStV,OAAT,CAAtD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPsJ,MAAM,EAAEpd;UAFD,CAAX;UAIAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAACgI,MAAL,KAAgB,EAApB,EAAwB;YACpBvc,QAAQ,CAACuc,MAAT,GAAkB,EAAlB;UACH,CAFD,MAGK,IAAIhI,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAnB,IAAgCoV,IAAI,CAAC,QAAD,CAAJ,CAAe,KAAf,MAA0BpV,SAA9D,EAAyE;YAC1Ea,QAAQ,CAACuc,MAAT,GAAkBC,4BAA4B,CAAClhB,sBAAsB,CAACiZ,IAAI,CAAC,QAAD,CAAJ,CAAe,KAAf,CAAD,CAAvB,EAAgD5W,OAAhD,CAA9C;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MApBR;IAsBH,CAvBiB,CAAlB;EAwBH,CA1BuG,CAAhB;AA0BnF,CA1BE;;AA2BP,IAAIsc,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUrJ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAI6I,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUxJ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIwJ,qDAAqD,CAACzJ,MAAD,EAAStV,OAAT,CAAzD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP0J,SAAS,EAAExd,SAFJ;YAGP6Y,MAAM,EAAE7Y;UAHD,CAAX;UAKAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,WAAD,CAAJ,KAAsBpV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC2c,SAAT,GAAqB3hB,cAAc,CAACuZ,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MArBR;IAuBH,CAxBiB,CAAlB;EAyBH,CA3B0G,CAAhB;AA2BtF,CA3BE;;AA4BP,IAAI0c,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUzJ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BwG,CAAhB;AA0BpF,CA1BL;;AA2BA,OAAO,IAAIgJ,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU3J,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2J,kDAAkD,CAAC5J,MAAD,EAAStV,OAAT,CAAtD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP6J,aAAa,EAAE3d,SAFR;YAGP4d,aAAa,EAAE5d,SAHR;YAIP6d,qBAAqB,EAAE7d,SAJhB;YAKP8d,YAAY,EAAE9d;UALP,CAAX;UAOAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,eAAD,CAAJ,KAA0BpV,SAA9B,EAAyC;YACrCa,QAAQ,CAAC8c,aAAT,GAAyBI,mCAAmC,CAAC3I,IAAI,CAAC,eAAD,CAAL,EAAwB5W,OAAxB,CAA5D;UACH;;UACD,IAAI4W,IAAI,CAAC,eAAD,CAAJ,KAA0BpV,SAA9B,EAAyC;YACrCa,QAAQ,CAAC+c,aAAT,GAAyBI,mCAAmC,CAAC5I,IAAI,CAAC,eAAD,CAAL,EAAwB5W,OAAxB,CAA5D;UACH;;UACD,IAAI4W,IAAI,CAAC,uBAAD,CAAJ,KAAkCpV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACgd,qBAAT,GAAiCI,2CAA2C,CAAC7I,IAAI,CAAC,uBAAD,CAAL,EAAgC5W,OAAhC,CAA5E;UACH;;UACD,IAAI4W,IAAI,CAAC0I,YAAL,KAAsB,EAA1B,EAA8B;YAC1Bjd,QAAQ,CAACid,YAAT,GAAwB,EAAxB;UACH,CAFD,MAGK,IAAI1I,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAAzB,IAAsCoV,IAAI,CAAC,cAAD,CAAJ,CAAqB,aAArB,MAAwCpV,SAAlF,EAA6F;YAC9Fa,QAAQ,CAACid,YAAT,GAAwBI,kCAAkC,CAAC/hB,sBAAsB,CAACiZ,IAAI,CAAC,cAAD,CAAJ,CAAqB,aAArB,CAAD,CAAvB,EAA8D5W,OAA9D,CAA1D;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCuG,CAAhB;AAsCnF,CAtCE;;AAuCP,IAAI6c,kDAAkD,GAAG,SAArDA,kDAAqD,CAAU5J,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAI0J,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUrK,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI+F,QAAJ,EAAcuU,IAAd;IACA,OAAOra,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,IAAIqV,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;QACvD,OAAO,CAAC,CAAD,EAAIqK,2CAA2C,CAACtK,MAAD,EAAStV,OAAT,CAA/C,CAAP;MACH;;MACDqC,QAAQ,GAAG;QACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;QAEPd,YAAY,EAAEhT,SAFP;QAGPoQ,IAAI,EAAEpQ,SAHC;QAIPoD,gBAAgB,EAAEpD,SAJX;QAKP4B,YAAY,EAAE5B,SALP;QAMPc,aAAa,EAAEd,SANR;QAOPe,cAAc,EAAEf,SAPT;QAQPgB,YAAY,EAAEhB,SARP;QASPiB,cAAc,EAAEjB,SATT;QAUP8B,kBAAkB,EAAE9B,SAVb;QAWP+B,eAAe,EAAE/B,SAXV;QAYPgC,eAAe,EAAEhC,SAZV;QAaPmQ,aAAa,EAAEnQ,SAbR;QAcPiT,YAAY,EAAEjT,SAdP;QAePiC,WAAW,EAAEjC,SAfN;QAgBPkT,YAAY,EAAElT,SAhBP;QAiBPmT,IAAI,EAAEnT,SAjBC;QAkBPoT,UAAU,EAAEpT,SAlBL;QAmBPuC,OAAO,EAAEvC,SAnBF;QAoBPqT,YAAY,EAAErT,SApBP;QAqBP8D,QAAQ,EAAE9D,SArBH;QAsBPsT,WAAW,EAAEtT,SAtBN;QAuBP4D,yBAAyB,EAAE5D,SAvBpB;QAwBPyD,cAAc,EAAEzD,SAxBT;QAyBP0D,yBAAyB,EAAE1D,SAzBpB;QA0BPuT,UAAU,EAAEvT,SA1BL;QA2BPwT,iBAAiB,EAAExT,SA3BZ;QA4BPyT,cAAc,EAAEzT,SA5BT;QA6BP0T,OAAO,EAAE1T,SA7BF;QA8BPkB,oBAAoB,EAAElB,SA9Bf;QA+BPoB,iBAAiB,EAAEpB,SA/BZ;QAgCPkD,WAAW,EAAElD,SAhCN;QAiCP+C,oBAAoB,EAAE/C,SAjCf;QAkCPgD,YAAY,EAAEhD,SAlCP;QAmCP2T,QAAQ,EAAE3T,SAnCH;QAoCP0G,SAAS,EAAE1G,SApCJ;QAqCPiD,uBAAuB,EAAEjD;MArClB,CAAX;;MAuCA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;QACrDa,QAAQ,CAACqS,YAAT,GAAwB3W,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAD,CAAtC;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAACmS,YAAT,GAAwBc,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAxB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;QAClDa,QAAQ,CAACuS,UAAT,GAAsBU,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAAtB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAAC6S,OAAT,GAAmBI,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAnB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAACwS,YAAT,GAAwB5X,eAAe,CAACkB,sBAAsB,CAACmX,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAD,CAAvB,CAAvC;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,gBAAf,MAAqCiB,SAAzC,EAAoD;QAChDa,QAAQ,CAACsP,aAAT,GAAyBpT,iBAAiB,CAAC+W,MAAM,CAAC/U,OAAP,CAAe,gBAAf,CAAD,CAA1C;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,MAAf,MAA2BiB,SAA/B,EAA0C;QACtCa,QAAQ,CAACsS,IAAT,GAAgBW,MAAM,CAAC/U,OAAP,CAAe,MAAf,CAAhB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sBAAf,MAA2CiB,SAA/C,EAA0D;QACtDa,QAAQ,CAACC,aAAT,GAAyBgT,MAAM,CAAC/U,OAAP,CAAe,sBAAf,CAAzB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;QACvDa,QAAQ,CAACE,cAAT,GAA0B+S,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;QACrDa,QAAQ,CAACG,YAAT,GAAwB8S,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAxB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;QACvDa,QAAQ,CAACI,cAAT,GAA0B6S,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,oBAAf,MAAyCiB,SAA7C,EAAwD;QACpDa,QAAQ,CAACyS,WAAT,GAAuBzW,kBAAkB,CAACiX,MAAM,CAAC/U,OAAP,CAAe,oBAAf,CAAD,CAAzC;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;QAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAACe,YAAT,GAAwBkS,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAxB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;QACrDa,QAAQ,CAACiB,kBAAT,GAA8BgS,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAA9B;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;QAClDa,QAAQ,CAACkB,eAAT,GAA2B+R,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAA3B;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;QAClDa,QAAQ,CAACmB,eAAT,GAA2B8R,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAA3B;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;QAC/Ca,QAAQ,CAACoS,YAAT,GAAwBa,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAxB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,cAAf,MAAmCiB,SAAvC,EAAkD;QAC9Ca,QAAQ,CAACoB,WAAT,GAAuB6R,MAAM,CAAC/U,OAAP,CAAe,cAAf,CAAvB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,SAAf,MAA8BiB,SAAlC,EAA6C;QACzCa,QAAQ,CAAC0B,OAAT,GAAmB9G,eAAe,CAACkB,sBAAsB,CAACmX,MAAM,CAAC/U,OAAP,CAAe,SAAf,CAAD,CAAvB,CAAlC;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iCAAf,MAAsDiB,SAA1D,EAAqE;QACjEa,QAAQ,CAACoC,uBAAT,GAAmC6Q,MAAM,CAAC/U,OAAP,CAAe,iCAAf,CAAnC;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;QAC9Da,QAAQ,CAACkC,oBAAT,GAAgC+Q,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAAhC;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;QACjFa,QAAQ,CAACK,oBAAT,GAAgC4S,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAhC;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,+CAAf,MAAoEiB,SAAxE,EAAmF;QAC/Ea,QAAQ,CAACO,iBAAT,GAA6B0S,MAAM,CAAC/U,OAAP,CAAe,+CAAf,CAA7B;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,6CAAf,MAAkEiB,SAAtE,EAAiF;QAC7Ea,QAAQ,CAACqC,WAAT,GAAuB4Q,MAAM,CAAC/U,OAAP,CAAe,6CAAf,CAAvB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;QACjFa,QAAQ,CAACuC,gBAAT,GAA4B7G,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAD,CAA1C;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;QACrDa,QAAQ,CAACmC,YAAT,GAAwB8Q,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAxB;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;QACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,0BAAf,MAA+CiB,SAAnD,EAA8D;QAC1Da,QAAQ,CAAC2S,iBAAT,GAA6BM,MAAM,CAAC/U,OAAP,CAAe,0BAAf,CAA7B;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sBAAf,MAA2CiB,SAA/C,EAA0D;QACtDa,QAAQ,CAAC0S,UAAT,GAAsB1W,kBAAkB,CAACiX,MAAM,CAAC/U,OAAP,CAAe,sBAAf,CAAD,CAAxC;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;QACrDa,QAAQ,CAAC8S,QAAT,GAAoB9W,kBAAkB,CAACiX,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAD,CAAtC;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,wBAAf,MAA6CiB,SAAjD,EAA4D;QACxDa,QAAQ,CAAC4C,cAAT,GAA0BqQ,MAAM,CAAC/U,OAAP,CAAe,wBAAf,CAA1B;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qCAAf,MAA0DiB,SAA9D,EAAyE;QACrEa,QAAQ,CAAC6C,yBAAT,GAAqCjI,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC/U,OAAP,CAAe,qCAAf,CAAD,CAAvB,CAApD;MACH;;MACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;QAC9Da,QAAQ,CAAC+C,yBAAT,GAAqCkQ,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAArC;MACH;;MACDgF,MAAM,CAACC,IAAP,CAAY8P,MAAM,CAAC/U,OAAnB,EAA4Bsf,OAA5B,CAAoC,UAAUC,MAAV,EAAkB;QAClD,IAAIzd,QAAQ,CAACiD,QAAT,KAAsB9D,SAA1B,EAAqC;UACjCa,QAAQ,CAACiD,QAAT,GAAoB,EAApB;QACH;;QACD,IAAIwa,MAAM,CAACC,UAAP,CAAkB,aAAlB,CAAJ,EAAsC;UAClC1d,QAAQ,CAACiD,QAAT,CAAkBwa,MAAM,CAACE,SAAP,CAAiB,EAAjB,CAAlB,IAA0C1K,MAAM,CAAC/U,OAAP,CAAeuf,MAAf,CAA1C;QACH;MACJ,CAPD;MAQAlJ,IAAI,GAAGtB,MAAM,CAAC3U,IAAd;MACA0B,QAAQ,CAACuP,IAAT,GAAgBgF,IAAhB;MACA,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;IACH,CA5JiB,CAAlB;EA6JH,CA/JgG,CAAhB;AA+J5E,CA/JE;;AAgKP,IAAIud,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUtK,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,oBAAL;cAA2B,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAC3B,KAAK,qCAAL;cAA4C,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAC5C,KAAK,WAAL;cAAkB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAClB,KAAK,4BAAL;cAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAJvC;;UAMA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAI8f,gDAAgD,CAACnK,YAAD,EAAe9V,OAAf,CAApD,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAImf,uCAAuC,CAACpK,YAAD,EAAe9V,OAAf,CAA3C,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MA5BR;IA8BH,CA/BiB,CAAlB;EAgCH,CAnC8F,CAAhB;AAmC1E,CAnCL;;AAoCA,OAAO,IAAIkK,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAU7K,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6K,8CAA8C,CAAC9K,MAAD,EAAStV,OAAT,CAAlD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPkF,MAAM,EAAEhZ,SAFD;YAGPiZ,KAAK,EAAEjZ,SAHA;YAIPyT,cAAc,EAAEzT;UAJT,CAAX;;UAMA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC8D,iBAAL,KAA2B,EAA/B,EAAmC;YAC/BrY,QAAQ,CAACmY,MAAT,GAAkB,EAAlB;UACH,CAFD,MAGK,IAAI5D,IAAI,CAAC,mBAAD,CAAJ,KAA8BpV,SAA9B,IAA2CoV,IAAI,CAAC,mBAAD,CAAJ,CAA0B,OAA1B,MAAuCpV,SAAtF,EAAiG;YAClGa,QAAQ,CAACmY,MAAT,GAAkBG,4BAA4B,CAAChd,sBAAsB,CAACiZ,IAAI,CAAC,mBAAD,CAAJ,CAA0B,OAA1B,CAAD,CAAvB,EAA6D5W,OAA7D,CAA9C;UACH;;UACD,IAAI4W,IAAI,CAAC,OAAD,CAAJ,KAAkBpV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACoY,KAAT,GAAiBG,2BAA2B,CAAChE,IAAI,CAAC,OAAD,CAAL,EAAgB5W,OAAhB,CAA5C;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MA5BR;IA8BH,CA/BiB,CAAlB;EAgCH,CAlCmG,CAAhB;AAkC/E,CAlCE;;AAmCP,IAAI+d,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU9K,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,WAAL;cAAkB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAClB,KAAK,4BAAL;cAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFvC;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAI+f,uCAAuC,CAACpK,YAAD,EAAe9V,OAAf,CAA3C,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/BiG,CAAhB;AA+B7E,CA/BL;;AAgCA,OAAO,IAAIoK,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU/K,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+K,qDAAqD,CAAChL,MAAD,EAAStV,OAAT,CAAzD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPiL,QAAQ,EAAE/e,SAFH;YAGPkT,YAAY,EAAElT,SAHP;YAIPmT,IAAI,EAAEnT,SAJC;YAKPqT,YAAY,EAAErT,SALP;YAMPgf,WAAW,EAAEhf,SANN;YAOPif,UAAU,EAAEjf,SAPL;YAQPyT,cAAc,EAAEzT,SART;YASPgD,YAAY,EAAEhD,SATP;YAUP0G,SAAS,EAAE1G;UAVJ,CAAX;;UAYA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACqS,YAAT,GAAwB3W,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAD,CAAtC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;YAC/Ca,QAAQ,CAACwS,YAAT,GAAwB5X,eAAe,CAACkB,sBAAsB,CAACmX,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAD,CAAvB,CAAvC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,UAAD,CAAJ,KAAqBpV,SAAzB,EAAoC;YAChCa,QAAQ,CAACke,QAAT,GAAoBG,8BAA8B,CAAC9J,IAAI,CAAC,UAAD,CAAL,EAAmB5W,OAAnB,CAAlD;UACH;;UACD,IAAI4W,IAAI,CAAC,MAAD,CAAJ,KAAiBpV,SAArB,EAAgC;YAC5Ba,QAAQ,CAACsS,IAAT,GAAgBtX,cAAc,CAACuZ,IAAI,CAAC,MAAD,CAAL,CAA9B;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACme,WAAT,GAAuBG,8CAA8C,CAAC/J,IAAI,CAAC,aAAD,CAAL,EAAsB5W,OAAtB,CAArE;UACH;;UACD,IAAI4W,IAAI,CAAC,YAAD,CAAJ,KAAuBpV,SAA3B,EAAsC;YAClCa,QAAQ,CAACoe,UAAT,GAAsBliB,iBAAiB,CAACqY,IAAI,CAAC,YAAD,CAAL,CAAvC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAA7B,EAAwC;YACpCa,QAAQ,CAACmC,YAAT,GAAwBnH,cAAc,CAACuZ,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAjDR;IAmDH,CApDiB,CAAlB;EAqDH,CAvD0G,CAAhB;AAuDtF,CAvDE;;AAwDP,IAAIie,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUhL,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,WAAL;cAAkB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAClB,KAAK,4BAAL;cAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFvC;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAI+f,uCAAuC,CAACpK,YAAD,EAAe9V,OAAf,CAA3C,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/BwG,CAAhB;AA+BpF,CA/BL;;AAgCA,OAAO,IAAI2K,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUtL,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsL,oDAAoD,CAACvL,MAAD,EAAStV,OAAT,CAAxD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPvD,SAAS,EAAEvQ;UAFJ,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAAC0P,SAAT,GAAqB+O,yCAAyC,CAAClK,IAAD,EAAO5W,OAAP,CAA9D;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApByG,CAAhB;AAoBrF,CApBE;;AAqBP,IAAIwe,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUvL,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuG,CAAhB;AA0BnF,CA1BL;;AA2BA,OAAO,IAAI8K,uDAAuD,GAAG,SAA1DA,uDAA0D,CAAUzL,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyL,4DAA4D,CAAC1L,MAAD,EAAStV,OAAT,CAAhE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPpD,uBAAuB,EAAE1Q;UAFlB,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAAC6P,uBAAT,GAAmC+O,6CAA6C,CAACrK,IAAD,EAAO5W,OAAP,CAAhF;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApBiH,CAAhB;AAoB7F,CApBE;;AAqBP,IAAI2e,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAU1L,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B+G,CAAhB;AA0B3F,CA1BL;;AA2BA,OAAO,IAAIiL,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAU5L,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI4L,oDAAoD,CAAC7L,MAAD,EAAStV,OAAT,CAAxD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPjD,SAAS,EAAE7Q;UAFJ,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAACgQ,SAAT,GAAqB+O,yCAAyC,CAACxK,IAAD,EAAO5W,OAAP,CAA9D;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApByG,CAAhB;AAoBrF,CApBE;;AAqBP,IAAI8e,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAU7L,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuG,CAAhB;AA0BnF,CA1BL;;AA2BA,OAAO,IAAIoL,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU/L,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+L,kDAAkD,CAAChM,MAAD,EAAStV,OAAT,CAAtD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPsJ,MAAM,EAAEpd,SAFD;YAGP0G,SAAS,EAAE1G;UAHJ,CAAX;;UAKA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;UACH;;UACDN,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAACgI,MAAL,KAAgB,EAApB,EAAwB;YACpBvc,QAAQ,CAACuc,MAAT,GAAkB,EAAlB;UACH,CAFD,MAGK,IAAIhI,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAnB,IAAgCoV,IAAI,CAAC,QAAD,CAAJ,CAAe,KAAf,MAA0BpV,SAA9D,EAAyE;YAC1Ea,QAAQ,CAACuc,MAAT,GAAkBC,4BAA4B,CAAClhB,sBAAsB,CAACiZ,IAAI,CAAC,QAAD,CAAJ,CAAe,KAAf,CAAD,CAAvB,EAAgD5W,OAAhD,CAA9C;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA9BuG,CAAhB;AA8BnF,CA9BE;;AA+BP,IAAIif,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUhM,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAIsL,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUjM,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ,EAAcuU,IAAd;IACA,OAAOra,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,IAAIqV,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;QACvD,OAAO,CAAC,CAAD,EAAIiM,kDAAkD,CAAClM,MAAD,EAAStV,OAAT,CAAtD,CAAP;MACH;;MACDqC,QAAQ,GAAG;QACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;QAEP1D,IAAI,EAAEpQ,SAFC;QAGPyT,cAAc,EAAEzT;MAHT,CAAX;;MAKA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;QACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;MACH;;MACDqW,IAAI,GAAGtB,MAAM,CAAC3U,IAAd;MACA0B,QAAQ,CAACuP,IAAT,GAAgBgF,IAAhB;MACA,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;IACH,CAfiB,CAAlB;EAgBH,CAlBuG,CAAhB;AAkBnF,CAlBE;;AAmBP,IAAImf,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUlM,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAIwL,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUnM,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImM,sDAAsD,CAACpM,MAAD,EAAStV,OAAT,CAA1D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP7C,8BAA8B,EAAEjR;UAFzB,CAAX;UAIAvB,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAACoQ,8BAAT,GAA0CkP,oDAAoD,CAAC/K,IAAD,EAAO5W,OAAP,CAA9F;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAdR;IAgBH,CAjBiB,CAAlB;EAkBH,CApB2G,CAAhB;AAoBvF,CApBE;;AAqBP,IAAIqf,sDAAsD,GAAG,SAAzDA,sDAAyD,CAAUpM,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1ByG,CAAhB;AA0BrF,CA1BL;;AA2BA,OAAO,IAAI2L,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUtM,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsM,4CAA4C,CAACvM,MAAD,EAAStV,OAAT,CAAhD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBiG,CAAhB;AAiB7E,CAjBE;;AAkBP,IAAIwf,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUvM,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,UAAL;cAAiB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACjB,KAAK,2BAAL;cAAkC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFtC;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAI2hB,sCAAsC,CAAChM,YAAD,EAAe9V,OAAf,CAA1C,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/B+F,CAAhB;AA+B3E,CA/BL;;AAgCA,OAAO,IAAI8L,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUzM,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyM,4CAA4C,CAAC1M,MAAD,EAAStV,OAAT,CAAhD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPd,YAAY,EAAEhT,SAFP;YAGPygB,aAAa,EAAEzgB,SAHR;YAIPoD,gBAAgB,EAAEpD,SAJX;YAKP4B,YAAY,EAAE5B,SALP;YAMPc,aAAa,EAAEd,SANR;YAOPe,cAAc,EAAEf,SAPT;YAQPgB,YAAY,EAAEhB,SARP;YASPiB,cAAc,EAAEjB,SATT;YAUP8B,kBAAkB,EAAE9B,SAVb;YAWP+B,eAAe,EAAE/B,SAXV;YAYPgC,eAAe,EAAEhC,SAZV;YAaPmQ,aAAa,EAAEnQ,SAbR;YAcPiC,WAAW,EAAEjC,SAdN;YAePkT,YAAY,EAAElT,SAfP;YAgBPmT,IAAI,EAAEnT,SAhBC;YAiBPoT,UAAU,EAAEpT,SAjBL;YAkBPuC,OAAO,EAAEvC,SAlBF;YAmBPqT,YAAY,EAAErT,SAnBP;YAoBP8D,QAAQ,EAAE9D,SApBH;YAqBPsT,WAAW,EAAEtT,SArBN;YAsBP4D,yBAAyB,EAAE5D,SAtBpB;YAuBPyD,cAAc,EAAEzD,SAvBT;YAwBP0D,yBAAyB,EAAE1D,SAxBpB;YAyBPuT,UAAU,EAAEvT,SAzBL;YA0BPwT,iBAAiB,EAAExT,SA1BZ;YA2BPyT,cAAc,EAAEzT,SA3BT;YA4BP0T,OAAO,EAAE1T,SA5BF;YA6BPkB,oBAAoB,EAAElB,SA7Bf;YA8BPoB,iBAAiB,EAAEpB,SA9BZ;YA+BPkD,WAAW,EAAElD,SA/BN;YAgCP+C,oBAAoB,EAAE/C,SAhCf;YAiCPgD,YAAY,EAAEhD,SAjCP;YAkCP0G,SAAS,EAAE1G,SAlCJ;YAmCPiD,uBAAuB,EAAEjD;UAnClB,CAAX;;UAqCA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACqS,YAAT,GAAwB3W,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAD,CAAtC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;YAC/Ca,QAAQ,CAACmS,YAAT,GAAwBc,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAxB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAACuS,UAAT,GAAsBU,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAAtB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;YAC/Ca,QAAQ,CAAC6S,OAAT,GAAmBI,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAnB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sBAAf,MAA2CiB,SAA/C,EAA0D;YACtDa,QAAQ,CAAC4f,aAAT,GAAyB3M,MAAM,CAAC/U,OAAP,CAAe,sBAAf,CAAzB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;YAC/Ca,QAAQ,CAACwS,YAAT,GAAwB5X,eAAe,CAACkB,sBAAsB,CAACmX,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAD,CAAvB,CAAvC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,gBAAf,MAAqCiB,SAAzC,EAAoD;YAChDa,QAAQ,CAACsP,aAAT,GAAyBpT,iBAAiB,CAAC+W,MAAM,CAAC/U,OAAP,CAAe,gBAAf,CAAD,CAA1C;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sBAAf,MAA2CiB,SAA/C,EAA0D;YACtDa,QAAQ,CAACC,aAAT,GAAyBgT,MAAM,CAAC/U,OAAP,CAAe,sBAAf,CAAzB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAACE,cAAT,GAA0B+S,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACG,YAAT,GAAwB8S,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAxB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAACI,cAAT,GAA0B6S,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,MAAf,MAA2BiB,SAA/B,EAA0C;YACtCa,QAAQ,CAACsS,IAAT,GAAgBW,MAAM,CAAC/U,OAAP,CAAe,MAAf,CAAhB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,oBAAf,MAAyCiB,SAA7C,EAAwD;YACpDa,QAAQ,CAACyS,WAAT,GAAuBzW,kBAAkB,CAACiX,MAAM,CAAC/U,OAAP,CAAe,oBAAf,CAAD,CAAzC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,eAAf,MAAoCiB,SAAxC,EAAmD;YAC/Ca,QAAQ,CAACe,YAAT,GAAwBkS,MAAM,CAAC/U,OAAP,CAAe,eAAf,CAAxB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACiB,kBAAT,GAA8BgS,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAA9B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAACkB,eAAT,GAA2B+R,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAA3B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAACmB,eAAT,GAA2B8R,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAA3B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,cAAf,MAAmCiB,SAAvC,EAAkD;YAC9Ca,QAAQ,CAACoB,WAAT,GAAuB6R,MAAM,CAAC/U,OAAP,CAAe,cAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,SAAf,MAA8BiB,SAAlC,EAA6C;YACzCa,QAAQ,CAAC0B,OAAT,GAAmB9G,eAAe,CAACkB,sBAAsB,CAACmX,MAAM,CAAC/U,OAAP,CAAe,SAAf,CAAD,CAAvB,CAAlC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iCAAf,MAAsDiB,SAA1D,EAAqE;YACjEa,QAAQ,CAACoC,uBAAT,GAAmC6Q,MAAM,CAAC/U,OAAP,CAAe,iCAAf,CAAnC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAACkC,oBAAT,GAAgC+Q,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACK,oBAAT,GAAgC4S,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,+CAAf,MAAoEiB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAACO,iBAAT,GAA6B0S,MAAM,CAAC/U,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,6CAAf,MAAkEiB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACqC,WAAT,GAAuB4Q,MAAM,CAAC/U,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACuC,gBAAT,GAA4B7G,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACmC,YAAT,GAAwB8Q,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAxB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,0BAAf,MAA+CiB,SAAnD,EAA8D;YAC1Da,QAAQ,CAAC2S,iBAAT,GAA6BM,MAAM,CAAC/U,OAAP,CAAe,0BAAf,CAA7B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sBAAf,MAA2CiB,SAA/C,EAA0D;YACtDa,QAAQ,CAAC0S,UAAT,GAAsB1W,kBAAkB,CAACiX,MAAM,CAAC/U,OAAP,CAAe,sBAAf,CAAD,CAAxC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,wBAAf,MAA6CiB,SAAjD,EAA4D;YACxDa,QAAQ,CAAC4C,cAAT,GAA0BqQ,MAAM,CAAC/U,OAAP,CAAe,wBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qCAAf,MAA0DiB,SAA9D,EAAyE;YACrEa,QAAQ,CAAC6C,yBAAT,GAAqCjI,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC/U,OAAP,CAAe,qCAAf,CAAD,CAAvB,CAApD;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC+C,yBAAT,GAAqCkQ,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAArC;UACH;;UACDgF,MAAM,CAACC,IAAP,CAAY8P,MAAM,CAAC/U,OAAnB,EAA4Bsf,OAA5B,CAAoC,UAAUC,MAAV,EAAkB;YAClD,IAAIzd,QAAQ,CAACiD,QAAT,KAAsB9D,SAA1B,EAAqC;cACjCa,QAAQ,CAACiD,QAAT,GAAoB,EAApB;YACH;;YACD,IAAIwa,MAAM,CAACC,UAAP,CAAkB,aAAlB,CAAJ,EAAsC;cAClC1d,QAAQ,CAACiD,QAAT,CAAkBwa,MAAM,CAACE,SAAP,CAAiB,EAAjB,CAAlB,IAA0C1K,MAAM,CAAC/U,OAAP,CAAeuf,MAAf,CAA1C;YACH;UACJ,CAPD;UAQA,OAAO,CAAC,CAAD,EAAInK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAxJR;IA0JH,CA3JiB,CAAlB;EA4JH,CA9JiG,CAAhB;AA8J7E,CA9JE;;AA+JP,IAAI2f,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAU1M,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,UAAL;cAAiB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACjB,KAAK,2BAAL;cAAkC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFtC;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAI2hB,sCAAsC,CAAChM,YAAD,EAAe9V,OAAf,CAA1C,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/B+F,CAAhB;AA+B3E,CA/BL;;AAgCA,OAAO,IAAIiM,8DAA8D,GAAG,SAAjEA,8DAAiE,CAAU5M,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1J,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI4M,mEAAmE,CAAC7M,MAAD,EAAStV,OAAT,CAAvE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP8M,0BAA0B,EAAE5gB,SAFrB;YAGPiL,iBAAiB,EAAEjL,SAHZ;YAIP6gB,WAAW,EAAE7gB,SAJN;YAKP8gB,qBAAqB,EAAE9gB;UALhB,CAAX;UAOAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAClI,sBAAL,KAAgC,EAApC,EAAwC;YACpCrM,QAAQ,CAAC+f,0BAAT,GAAsC,EAAtC;UACH,CAFD,MAGK,IAAIxL,IAAI,CAAC,wBAAD,CAAJ,KAAmCpV,SAAvC,EAAkD;YACnDa,QAAQ,CAAC+f,0BAAT,GAAsCG,gDAAgD,CAAC5kB,sBAAsB,CAACiZ,IAAI,CAAC,wBAAD,CAAL,CAAvB,EAAyD5W,OAAzD,CAAtF;UACH;;UACD,IAAI4W,IAAI,CAAC,mBAAD,CAAJ,KAA8BpV,SAAlC,EAA6C;YACzCa,QAAQ,CAACoK,iBAAT,GAA6BpP,cAAc,CAACuZ,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAAC6Y,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,uBAAD,CAAJ,KAAkCpV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACigB,qBAAT,GAAiCjlB,cAAc,CAACuZ,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCwH,CAAhB;AAsCpG,CAtCE;;AAuCP,IAAI8f,mEAAmE,GAAG,SAAtEA,mEAAsE,CAAU7M,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BsH,CAAhB;AA0BlG,CA1BL;;AA2BA,OAAO,IAAIuM,uEAAuE,GAAG,SAA1EA,uEAA0E,CAAUlN,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnK,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkN,4EAA4E,CAACnN,MAAD,EAAStV,OAAT,CAAhF,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP7I,iBAAiB,EAAEjL,SAFZ;YAGPkhB,mCAAmC,EAAElhB,SAH9B;YAIP6gB,WAAW,EAAE7gB,SAJN;YAKP8gB,qBAAqB,EAAE9gB;UALhB,CAAX;UAOAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,mBAAD,CAAJ,KAA8BpV,SAAlC,EAA6C;YACzCa,QAAQ,CAACoK,iBAAT,GAA6BpP,cAAc,CAACuZ,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAACzH,+BAAL,KAAyC,EAA7C,EAAiD;YAC7C9M,QAAQ,CAACqgB,mCAAT,GAA+C,EAA/C;UACH,CAFD,MAGK,IAAI9L,IAAI,CAAC,iCAAD,CAAJ,KAA4CpV,SAAhD,EAA2D;YAC5Da,QAAQ,CAACqgB,mCAAT,GAA+CC,yDAAyD,CAAChlB,sBAAsB,CAACiZ,IAAI,CAAC,iCAAD,CAAL,CAAvB,EAAkE5W,OAAlE,CAAxG;UACH;;UACD,IAAI4W,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAAC6Y,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,uBAAD,CAAJ,KAAkCpV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACigB,qBAAT,GAAiCjlB,cAAc,CAACuZ,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCiI,CAAhB;AAsC7G,CAtCE;;AAuCP,IAAIogB,4EAA4E,GAAG,SAA/EA,4EAA+E,CAAUnN,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjK,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B+H,CAAhB;AA0B3G,CA1BL;;AA2BA,OAAO,IAAI2M,8DAA8D,GAAG,SAAjEA,8DAAiE,CAAUtN,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1J,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIsN,mEAAmE,CAACvN,MAAD,EAAStV,OAAT,CAAvE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP7I,iBAAiB,EAAEjL,SAFZ;YAGPshB,0BAA0B,EAAEthB,SAHrB;YAIP6gB,WAAW,EAAE7gB,SAJN;YAKP8gB,qBAAqB,EAAE9gB;UALhB,CAAX;UAOAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,mBAAD,CAAJ,KAA8BpV,SAAlC,EAA6C;YACzCa,QAAQ,CAACoK,iBAAT,GAA6BpP,cAAc,CAACuZ,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAACtH,sBAAL,KAAgC,EAApC,EAAwC;YACpCjN,QAAQ,CAACygB,0BAAT,GAAsC,EAAtC;UACH,CAFD,MAGK,IAAIlM,IAAI,CAAC,wBAAD,CAAJ,KAAmCpV,SAAvC,EAAkD;YACnDa,QAAQ,CAACygB,0BAAT,GAAsCC,gDAAgD,CAACplB,sBAAsB,CAACiZ,IAAI,CAAC,wBAAD,CAAL,CAAvB,EAAyD5W,OAAzD,CAAtF;UACH;;UACD,IAAI4W,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAAC6Y,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,uBAAD,CAAJ,KAAkCpV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACigB,qBAAT,GAAiCjlB,cAAc,CAACuZ,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCwH,CAAhB;AAsCpG,CAtCE;;AAuCP,IAAIwgB,mEAAmE,GAAG,SAAtEA,mEAAsE,CAAUvN,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BsH,CAAhB;AA0BlG,CA1BL;;AA2BA,OAAO,IAAI+M,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAU1N,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI0N,iEAAiE,CAAC3N,MAAD,EAAStV,OAAT,CAArE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP7I,iBAAiB,EAAEjL,SAFZ;YAGP6gB,WAAW,EAAE7gB,SAHN;YAIP0hB,wBAAwB,EAAE1hB,SAJnB;YAKP8gB,qBAAqB,EAAE9gB;UALhB,CAAX;UAOAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,mBAAD,CAAJ,KAA8BpV,SAAlC,EAA6C;YACzCa,QAAQ,CAACoK,iBAAT,GAA6BpP,cAAc,CAACuZ,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAAC6Y,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC7G,oBAAL,KAA8B,EAAlC,EAAsC;YAClC1N,QAAQ,CAAC6gB,wBAAT,GAAoC,EAApC;UACH,CAFD,MAGK,IAAItM,IAAI,CAAC,sBAAD,CAAJ,KAAiCpV,SAArC,EAAgD;YACjDa,QAAQ,CAAC6gB,wBAAT,GAAoCC,8CAA8C,CAACxlB,sBAAsB,CAACiZ,IAAI,CAAC,sBAAD,CAAL,CAAvB,EAAuD5W,OAAvD,CAAlF;UACH;;UACD,IAAI4W,IAAI,CAAC,uBAAD,CAAJ,KAAkCpV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACigB,qBAAT,GAAiCjlB,cAAc,CAACuZ,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAhCR;IAkCH,CAnCiB,CAAlB;EAoCH,CAtCsH,CAAhB;AAsClG,CAtCE;;AAuCP,IAAI4gB,iEAAiE,GAAG,SAApEA,iEAAoE,CAAU3N,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BoH,CAAhB;AA0BhG,CA1BL;;AA2BA,OAAO,IAAImN,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAU9N,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI8N,6CAA6C,CAAC/N,MAAD,EAAStV,OAAT,CAAjD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPgO,OAAO,EAAE9hB,SAFF;YAGPiZ,KAAK,EAAEjZ;UAHA,CAAX;UAKAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC0M,OAAL,KAAiB,EAArB,EAAyB;YACrBjhB,QAAQ,CAACihB,OAAT,GAAmB,EAAnB;UACH,CAFD,MAGK,IAAI1M,IAAI,CAAC,SAAD,CAAJ,KAAoBpV,SAApB,IAAiCoV,IAAI,CAAC,SAAD,CAAJ,CAAgB,QAAhB,MAA8BpV,SAAnE,EAA8E;YAC/Ea,QAAQ,CAACihB,OAAT,GAAmBC,6BAA6B,CAAC5lB,sBAAsB,CAACiZ,IAAI,CAAC,SAAD,CAAJ,CAAgB,QAAhB,CAAD,CAAvB,EAAoD5W,OAApD,CAAhD;UACH;;UACD,IAAI4W,IAAI,CAAC,OAAD,CAAJ,KAAkBpV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACoY,KAAT,GAAiBG,2BAA2B,CAAChE,IAAI,CAAC,OAAD,CAAL,EAAgB5W,OAAhB,CAA5C;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA9BkG,CAAhB;AA8B9E,CA9BE;;AA+BP,IAAIghB,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU/N,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BgG,CAAhB;AA0B5E,CA1BL;;AA2BA,OAAO,IAAIuN,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUlO,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkO,sDAAsD,CAACnO,MAAD,EAAStV,OAAT,CAA1D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP/T,MAAM,EAAEC,SAFD;YAGPkiB,cAAc,EAAEliB,SAHT;YAIPuL,SAAS,EAAEvL,SAJJ;YAKPyL,YAAY,EAAEzL,SALP;YAMP6gB,WAAW,EAAE7gB,SANN;YAOP0L,SAAS,EAAE1L,SAPJ;YAQP2L,UAAU,EAAE3L,SARL;YASPmiB,aAAa,EAAEniB,SATR;YAUPoiB,kBAAkB,EAAEpiB,SAVb;YAWP4L,MAAM,EAAE5L,SAXD;YAYP8L,cAAc,EAAE9L,SAZT;YAaPqiB,OAAO,EAAEriB;UAbF,CAAX;UAeAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACd,MAAT,GAAkBlE,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC8M,cAAL,KAAwB,EAA5B,EAAgC;YAC5BrhB,QAAQ,CAACqhB,cAAT,GAA0B,EAA1B;UACH,CAFD,MAGK,IAAI9M,IAAI,CAAC,gBAAD,CAAJ,KAA2BpV,SAA/B,EAA0C;YAC3Ca,QAAQ,CAACqhB,cAAT,GAA0BI,sCAAsC,CAACnmB,sBAAsB,CAACiZ,IAAI,CAAC,gBAAD,CAAL,CAAvB,EAAiD5W,OAAjD,CAAhE;UACH;;UACD,IAAI4W,IAAI,CAAC,WAAD,CAAJ,KAAsBpV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC0K,SAAT,GAAqB1P,cAAc,CAACuZ,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAA7B,EAAwC;YACpCa,QAAQ,CAAC4K,YAAT,GAAwB5P,cAAc,CAACuZ,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAAC6Y,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,WAAD,CAAJ,KAAsBpV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC6K,SAAT,GAAqB7P,cAAc,CAACuZ,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,YAAD,CAAJ,KAAuBpV,SAA3B,EAAsC;YAClCa,QAAQ,CAAC8K,UAAT,GAAsB9O,kBAAkB,CAACuY,IAAI,CAAC,YAAD,CAAL,CAAxC;UACH;;UACD,IAAIA,IAAI,CAAC,eAAD,CAAJ,KAA0BpV,SAA9B,EAAyC;YACrCa,QAAQ,CAACshB,aAAT,GAAyBtmB,cAAc,CAACuZ,IAAI,CAAC,eAAD,CAAL,CAAvC;UACH;;UACD,IAAIA,IAAI,CAAC,oBAAD,CAAJ,KAA+BpV,SAAnC,EAA8C;YAC1Ca,QAAQ,CAACuhB,kBAAT,GAA8BvmB,cAAc,CAACuZ,IAAI,CAAC,oBAAD,CAAL,CAA5C;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,gBAAD,CAAJ,KAA2BpV,SAA/B,EAA0C;YACtCa,QAAQ,CAACiL,cAAT,GAA0BjQ,cAAc,CAACuZ,IAAI,CAAC,gBAAD,CAAL,CAAxC;UACH;;UACD,IAAIA,IAAI,CAACmN,MAAL,KAAgB,EAApB,EAAwB;YACpB1hB,QAAQ,CAACwhB,OAAT,GAAmB,EAAnB;UACH,CAFD,MAGK,IAAIjN,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YACnCa,QAAQ,CAACwhB,OAAT,GAAmBG,yCAAyC,CAACrmB,sBAAsB,CAACiZ,IAAI,CAAC,QAAD,CAAL,CAAvB,EAAyC5W,OAAzC,CAA5D;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAnER;IAqEH,CAtEiB,CAAlB;EAuEH,CAzE2G,CAAhB;AAyEvF,CAzEE;;AA0EP,IAAIohB,sDAAsD,GAAG,SAAzDA,sDAAyD,CAAUnO,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1ByG,CAAhB;AA0BrF,CA1BL;;AA2BA,OAAO,IAAIgO,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAU3O,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2O,6CAA6C,CAAC5O,MAAD,EAAStV,OAAT,CAAjD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPoO,cAAc,EAAEliB,SAFT;YAGP2iB,QAAQ,EAAE3iB,SAHH;YAIPuL,SAAS,EAAEvL,SAJJ;YAKPyL,YAAY,EAAEzL,SALP;YAMP6gB,WAAW,EAAE7gB,SANN;YAOPgM,MAAM,EAAEhM,SAPD;YAQPkM,OAAO,EAAElM,SARF;YASP4iB,IAAI,EAAE5iB,SATC;YAUP6iB,UAAU,EAAE7iB,SAVL;YAWP4L,MAAM,EAAE5L;UAXD,CAAX;UAaAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC8M,cAAL,KAAwB,EAA5B,EAAgC;YAC5BrhB,QAAQ,CAACqhB,cAAT,GAA0B,EAA1B;UACH,CAFD,MAGK,IAAI9M,IAAI,CAAC,gBAAD,CAAJ,KAA2BpV,SAA/B,EAA0C;YAC3Ca,QAAQ,CAACqhB,cAAT,GAA0BI,sCAAsC,CAACnmB,sBAAsB,CAACiZ,IAAI,CAAC,gBAAD,CAAL,CAAvB,EAAiD5W,OAAjD,CAAhE;UACH;;UACD,IAAI4W,IAAI,CAACuN,QAAL,KAAkB,EAAtB,EAA0B;YACtB9hB,QAAQ,CAAC8hB,QAAT,GAAoB,EAApB;UACH,CAFD,MAGK,IAAIvN,IAAI,CAAC,UAAD,CAAJ,KAAqBpV,SAAzB,EAAoC;YACrCa,QAAQ,CAAC8hB,QAAT,GAAoBG,gCAAgC,CAAC3mB,sBAAsB,CAACiZ,IAAI,CAAC,UAAD,CAAL,CAAvB,EAA2C5W,OAA3C,CAApD;UACH;;UACD,IAAI4W,IAAI,CAAC,WAAD,CAAJ,KAAsBpV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC0K,SAAT,GAAqB1P,cAAc,CAACuZ,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAA7B,EAAwC;YACpCa,QAAQ,CAAC4K,YAAT,GAAwB5P,cAAc,CAACuZ,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAAC6Y,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACmL,MAAT,GAAkBnQ,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoBpV,SAAxB,EAAmC;YAC/Ba,QAAQ,CAACqL,OAAT,GAAmBrP,kBAAkB,CAACuY,IAAI,CAAC,SAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiBpV,SAArB,EAAgC;YAC5Ba,QAAQ,CAAC+hB,IAAT,GAAgB/mB,cAAc,CAACuZ,IAAI,CAAC,MAAD,CAAL,CAA9B;UACH;;UACD,IAAIA,IAAI,CAAC,YAAD,CAAJ,KAAuBpV,SAA3B,EAAsC;YAClCa,QAAQ,CAACgiB,UAAT,GAAsBhnB,cAAc,CAACuZ,IAAI,CAAC,YAAD,CAAL,CAApC;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MA3DR;IA6DH,CA9DiB,CAAlB;EA+DH,CAjEkG,CAAhB;AAiE9E,CAjEE;;AAkEP,IAAI6hB,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU5O,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,cAAL;cAAqB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACrB,KAAK,+BAAL;cAAsC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAF1C;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIokB,0CAA0C,CAACzO,YAAD,EAAe9V,OAAf,CAA9C,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/BgG,CAAhB;AA+B5E,CA/BL;;AAgCA,OAAO,IAAIuO,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUlP,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIkP,+CAA+C,CAACnP,MAAD,EAAStV,OAAT,CAAnD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPoO,cAAc,EAAEliB,SAFT;YAGP2iB,QAAQ,EAAE3iB,SAHH;YAIPiL,iBAAiB,EAAEjL,SAJZ;YAKPuL,SAAS,EAAEvL,SALJ;YAMPyL,YAAY,EAAEzL,SANP;YAOP6gB,WAAW,EAAE7gB,SAPN;YAQPkjB,QAAQ,EAAEljB,SARH;YASPkM,OAAO,EAAElM,SATF;YAUP4iB,IAAI,EAAE5iB,SAVC;YAWP8gB,qBAAqB,EAAE9gB,SAXhB;YAYP4L,MAAM,EAAE5L,SAZD;YAaPqM,UAAU,EAAErM;UAbL,CAAX;UAeAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC8M,cAAL,KAAwB,EAA5B,EAAgC;YAC5BrhB,QAAQ,CAACqhB,cAAT,GAA0B,EAA1B;UACH,CAFD,MAGK,IAAI9M,IAAI,CAAC,gBAAD,CAAJ,KAA2BpV,SAA/B,EAA0C;YAC3Ca,QAAQ,CAACqhB,cAAT,GAA0BI,sCAAsC,CAACnmB,sBAAsB,CAACiZ,IAAI,CAAC,gBAAD,CAAL,CAAvB,EAAiD5W,OAAjD,CAAhE;UACH;;UACD,IAAI4W,IAAI,CAACuN,QAAL,KAAkB,EAAtB,EAA0B;YACtB9hB,QAAQ,CAAC8hB,QAAT,GAAoB,EAApB;UACH,CAFD,MAGK,IAAIvN,IAAI,CAAC,UAAD,CAAJ,KAAqBpV,SAAzB,EAAoC;YACrCa,QAAQ,CAAC8hB,QAAT,GAAoBG,gCAAgC,CAAC3mB,sBAAsB,CAACiZ,IAAI,CAAC,UAAD,CAAL,CAAvB,EAA2C5W,OAA3C,CAApD;UACH;;UACD,IAAI4W,IAAI,CAAC,mBAAD,CAAJ,KAA8BpV,SAAlC,EAA6C;YACzCa,QAAQ,CAACoK,iBAAT,GAA6BpP,cAAc,CAACuZ,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAAC,WAAD,CAAJ,KAAsBpV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC0K,SAAT,GAAqB1P,cAAc,CAACuZ,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAA7B,EAAwC;YACpCa,QAAQ,CAAC4K,YAAT,GAAwB5P,cAAc,CAACuZ,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAAC6Y,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBpV,SAAzB,EAAoC;YAChCa,QAAQ,CAACqiB,QAAT,GAAoBrmB,kBAAkB,CAACuY,IAAI,CAAC,UAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoBpV,SAAxB,EAAmC;YAC/Ba,QAAQ,CAACqL,OAAT,GAAmBrP,kBAAkB,CAACuY,IAAI,CAAC,SAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiBpV,SAArB,EAAgC;YAC5Ba,QAAQ,CAAC+hB,IAAT,GAAgB/mB,cAAc,CAACuZ,IAAI,CAAC,MAAD,CAAL,CAA9B;UACH;;UACD,IAAIA,IAAI,CAAC,uBAAD,CAAJ,KAAkCpV,SAAtC,EAAiD;YAC7Ca,QAAQ,CAACigB,qBAAT,GAAiCjlB,cAAc,CAACuZ,IAAI,CAAC,uBAAD,CAAL,CAA/C;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,YAAD,CAAJ,KAAuBpV,SAA3B,EAAsC;YAClCa,QAAQ,CAACwL,UAAT,GAAsBxQ,cAAc,CAACuZ,IAAI,CAAC,YAAD,CAAL,CAApC;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAnER;IAqEH,CAtEiB,CAAlB;EAuEH,CAzEoG,CAAhB;AAyEhF,CAzEE;;AA0EP,IAAIoiB,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUnP,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,cAAL;cAAqB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACrB,KAAK,+BAAL;cAAsC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAF1C;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAIokB,0CAA0C,CAACzO,YAAD,EAAe9V,OAAf,CAA9C,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/BkG,CAAhB;AA+B9E,CA/BL;;AAgCA,OAAO,IAAI0O,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUrP,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqP,oDAAoD,CAACtP,MAAD,EAAStV,OAAT,CAAxD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPoO,cAAc,EAAEliB,SAFT;YAGPqjB,aAAa,EAAErjB,SAHR;YAIPuL,SAAS,EAAEvL,SAJJ;YAKPyL,YAAY,EAAEzL,SALP;YAMP6gB,WAAW,EAAE7gB,SANN;YAOP0L,SAAS,EAAE1L,SAPJ;YAQPkM,OAAO,EAAElM,SARF;YASP4iB,IAAI,EAAE5iB,SATC;YAUPmiB,aAAa,EAAEniB,SAVR;YAWPsjB,mBAAmB,EAAEtjB,SAXd;YAYP4L,MAAM,EAAE5L,SAZD;YAaPwM,eAAe,EAAExM,SAbV;YAcPujB,QAAQ,EAAEvjB;UAdH,CAAX;UAgBAvB,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC8M,cAAL,KAAwB,EAA5B,EAAgC;YAC5BrhB,QAAQ,CAACqhB,cAAT,GAA0B,EAA1B;UACH,CAFD,MAGK,IAAI9M,IAAI,CAAC,gBAAD,CAAJ,KAA2BpV,SAA/B,EAA0C;YAC3Ca,QAAQ,CAACqhB,cAAT,GAA0BI,sCAAsC,CAACnmB,sBAAsB,CAACiZ,IAAI,CAAC,gBAAD,CAAL,CAAvB,EAAiD5W,OAAjD,CAAhE;UACH;;UACD,IAAI4W,IAAI,CAAClC,YAAL,KAAsB,EAA1B,EAA8B;YAC1BrS,QAAQ,CAACwiB,aAAT,GAAyB,EAAzB;UACH,CAFD,MAGK,IAAIjO,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAA7B,EAAwC;YACzCa,QAAQ,CAACwiB,aAAT,GAAyBG,mCAAmC,CAACrnB,sBAAsB,CAACiZ,IAAI,CAAC,cAAD,CAAL,CAAvB,EAA+C5W,OAA/C,CAA5D;UACH;;UACD,IAAI4W,IAAI,CAAC,WAAD,CAAJ,KAAsBpV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC0K,SAAT,GAAqB1P,cAAc,CAACuZ,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAA7B,EAAwC;YACpCa,QAAQ,CAAC4K,YAAT,GAAwB5P,cAAc,CAACuZ,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAAC6Y,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,WAAD,CAAJ,KAAsBpV,SAA1B,EAAqC;YACjCa,QAAQ,CAAC6K,SAAT,GAAqB7P,cAAc,CAACuZ,IAAI,CAAC,WAAD,CAAL,CAAnC;UACH;;UACD,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoBpV,SAAxB,EAAmC;YAC/Ba,QAAQ,CAACqL,OAAT,GAAmBrP,kBAAkB,CAACuY,IAAI,CAAC,SAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiBpV,SAArB,EAAgC;YAC5Ba,QAAQ,CAAC+hB,IAAT,GAAgB/mB,cAAc,CAACuZ,IAAI,CAAC,MAAD,CAAL,CAA9B;UACH;;UACD,IAAIA,IAAI,CAAC,eAAD,CAAJ,KAA0BpV,SAA9B,EAAyC;YACrCa,QAAQ,CAACshB,aAAT,GAAyBtmB,cAAc,CAACuZ,IAAI,CAAC,eAAD,CAAL,CAAvC;UACH;;UACD,IAAIA,IAAI,CAAC,qBAAD,CAAJ,KAAgCpV,SAApC,EAA+C;YAC3Ca,QAAQ,CAACyiB,mBAAT,GAA+BznB,cAAc,CAACuZ,IAAI,CAAC,qBAAD,CAAL,CAA7C;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,iBAAD,CAAJ,KAA4BpV,SAAhC,EAA2C;YACvCa,QAAQ,CAAC2L,eAAT,GAA2B3Q,cAAc,CAACuZ,IAAI,CAAC,iBAAD,CAAL,CAAzC;UACH;;UACD,IAAIA,IAAI,CAACqO,OAAL,KAAiB,EAArB,EAAyB;YACrB5iB,QAAQ,CAAC0iB,QAAT,GAAoB,EAApB;UACH,CAFD,MAGK,IAAInO,IAAI,CAAC,SAAD,CAAJ,KAAoBpV,SAAxB,EAAmC;YACpCa,QAAQ,CAAC0iB,QAAT,GAAoBG,uCAAuC,CAACvnB,sBAAsB,CAACiZ,IAAI,CAAC,SAAD,CAAL,CAAvB,EAA0C5W,OAA1C,CAA3D;UACH;;UACD,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MA1ER;IA4EH,CA7EiB,CAAlB;EA8EH,CAhFyG,CAAhB;AAgFrF,CAhFE;;AAiFP,IAAIuiB,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUtP,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuG,CAAhB;AA0BnF,CA1BL;;AA2BA,OAAO,IAAIkP,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAU7P,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB,EAAwBE,EAAxB;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6P,2CAA2C,CAAC9P,MAAD,EAAStV,OAAT,CAA/C,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPqC,SAAS,EAAEnW,SAFJ;YAGPoW,WAAW,EAAEpW,SAHN;YAIPD,MAAM,EAAEC,SAJD;YAKP6B,iBAAiB,EAAE7B,SALZ;YAMP6jB,SAAS,EAAE7jB,SANJ;YAOP6gB,WAAW,EAAE7gB,SAPN;YAQPI,GAAG,EAAEJ,SARE;YASPiK,QAAQ,EAAEjK,SATH;YAUP8jB,oBAAoB,EAAE9jB,SAVf;YAWPiZ,KAAK,EAAEjZ,SAXA;YAYPkK,gBAAgB,EAAElK,SAZX;YAaP+jB,KAAK,EAAE/jB,SAbA;YAcPyT,cAAc,EAAEzT,SAdT;YAePgD,YAAY,EAAEhD,SAfP;YAgBPS,QAAQ,EAAET;UAhBH,CAAX;;UAkBA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAACsV,SAAT,GAAqB1a,eAAe,CAACkB,sBAAsB,CAACmX,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAAD,CAAvB,CAApC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACuV,WAAT,GAAuBtC,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAGhD,eAAL;UACAkD,EAAE,GAAGhD,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACiW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACxV,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAD,EAAgC,MAAhC,CAAjB,CAAP;;UACA,IAAI6V,IAAI,CAAC,QAAD,CAAJ,KAAmBpV,SAAvB,EAAkC;YAC9Ba,QAAQ,CAACd,MAAT,GAAkBlE,cAAc,CAACuZ,IAAI,CAAC,QAAD,CAAL,CAAhC;UACH;;UACD,IAAIA,IAAI,CAAC,mBAAD,CAAJ,KAA8BpV,SAAlC,EAA6C;YACzCa,QAAQ,CAACgB,iBAAT,GAA6BhG,cAAc,CAACuZ,IAAI,CAAC,mBAAD,CAAL,CAA3C;UACH;;UACD,IAAIA,IAAI,CAAC,WAAD,CAAJ,KAAsBpV,SAA1B,EAAqC;YACjCa,QAAQ,CAACgjB,SAAT,GAAqBG,+BAA+B,CAAC5O,IAAI,CAAC,WAAD,CAAL,EAAoB5W,OAApB,CAApD;UACH;;UACD,IAAI4W,IAAI,CAAC,aAAD,CAAJ,KAAwBpV,SAA5B,EAAuC;YACnCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAAC6Y,IAAI,CAAC,aAAD,CAAL,CAArC;UACH;;UACD,IAAIA,IAAI,CAAC,KAAD,CAAJ,KAAgBpV,SAApB,EAA+B;YAC3Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACuZ,IAAI,CAAC,KAAD,CAAL,CAA7B;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBpV,SAAzB,EAAoC;YAChCa,QAAQ,CAACoJ,QAAT,GAAoBpN,kBAAkB,CAACuY,IAAI,CAAC,UAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,sBAAD,CAAJ,KAAiCpV,SAArC,EAAgD;YAC5Ca,QAAQ,CAACijB,oBAAT,GAAgCjoB,cAAc,CAACuZ,IAAI,CAAC,sBAAD,CAAL,CAA9C;UACH;;UACD,IAAIA,IAAI,CAAC,OAAD,CAAJ,KAAkBpV,SAAtB,EAAiC;YAC7Ba,QAAQ,CAACoY,KAAT,GAAiBG,2BAA2B,CAAChE,IAAI,CAAC,OAAD,CAAL,EAAgB5W,OAAhB,CAA5C;UACH;;UACD,IAAI4W,IAAI,CAAC,kBAAD,CAAJ,KAA6BpV,SAAjC,EAA4C;YACxCa,QAAQ,CAACqJ,gBAAT,GAA4BrO,cAAc,CAACuZ,IAAI,CAAC,kBAAD,CAAL,CAA1C;UACH;;UACD,IAAIA,IAAI,CAAC6O,IAAL,KAAc,EAAlB,EAAsB;YAClBpjB,QAAQ,CAACkjB,KAAT,GAAiB,EAAjB;UACH,CAFD,MAGK,IAAI3O,IAAI,CAAC,MAAD,CAAJ,KAAiBpV,SAArB,EAAgC;YACjCa,QAAQ,CAACkjB,KAAT,GAAiBG,2BAA2B,CAAC/nB,sBAAsB,CAACiZ,IAAI,CAAC,MAAD,CAAL,CAAvB,EAAuC5W,OAAvC,CAA5C;UACH;;UACD,IAAI4W,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAA7B,EAAwC;YACpCa,QAAQ,CAACmC,YAAT,GAAwBnH,cAAc,CAACuZ,IAAI,CAAC,cAAD,CAAL,CAAtC;UACH;;UACD,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBpV,SAAzB,EAAoC;YAChCa,QAAQ,CAACJ,QAAT,GAAoB5E,cAAc,CAACuZ,IAAI,CAAC,UAAD,CAAL,CAAlC;UACH;;UACD,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MA5ER;IA8EH,CA/EiB,CAAlB;EAgFH,CAlFgG,CAAhB;AAkF5E,CAlFE;;AAmFP,IAAI+iB,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAU9P,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B8F,CAAhB;AA0B1E,CA1BL;;AA2BA,OAAO,IAAI0P,6DAA6D,GAAG,SAAhEA,6DAAgE,CAAUrQ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqQ,kEAAkE,CAACtQ,MAAD,EAAStV,OAAT,CAAtE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuH,CAAhB;AAiBnG,CAjBE;;AAkBP,IAAIujB,kEAAkE,GAAG,SAArEA,kEAAqE,CAAUtQ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqH,CAAhB;AA0BjG,CA1BL;;AA2BA,OAAO,IAAI4P,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUvQ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuQ,8CAA8C,CAACxQ,MAAD,EAAStV,OAAT,CAAlD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBmG,CAAhB;AAiB/E,CAjBE;;AAkBP,IAAIyjB,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUxQ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BiG,CAAhB;AA0B7E,CA1BL;;AA2BA,OAAO,IAAI8P,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUzQ,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyQ,iEAAiE,CAAC1Q,MAAD,EAAStV,OAAT,CAArE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBsH,CAAhB;AAiBlG,CAjBE;;AAkBP,IAAI2jB,iEAAiE,GAAG,SAApEA,iEAAoE,CAAU1Q,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BoH,CAAhB;AA0BhG,CA1BL;;AA2BA,OAAO,IAAIgQ,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAU3Q,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2Q,+CAA+C,CAAC5Q,MAAD,EAAStV,OAAT,CAAnD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBoG,CAAhB;AAiBhF,CAjBE;;AAkBP,IAAI6jB,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAU5Q,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BkG,CAAhB;AA0B9E,CA1BL;;AA2BA,OAAO,IAAIkQ,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU7Q,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6Q,qDAAqD,CAAC9Q,MAAD,EAAStV,OAAT,CAAzD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB0G,CAAhB;AAiBtF,CAjBE;;AAkBP,IAAI+jB,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAU9Q,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BwG,CAAhB;AA0BpF,CA1BL;;AA2BA,OAAO,IAAIoQ,qEAAqE,GAAG,SAAxEA,qEAAwE,CAAU/Q,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjK,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+Q,0EAA0E,CAAChR,MAAD,EAAStV,OAAT,CAA9E,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB+H,CAAhB;AAiB3G,CAjBE;;AAkBP,IAAIikB,0EAA0E,GAAG,SAA7EA,0EAA6E,CAAUhR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/J,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B6H,CAAhB;AA0BzG,CA1BL;;AA2BA,OAAO,IAAIsQ,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUjR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiR,iEAAiE,CAAClR,MAAD,EAAStV,OAAT,CAArE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBsH,CAAhB;AAiBlG,CAjBE;;AAkBP,IAAImkB,iEAAiE,GAAG,SAApEA,iEAAoE,CAAUlR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BoH,CAAhB;AA0BhG,CA1BL;;AA2BA,OAAO,IAAIwQ,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUnR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImR,iEAAiE,CAACpR,MAAD,EAAStV,OAAT,CAArE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBsH,CAAhB;AAiBlG,CAjBE;;AAkBP,IAAIqkB,iEAAiE,GAAG,SAApEA,iEAAoE,CAAUpR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BoH,CAAhB;AA0BhG,CA1BL;;AA2BA,OAAO,IAAI0Q,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUrR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqR,kDAAkD,CAACtR,MAAD,EAAStV,OAAT,CAAtD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuG,CAAhB;AAiBnF,CAjBE;;AAkBP,IAAIukB,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUtR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAI4Q,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAUvR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuR,+DAA+D,CAACxR,MAAD,EAAStV,OAAT,CAAnE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBoH,CAAhB;AAiBhG,CAjBE;;AAkBP,IAAIykB,+DAA+D,GAAG,SAAlEA,+DAAkE,CAAUxR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BkH,CAAhB;AA0B9F,CA1BL;;AA2BA,OAAO,IAAI8Q,+DAA+D,GAAG,SAAlEA,+DAAkE,CAAUzR,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3J,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyR,oEAAoE,CAAC1R,MAAD,EAAStV,OAAT,CAAxE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjByH,CAAhB;AAiBrG,CAjBE;;AAkBP,IAAI2kB,oEAAoE,GAAG,SAAvEA,oEAAuE,CAAU1R,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuH,CAAhB;AA0BnG,CA1BL;;AA2BA,OAAO,IAAIgR,uDAAuD,GAAG,SAA1DA,uDAA0D,CAAU3R,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2R,4DAA4D,CAAC5R,MAAD,EAAStV,OAAT,CAAhE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBiH,CAAhB;AAiB7F,CAjBE;;AAkBP,IAAI6kB,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAU5R,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B+G,CAAhB;AA0B3F,CA1BL;;AA2BA,OAAO,IAAIkR,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAU7R,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACxI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6R,iDAAiD,CAAC9R,MAAD,EAAStV,OAAT,CAArD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBsG,CAAhB;AAiBlF,CAjBE;;AAkBP,IAAI+kB,iDAAiD,GAAG,SAApDA,iDAAoD,CAAU9R,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BoG,CAAhB;AA0BhF,CA1BL;;AA2BA,OAAO,IAAIoR,iDAAiD,GAAG,SAApDA,iDAAoD,CAAU/R,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+R,sDAAsD,CAAChS,MAAD,EAAStV,OAAT,CAA1D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB2G,CAAhB;AAiBvF,CAjBE;;AAkBP,IAAIilB,sDAAsD,GAAG,SAAzDA,sDAAyD,CAAUhS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1ByG,CAAhB;AA0BrF,CA1BL;;AA2BA,OAAO,IAAIsR,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUjS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiS,yDAAyD,CAAClS,MAAD,EAAStV,OAAT,CAA7D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB8G,CAAhB;AAiB1F,CAjBE;;AAkBP,IAAImlB,yDAAyD,GAAG,SAA5DA,yDAA4D,CAAUlS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B4G,CAAhB;AA0BxF,CA1BL;;AA2BA,OAAO,IAAIwR,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUnS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImS,kDAAkD,CAACpS,MAAD,EAAStV,OAAT,CAAtD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuG,CAAhB;AAiBnF,CAjBE;;AAkBP,IAAIqlB,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUpS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAI0R,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUrS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqS,qDAAqD,CAACtS,MAAD,EAAStV,OAAT,CAAzD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB0G,CAAhB;AAiBtF,CAjBE;;AAkBP,IAAIulB,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUtS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BwG,CAAhB;AA0BpF,CA1BL;;AA2BA,OAAO,IAAI4R,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUvS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuS,kDAAkD,CAACxS,MAAD,EAAStV,OAAT,CAAtD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBuG,CAAhB;AAiBnF,CAjBE;;AAkBP,IAAIylB,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUxS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAI8R,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUzS,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIyS,2CAA2C,CAAC1S,MAAD,EAAStV,OAAT,CAA/C,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP1Q,gBAAgB,EAAEpD,SAFX;YAGPc,aAAa,EAAEd,SAHR;YAIPe,cAAc,EAAEf,SAJT;YAKPgB,YAAY,EAAEhB,SALP;YAMPiB,cAAc,EAAEjB,SANT;YAOPmT,IAAI,EAAEnT,SAPC;YAQPoT,UAAU,EAAEpT,SARL;YASPyT,cAAc,EAAEzT,SATT;YAUPkB,oBAAoB,EAAElB,SAVf;YAWPoB,iBAAiB,EAAEpB,SAXZ;YAYPmD,uBAAuB,EAAEnD,SAZlB;YAaPkD,WAAW,EAAElD,SAbN;YAcP+C,oBAAoB,EAAE/C,SAdf;YAeP0G,SAAS,EAAE1G;UAfJ,CAAX;;UAiBA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAACuS,UAAT,GAAsBU,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAAtB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,MAAf,MAA2BiB,SAA/B,EAA0C;YACtCa,QAAQ,CAACsS,IAAT,GAAgBW,MAAM,CAAC/U,OAAP,CAAe,MAAf,CAAhB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sBAAf,MAA2CiB,SAA/C,EAA0D;YACtDa,QAAQ,CAACC,aAAT,GAAyBgT,MAAM,CAAC/U,OAAP,CAAe,sBAAf,CAAzB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAACE,cAAT,GAA0B+S,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACG,YAAT,GAAwB8S,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAxB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAACI,cAAT,GAA0B6S,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAACkC,oBAAT,GAAgC+Q,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACK,oBAAT,GAAgC4S,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,+CAAf,MAAoEiB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAACO,iBAAT,GAA6B0S,MAAM,CAAC/U,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,6CAAf,MAAkEiB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACqC,WAAT,GAAuB4Q,MAAM,CAAC/U,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sCAAf,MAA2DiB,SAA/D,EAA0E;YACtEa,QAAQ,CAACsC,uBAAT,GAAmC2Q,MAAM,CAAC/U,OAAP,CAAe,sCAAf,CAAnC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACuC,gBAAT,GAA4B7G,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAnER;IAqEH,CAtEiB,CAAlB;EAuEH,CAzEgG,CAAhB;AAyE5E,CAzEE;;AA0EP,IAAI2lB,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAU1S,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B8F,CAAhB;AA0B1E,CA1BL;;AA2BA,OAAO,IAAIgS,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAU3S,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI2S,8CAA8C,CAAC5S,MAAD,EAAStV,OAAT,CAAlD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAEzT;UAFT,CAAX;;UAIA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArBmG,CAAhB;AAqB/E,CArBE;;AAsBP,IAAI6lB,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU5S,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,WAAL;cAAkB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YAClB,KAAK,4BAAL;cAAmC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAFvC;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAI+f,uCAAuC,CAACpK,YAAD,EAAe9V,OAAf,CAA3C,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/BiG,CAAhB;AA+B7E,CA/BL;;AAgCA,OAAO,IAAIkS,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAU7S,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI6S,oDAAoD,CAAC9S,MAAD,EAAStV,OAAT,CAAxD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAEzT;UAFT,CAAX;;UAIA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArByG,CAAhB;AAqBrF,CArBE;;AAsBP,IAAI+lB,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAU9S,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuG,CAAhB;AA0BnF,CA1BL;;AA2BA,OAAO,IAAIoS,uDAAuD,GAAG,SAA1DA,uDAA0D,CAAU/S,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI+S,4DAA4D,CAAChT,MAAD,EAAStV,OAAT,CAAhE,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAEzT;UAFT,CAAX;;UAIA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArBiH,CAAhB;AAqB7F,CArBE;;AAsBP,IAAIimB,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUhT,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjJ,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B+G,CAAhB;AA0B3F,CA1BL;;AA2BA,OAAO,IAAIsS,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUjT,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIiT,oDAAoD,CAAClT,MAAD,EAAStV,OAAT,CAAxD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAEzT;UAFT,CAAX;;UAIA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArByG,CAAhB;AAqBrF,CArBE;;AAsBP,IAAImmB,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUlT,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BuG,CAAhB;AA0BnF,CA1BL;;AA2BA,OAAO,IAAIwS,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUnT,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAImT,kDAAkD,CAACpT,MAAD,EAAStV,OAAT,CAAtD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPpN,SAAS,EAAE1G;UAFJ,CAAX;;UAIA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,kBAAf,MAAuCiB,SAA3C,EAAsD;YAClDa,QAAQ,CAAC6F,SAAT,GAAqBoN,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAArB;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAfR;IAiBH,CAlBiB,CAAlB;EAmBH,CArBuG,CAAhB;AAqBnF,CArBE;;AAsBP,IAAIqmB,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUpT,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BqG,CAAhB;AA0BjF,CA1BL;;AA2BA,OAAO,IAAI0S,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUrT,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIqT,sDAAsD,CAACtT,MAAD,EAAStV,OAAT,CAA1D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB2G,CAAhB;AAiBvF,CAjBE;;AAkBP,IAAIumB,sDAAsD,GAAG,SAAzDA,sDAAyD,CAAUtT,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1ByG,CAAhB;AA0BrF,CA1BL;;AA2BA,OAAO,IAAI4S,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUvT,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACtI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIuT,+CAA+C,CAACxT,MAAD,EAAStV,OAAT,CAAnD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEPL,cAAc,EAAEzT,SAFT;YAGPunB,iBAAiB,EAAEvnB;UAHZ,CAAX;;UAKA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,2BAAf,MAAgDiB,SAApD,EAA+D;YAC3Da,QAAQ,CAAC0mB,iBAAT,GAA6BzT,MAAM,CAAC/U,OAAP,CAAe,2BAAf,CAA7B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CAzBoG,CAAhB;AAyBhF,CAzBE;;AA0BP,IAAIymB,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUxT,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2C7V,EAA3C,EAA+C8V,UAA/C;;IACA,IAAIrV,EAAJ;;IACA,OAAOrE,WAAW,CAAC,IAAD,EAAO,UAAU2Z,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrV,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACA1U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIuV,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAER,EAAE,CAACD,IAAH,GAAUuV,EAAE,CAACnV,IAAH,EAAV,EAAqBH,EAAvB,EAAV,CAAvB,CAAf;UACAoV,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;UACAR,EAAE,GAAG6V,SAAL;;UACA,QAAQ7V,EAAR;YACI,KAAK,gCAAL;cAAuC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;YACvC,KAAK,iDAAL;cAAwD,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UAF5D;;UAIA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,EAAI6oB,4DAA4D,CAAClT,YAAD,EAAe9V,OAAf,CAAhE,CAAP;;QACR,KAAK,CAAL;UAAQ,MAAMkW,EAAE,CAACnV,IAAH,EAAN;;QACR,KAAK,CAAL;UACIkV,UAAU,GAAGH,YAAY,CAACnV,IAA1B;UACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;YAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;YAE3BU,MAAM,EAAE,QAFmB;YAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UAHH,CAApB,CAAX;UAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;MAxBR;IA0BH,CA3BiB,CAAlB;EA4BH,CA/BkG,CAAhB;AA+B9E,CA/BL;;AAgCA,OAAO,IAAIgT,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU3T,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ,EAAcuU,IAAd;IACA,OAAOra,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,IAAIqV,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;QACvD,OAAO,CAAC,CAAD,EAAI2T,qDAAqD,CAAC5T,MAAD,EAAStV,OAAT,CAAzD,CAAP;MACH;;MACDqC,QAAQ,GAAG;QACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;QAEP6T,OAAO,EAAE3nB;MAFF,CAAX;MAIAoV,IAAI,GAAG5W,OAAO,CAACopB,qBAAR,CAA8BC,WAA9B,CAA0C/T,MAAM,CAAC3U,IAAjD,EAAuD,UAAU2oB,KAAV,EAAiB;QAAE,OAAOhtB,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;UAClI,IAAIitB,SAAJ,EAAeC,YAAf,EAA6BC,YAA7B,EAA2CC,WAA3C;;UACA,IAAIzpB,EAAJ;;UACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;YACnC,QAAQA,EAAE,CAACU,KAAX;cACI,KAAK,CAAL;gBACI0oB,SAAS,GAAGhkB,MAAM,CAACC,IAAP,CAAY8jB,KAAZ,EAAmB,CAAnB,CAAZ;gBACAE,YAAY,GAAGjkB,MAAM,CAACokB,OAAP,CAAeL,KAAK,CAACC,SAAD,CAAL,CAAiBhpB,OAAhC,EAAyCkF,MAAzC,CAAgD,UAAUmkB,YAAV,EAAwBC,IAAxB,EAA8B;kBACzFD,YAAY,CAACC,IAAI,CAAC,CAAD,CAAL,CAAZ,GAAwBA,IAAI,CAAC,CAAD,CAAJ,CAAQC,KAAhC;kBACA,OAAOF,YAAP;gBACH,CAHc,EAGZ,EAHY,CAAf;gBAIAH,YAAY,GAAG;kBACXlpB,OAAO,EAAEipB,YADE;kBAEX7oB,IAAI,EAAE2oB,KAAK,CAACC,SAAD,CAAL,CAAiB5oB;gBAFZ,CAAf;gBAIA+oB,WAAW,IAAIzpB,EAAE,GAAG,EAAL,EACXA,EAAE,CAACspB,SAAD,CAAF,GAAgBE,YADL,EAEXxpB,EAFO,CAAX;gBAGA,OAAO,CAAC,CAAD,EAAI8pB,0DAA0D,CAACL,WAAD,EAAc1pB,OAAd,CAA9D,CAAP;;cACJ,KAAK,CAAL;gBAAQ,OAAO,CAAC,CAAD,EAAIG,EAAE,CAACY,IAAH,EAAJ,CAAP;YAfZ;UAiBH,CAlBiB,CAAlB;QAmBH,CAtBgG,CAAhB;MAsB5E,CAtBE,CAAP;MAuBAsB,QAAQ,CAAC8mB,OAAT,GAAmBvS,IAAnB;MACA,OAAO,CAAC,CAAD,EAAIhB,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;IACH,CAjCiB,CAAlB;EAkCH,CApC0G,CAAhB;AAoCtF,CApCE;;AAqCP,IAAI6mB,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAU5T,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC1I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BwG,CAAhB;AA0BpF,CA1BL;;AA2BA,OAAO,IAAI+T,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAU1U,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI0U,4CAA4C,CAAC3U,MAAD,EAAStV,OAAT,CAAhD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP1Q,gBAAgB,EAAEpD,SAFX;YAGPc,aAAa,EAAEd,SAHR;YAIPe,cAAc,EAAEf,SAJT;YAKPgB,YAAY,EAAEhB,SALP;YAMPiB,cAAc,EAAEjB,SANT;YAOPmT,IAAI,EAAEnT,SAPC;YAQPyT,cAAc,EAAEzT,SART;YASPkB,oBAAoB,EAAElB,SATf;YAUPoB,iBAAiB,EAAEpB,SAVZ;YAWPkD,WAAW,EAAElD,SAXN;YAYP+C,oBAAoB,EAAE/C;UAZf,CAAX;;UAcA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAACkC,oBAAT,GAAgC+Q,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,MAAf,MAA2BiB,SAA/B,EAA0C;YACtCa,QAAQ,CAACsS,IAAT,GAAgBW,MAAM,CAAC/U,OAAP,CAAe,MAAf,CAAhB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,sBAAf,MAA2CiB,SAA/C,EAA0D;YACtDa,QAAQ,CAACC,aAAT,GAAyBgT,MAAM,CAAC/U,OAAP,CAAe,sBAAf,CAAzB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAACE,cAAT,GAA0B+S,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,qBAAf,MAA0CiB,SAA9C,EAAyD;YACrDa,QAAQ,CAACG,YAAT,GAAwB8S,MAAM,CAAC/U,OAAP,CAAe,qBAAf,CAAxB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAACI,cAAT,GAA0B6S,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACK,oBAAT,GAAgC4S,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,+CAAf,MAAoEiB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAACO,iBAAT,GAA6B0S,MAAM,CAAC/U,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,6CAAf,MAAkEiB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACqC,WAAT,GAAuB4Q,MAAM,CAAC/U,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACuC,gBAAT,GAA4B7G,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACD,OAAO,CAAC,CAAD,EAAIoV,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAvDR;IAyDH,CA1DiB,CAAlB;EA2DH,CA7DiG,CAAhB;AA6D7E,CA7DE;;AA8DP,IAAI4nB,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAU3U,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B+F,CAAhB;AA0B3E,CA1BL;;AA2BA,OAAO,IAAIiU,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAU5U,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB3W,EAApB;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAI4U,gDAAgD,CAAC7U,MAAD,EAAStV,OAAT,CAApD,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD,CADvB;YAEP1Q,gBAAgB,EAAEpD,SAFX;YAGP4oB,cAAc,EAAE5oB,SAHT;YAIP0V,mBAAmB,EAAE1V,SAJd;YAKPyT,cAAc,EAAEzT,SALT;YAMPkB,oBAAoB,EAAElB,SANf;YAOPoB,iBAAiB,EAAEpB,SAPZ;YAQPkD,WAAW,EAAElD,SARN;YASP+C,oBAAoB,EAAE/C;UATf,CAAX;;UAWA,IAAI8T,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAAC6U,mBAAT,GAA+B5B,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAA/B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,8BAAf,MAAmDiB,SAAvD,EAAkE;YAC9Da,QAAQ,CAACkC,oBAAT,GAAgC+Q,MAAM,CAAC/U,OAAP,CAAe,8BAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACK,oBAAT,GAAgC4S,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAhC;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,+CAAf,MAAoEiB,SAAxE,EAAmF;YAC/Ea,QAAQ,CAACO,iBAAT,GAA6B0S,MAAM,CAAC/U,OAAP,CAAe,+CAAf,CAA7B;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,6CAAf,MAAkEiB,SAAtE,EAAiF;YAC7Ea,QAAQ,CAACqC,WAAT,GAAuB4Q,MAAM,CAAC/U,OAAP,CAAe,6CAAf,CAAvB;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,iDAAf,MAAsEiB,SAA1E,EAAqF;YACjFa,QAAQ,CAACuC,gBAAT,GAA4B7G,cAAc,CAACuX,MAAM,CAAC/U,OAAP,CAAe,iDAAf,CAAD,CAA1C;UACH;;UACD,IAAI+U,MAAM,CAAC/U,OAAP,CAAe,uBAAf,MAA4CiB,SAAhD,EAA2D;YACvDa,QAAQ,CAAC4S,cAAT,GAA0BK,MAAM,CAAC/U,OAAP,CAAe,uBAAf,CAA1B;UACH;;UACDN,EAAE,GAAG9C,cAAL;UACA,OAAO,CAAC,CAAD,EAAIgZ,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI4W,IAAI,GAAG3W,EAAE,CAACmW,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACjW,EAAE,CAACY,IAAH,EAAD,CAAjB,CAAP;UACAsB,QAAQ,CAAC+nB,cAAT,GAA0BC,oCAAoC,CAACzT,IAAD,EAAO5W,OAAP,CAA9D;UACA,OAAO,CAAC,CAAD,EAAI4V,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MA1CR;IA4CH,CA7CiB,CAAlB;EA8CH,CAhDqG,CAAhB;AAgDjF,CAhDE;;AAiDP,IAAI8nB,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU7U,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1BmG,CAAhB;AA0B/E,CA1BL;;AA2BA,OAAO,IAAIqU,mDAAmD,GAAG,SAAtDA,mDAAsD,CAAUhV,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/I,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACY,KAAX;QACI,KAAK,CAAL;UACI,IAAIyU,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC,CAAD,EAAIgV,wDAAwD,CAACjV,MAAD,EAAStV,OAAT,CAA5D,CAAP;UACH;;UACDqC,QAAQ,GAAG;YACPoT,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC,CAAD,EAAIK,WAAW,CAACL,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAf,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACc,IAAH;;UACA,OAAO,CAAC,CAAD,EAAI6U,OAAO,CAACC,OAAR,CAAgBxT,QAAhB,CAAJ,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjB6G,CAAhB;AAiBzF,CAjBE;;AAkBP,IAAIkoB,wDAAwD,GAAG,SAA3DA,wDAA2D,CAAUjV,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7I,IAAIwZ,YAAJ,EAAkB7V,EAAlB,EAAsB8V,QAAtB,EAAgCC,SAAhC,EAA2CC,UAA3C;;IACA,IAAI9V,EAAJ;;IACA,OAAO5D,WAAW,CAAC,IAAD,EAAO,UAAUqE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIZ,EAAE,GAAG,CAAC5D,QAAQ,CAAC,EAAD,EAAKiZ,MAAL,CAAT,CAAL;UACAnV,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIgW,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACI8V,YAAY,GAAGzZ,QAAQ,CAAC+Z,KAAT,CAAe,KAAK,CAApB,EAAuBnW,EAAE,CAACmB,MAAH,CAAU,EAAEjB,EAAE,CAACQ,IAAH,GAAUC,EAAE,CAACG,IAAH,EAAV,EAAqBZ,EAAvB,EAAV,CAAvB,CAAf;UACA6V,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGK,oBAAoB,CAACf,MAAD,EAASQ,YAAY,CAACnV,IAAtB,CAAhC;;UACA,QAAQqV,SAAR;YACI;cACIC,UAAU,GAAGH,YAAY,CAACnV,IAA1B;cACAoV,QAAQ,GAAG,IAAIlW,eAAJ,CAAoB;gBAC3B0W,IAAI,EAAEN,UAAU,CAACO,IAAX,IAAmBP,UAAU,CAACQ,IAA9B,IAAsCT,SADjB;gBAE3BU,MAAM,EAAE,QAFmB;gBAG3BjB,SAAS,EAAEC,mBAAmB,CAACJ,MAAD;cAHH,CAApB,CAAX;cAKA,MAAMvY,0BAA0B,CAACgZ,QAAD,EAAWE,UAAX,CAAhC;UARR;;UAUA,OAAO,CAAC,CAAD,CAAP;MAnBR;IAqBH,CAtBiB,CAAlB;EAuBH,CA1B2G,CAAhB;AA0BvF,CA1BL;;AA2BA,IAAI8T,0DAA0D,GAAG,SAA7DA,0DAA6D,CAAUzU,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC/I,IAAI2D,EAAJ,EAAQE,EAAR,EAAYS,EAAZ,EAAgBsV,EAAhB,EAAoBsU,EAApB;;IACA,OAAOjuB,WAAW,CAAC,IAAD,EAAO,UAAUkuB,EAAV,EAAc;MACnC,QAAQA,EAAE,CAAC5pB,KAAX;QACI,KAAK,CAAL;UACI,IAAI,EAAEyU,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAAxB,CAAJ,EAAwC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UACxCvB,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIyqB,wCAAwC,CAACpV,MAAM,CAAC,SAAD,CAAP,EAAoBtV,OAApB,CAA5C,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKC,EAAE,CAAC0qB,OAAH,GAAaF,EAAE,CAAC1pB,IAAH,EAAb,EACZd,EADO,EAAP;;QAER,KAAK,CAAL;UACI,IAAI,EAAEqV,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAtB,CAAJ,EAAsC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UACtCrB,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIyqB,sCAAsC,CAACtV,MAAM,CAAC,OAAD,CAAP,EAAkBtV,OAAlB,CAA1C,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKG,EAAE,CAAC0qB,KAAH,GAAWJ,EAAE,CAAC1pB,IAAH,EAAX,EACZZ,EADO,EAAP;;QAER,KAAK,CAAL;UACI,IAAI,EAAEmV,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAAzB,CAAJ,EAAyC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UACzCZ,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIkqB,yCAAyC,CAACxV,MAAM,CAAC,UAAD,CAAP,EAAqBtV,OAArB,CAA7C,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKY,EAAE,CAACmqB,QAAH,GAAcN,EAAE,CAAC1pB,IAAH,EAAd,EACZH,EADO,EAAP;;QAER,KAAK,CAAL;UACI,IAAI,EAAE0U,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAArB,CAAJ,EAAqC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;UACrC0U,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAI8U,6CAA6C,CAAC1V,MAAM,CAAC,MAAD,CAAP,EAAiBtV,OAAjB,CAAjD,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKkW,EAAE,CAAC+U,IAAH,GAAUR,EAAE,CAAC1pB,IAAH,EAAV,EACZmV,EADO,EAAP;;QAER,KAAK,CAAL;UACI,IAAI,EAAEZ,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAApB,CAAJ,EAAoC,OAAO,CAAC,CAAD,EAAI,EAAJ,CAAP;UACpCgpB,EAAE,GAAG,EAAL;UACA,OAAO,CAAC,CAAD,EAAIU,oCAAoC,CAAC5V,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB,CAAxC,CAAP;;QACJ,KAAK,CAAL;UAAQ,OAAO,CAAC,CAAD,GAAKwqB,EAAE,CAACW,GAAH,GAASV,EAAE,CAAC1pB,IAAH,EAAT,EACZypB,EADO,EAAP;;QAER,KAAK,EAAL;UAAS,OAAO,CAAC,CAAD,EAAI;YAAEY,QAAQ,EAAE9V;UAAZ,CAAJ,CAAP;MA/Bb;IAiCH,CAlCiB,CAAlB;EAmCH,CArC6G,CAAhB;AAqCzF,CArCL;;AAsCA,IAAI0V,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU1V,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACA,OAAO,CAAC,CAAD,EAAIA,QAAJ,CAAP;IACH,CAHiB,CAAlB;EAIH,CANgG,CAAhB;AAM5E,CANL;;AAOA,IAAI6oB,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAU5V,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACzH,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACA,OAAO,CAAC,CAAD,EAAIA,QAAJ,CAAP;IACH,CAHiB,CAAlB;EAIH,CANuF,CAAhB;AAMnE,CANL;;AAOA,IAAIyoB,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUxV,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC9H,IAAI+F,QAAJ,EAAcpC,EAAd;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACIwB,QAAQ,GAAG,EAAX;UACApC,EAAE,GAAGoC,QAAL;UACA,OAAO,CAAC,CAAD,EAAI8T,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACorB,OAAH,GAAalrB,EAAE,CAACY,IAAH,EAAb;UACA,OAAO,CAAC,CAAD,EAAIsB,QAAJ,CAAP;MAPR;IASH,CAViB,CAAlB;EAWH,CAb4F,CAAhB;AAaxE,CAbL;;AAcA,IAAIqoB,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUpV,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC7H,IAAI+F,QAAJ;IACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAA,QAAQ,CAAC8mB,OAAT,GAAmB7T,MAAM,CAAC3U,IAA1B;MACA,OAAO,CAAC,CAAD,EAAI0B,QAAJ,CAAP;IACH,CAJiB,CAAlB;EAKH,CAP2F,CAAhB;AAOvE,CAPL;;AAQA,IAAIuoB,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUtV,MAAV,EAAkBtV,OAAlB,EAA2B;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3H,IAAI+F,QAAJ,EAAcpC,EAAd;;IACA,OAAO1D,WAAW,CAAC,IAAD,EAAO,UAAU4D,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACU,KAAX;QACI,KAAK,CAAL;UACIwB,QAAQ,GAAG,EAAX;UACApC,EAAE,GAAGoC,QAAL;UACA,OAAO,CAAC,CAAD,EAAI8T,SAAS,CAACb,MAAM,CAAC3U,IAAR,EAAcX,OAAd,CAAb,CAAP;;QACJ,KAAK,CAAL;UACIC,EAAE,CAACorB,OAAH,GAAalrB,EAAE,CAACY,IAAH,EAAb;UACA,OAAO,CAAC,CAAD,EAAIsB,QAAJ,CAAP;MAPR;IASH,CAViB,CAAlB;EAWH,CAbyF,CAAhB;AAarE,CAbL;;AAcA,IAAIkV,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUzB,YAAV,EAAwB9V,OAAxB,EAAiC;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC5I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB0U,SAApB;IACA,OAAO/uB,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAuU,IAAI,GAAGd,YAAY,CAACnV,IAApB;MACA2qB,SAAS,GAAG,IAAItsB,mBAAJ,CAAwB3C,QAAQ,CAAC;QAAEoZ,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAAhC,CAAD,EAAmDzT,QAAnD,CAAhC,CAAZ;MACA,OAAO,CAAC,CAAD,EAAItF,0BAA0B,CAACuuB,SAAD,EAAYxV,YAAY,CAACnV,IAAzB,CAA9B,CAAP;IACH,CALiB,CAAlB;EAMH,CAR0G,CAAhB;AAQtF,CARL;;AASA,IAAI6W,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAU1B,YAAV,EAAwB9V,OAAxB,EAAiC;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB0U,SAApB;IACA,OAAO/uB,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAuU,IAAI,GAAGd,YAAY,CAACnV,IAApB;MACA2qB,SAAS,GAAG,IAAIrsB,uBAAJ,CAA4B5C,QAAQ,CAAC;QAAEoZ,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAAhC,CAAD,EAAmDzT,QAAnD,CAApC,CAAZ;MACA,OAAO,CAAC,CAAD,EAAItF,0BAA0B,CAACuuB,SAAD,EAAYxV,YAAY,CAACnV,IAAzB,CAA9B,CAAP;IACH,CALiB,CAAlB;EAMH,CAR8G,CAAhB;AAQ1F,CARL;;AASA,IAAIsf,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUnK,YAAV,EAAwB9V,OAAxB,EAAiC;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAC3I,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB0U,SAApB;IACA,OAAO/uB,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAuU,IAAI,GAAGd,YAAY,CAACnV,IAApB;;MACA,IAAIiW,IAAI,CAAC,YAAD,CAAJ,KAAuBpV,SAA3B,EAAsC;QAClCa,QAAQ,CAACkpB,UAAT,GAAsBluB,cAAc,CAACuZ,IAAI,CAAC,YAAD,CAAL,CAApC;MACH;;MACD,IAAIA,IAAI,CAAC,cAAD,CAAJ,KAAyBpV,SAA7B,EAAwC;QACpCa,QAAQ,CAACmC,YAAT,GAAwBnH,cAAc,CAACuZ,IAAI,CAAC,cAAD,CAAL,CAAtC;MACH;;MACD0U,SAAS,GAAG,IAAIpsB,kBAAJ,CAAuB7C,QAAQ,CAAC;QAAEoZ,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAAhC,CAAD,EAAmDzT,QAAnD,CAA/B,CAAZ;MACA,OAAO,CAAC,CAAD,EAAItF,0BAA0B,CAACuuB,SAAD,EAAYxV,YAAY,CAACnV,IAAzB,CAA9B,CAAP;IACH,CAXiB,CAAlB;EAYH,CAdyG,CAAhB;AAcrF,CAdL;;AAeA,IAAI4jB,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUzO,YAAV,EAAwB9V,OAAxB,EAAiC;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB0U,SAApB;IACA,OAAO/uB,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAuU,IAAI,GAAGd,YAAY,CAACnV,IAApB;MACA2qB,SAAS,GAAG,IAAIjsB,YAAJ,CAAiBhD,QAAQ,CAAC;QAAEoZ,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAAhC,CAAD,EAAmDzT,QAAnD,CAAzB,CAAZ;MACA,OAAO,CAAC,CAAD,EAAItF,0BAA0B,CAACuuB,SAAD,EAAYxV,YAAY,CAACnV,IAAzB,CAA9B,CAAP;IACH,CALiB,CAAlB;EAMH,CARmG,CAAhB;AAQ/E,CARL;;AASA,IAAIuf,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUpK,YAAV,EAAwB9V,OAAxB,EAAiC;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB0U,SAApB;IACA,OAAO/uB,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAuU,IAAI,GAAGd,YAAY,CAACnV,IAApB;MACA2qB,SAAS,GAAG,IAAIhsB,SAAJ,CAAcjD,QAAQ,CAAC;QAAEoZ,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAAhC,CAAD,EAAmDzT,QAAnD,CAAtB,CAAZ;MACA,OAAO,CAAC,CAAD,EAAItF,0BAA0B,CAACuuB,SAAD,EAAYxV,YAAY,CAACnV,IAAzB,CAA9B,CAAP;IACH,CALiB,CAAlB;EAMH,CARgG,CAAhB;AAQ5E,CARL;;AASA,IAAI2V,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUR,YAAV,EAAwB9V,OAAxB,EAAiC;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACrI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB0U,SAApB;IACA,OAAO/uB,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAuU,IAAI,GAAGd,YAAY,CAACnV,IAApB;MACA2qB,SAAS,GAAG,IAAI/rB,YAAJ,CAAiBlD,QAAQ,CAAC;QAAEoZ,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAAhC,CAAD,EAAmDzT,QAAnD,CAAzB,CAAZ;MACA,OAAO,CAAC,CAAD,EAAItF,0BAA0B,CAACuuB,SAAD,EAAYxV,YAAY,CAACnV,IAAzB,CAA9B,CAAP;IACH,CALiB,CAAlB;EAMH,CARmG,CAAhB;AAQ/E,CARL;;AASA,IAAImhB,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUhM,YAAV,EAAwB9V,OAAxB,EAAiC;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB0U,SAApB;IACA,OAAO/uB,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAuU,IAAI,GAAGd,YAAY,CAACnV,IAApB;MACA2qB,SAAS,GAAG,IAAI9rB,QAAJ,CAAanD,QAAQ,CAAC;QAAEoZ,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAAhC,CAAD,EAAmDzT,QAAnD,CAArB,CAAZ;MACA,OAAO,CAAC,CAAD,EAAItF,0BAA0B,CAACuuB,SAAD,EAAYxV,YAAY,CAACnV,IAAzB,CAA9B,CAAP;IACH,CALiB,CAAlB;EAMH,CAR+F,CAAhB;AAQ3E,CARL;;AASA,IAAIqoB,4DAA4D,GAAG,SAA/DA,4DAA+D,CAAUlT,YAAV,EAAwB9V,OAAxB,EAAiC;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACvJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB0U,SAApB;IACA,OAAO/uB,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAuU,IAAI,GAAGd,YAAY,CAACnV,IAApB;MACA2qB,SAAS,GAAG,IAAI3rB,8BAAJ,CAAmCtD,QAAQ,CAAC;QAAEoZ,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAAhC,CAAD,EAAmDzT,QAAnD,CAA3C,CAAZ;MACA,OAAO,CAAC,CAAD,EAAItF,0BAA0B,CAACuuB,SAAD,EAAYxV,YAAY,CAACnV,IAAzB,CAA9B,CAAP;IACH,CALiB,CAAlB;EAMH,CARqH,CAAhB;AAQjG,CARL;;AASA,IAAIyW,wDAAwD,GAAG,SAA3DA,wDAA2D,CAAUtB,YAAV,EAAwB9V,OAAxB,EAAiC;EAAE,OAAO1D,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnJ,IAAI+F,QAAJ,EAAcuU,IAAd,EAAoB0U,SAApB;IACA,OAAO/uB,WAAW,CAAC,IAAD,EAAO,UAAU0D,EAAV,EAAc;MACnCoC,QAAQ,GAAG,EAAX;MACAuU,IAAI,GAAGd,YAAY,CAACnV,IAApB;MACA2qB,SAAS,GAAG,IAAI7rB,0BAAJ,CAA+BpD,QAAQ,CAAC;QAAEoZ,SAAS,EAAEC,mBAAmB,CAACI,YAAD;MAAhC,CAAD,EAAmDzT,QAAnD,CAAvC,CAAZ;MACA,OAAO,CAAC,CAAD,EAAItF,0BAA0B,CAACuuB,SAAD,EAAYxV,YAAY,CAACnV,IAAzB,CAA9B,CAAP;IACH,CALiB,CAAlB;EAMH,CARiH,CAAhB;AAQ7F,CARL;;AASA,IAAI6qB,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUzrB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,gCAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC0rB,mBAAN,KAA8BjqB,SAA9B,IAA2CzB,KAAK,CAAC0rB,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAIxY,IAAI,GAAG,IAAIxU,SAAJ,CAAc,qBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAAC0rB,mBAAP,CAApB,CADP,EAEN1oB,QAFM,CAEG,qBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAI5E,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUrO,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,wBAAd,EAAwC2U,YAAxC,CAAqD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CAArD,EAAkFtX,QAAlF,CAA2F,QAA3F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIxE,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUzO,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACya,MAAN,KAAiBhZ,SAAjB,IAA8BzB,KAAK,CAACya,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAImR,KAAK,GAAGC,0BAA0B,CAAC7rB,KAAK,CAACya,MAAP,EAAexa,OAAf,CAAtC;IACA,IAAI6rB,eAAe,GAAG,IAAIptB,SAAJ,CAAc,mBAAd,CAAtB;IACAktB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtB4Y,eAAe,CAACzY,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsByY,eAAtB;EACH;;EACD,IAAI9rB,KAAK,CAAC0a,KAAN,KAAgBjZ,SAAhB,IAA6BzB,KAAK,CAAC0a,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIxH,IAAI,GAAG6Y,yBAAyB,CAAC/rB,KAAK,CAAC0a,KAAP,EAAcza,OAAd,CAAzB,CAAgD+C,QAAhD,CAAyD,OAAzD,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAI+Y,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUhsB,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC0a,KAAN,KAAgBjZ,SAAhB,IAA6BzB,KAAK,CAAC0a,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIxH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,eAAd,EAA+B2U,YAA/B,CAA4C,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC0a,KAApB,CAA5C,EAAwE1X,QAAxE,CAAiF,OAAjF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIgZ,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUjsB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,eAAd,EAA+B2U,YAA/B,CAA4C,IAAIzU,SAAJ,CAAcwtB,KAAd,CAA5C,CAAX;IACA,OAAOlZ,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIqpB,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUrsB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,eAAd,EAA+B2U,YAA/B,CAA4C,IAAIzU,SAAJ,CAAcwtB,KAAd,CAA5C,CAAX;IACA,OAAOlZ,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIspB,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUtsB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,eAAd,EAA+B2U,YAA/B,CAA4C,IAAIzU,SAAJ,CAAcwtB,KAAd,CAA5C,CAAX;IACA,OAAOlZ,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIupB,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUvsB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwsB,IAAN,KAAe/qB,SAAf,IAA4BzB,KAAK,CAACwsB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAACzsB,KAAK,CAACwsB,IAAP,EAAavsB,OAAb,CAAtC;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,KAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAIrE,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAU5O,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,wBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0BzB,KAAK,CAACyG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIyM,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EAA6B2U,YAA7B,CAA0C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyG,EAApB,CAA1C,EAAmEzD,QAAnE,CAA4E,IAA5E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0sB,MAAN,KAAiBjrB,SAAjB,IAA8BzB,KAAK,CAAC0sB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxZ,IAAI,GAAGyZ,mCAAmC,CAAC3sB,KAAK,CAAC0sB,MAAP,EAAezsB,OAAf,CAAnC,CAA2D+C,QAA3D,CAAoE,QAApE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC4sB,oBAAN,KAA+BnrB,SAA/B,IAA4CzB,KAAK,CAAC4sB,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAI1Z,IAAI,GAAG2Z,wCAAwC,CAAC7sB,KAAK,CAAC4sB,oBAAP,EAA6B3sB,OAA7B,CAAxC,CAA8E+C,QAA9E,CAAuF,sBAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAI6Z,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU9sB,KAAV,EAAiBC,OAAjB,EAA0B;EAC3E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,4BAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC+sB,mBAAN,KAA8BtrB,SAA9B,IAA2CzB,KAAK,CAAC+sB,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAI7Z,IAAI,GAAG8Z,gDAAgD,CAAChtB,KAAK,CAAC+sB,mBAAP,EAA4B9sB,OAA5B,CAAhD,CAAqF+C,QAArF,CAA8F,qBAA9F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI0Z,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAU3sB,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,iBAAd,CAAf;EACAM,eAAe,CAACiuB,KAAhB,CAAsBjtB,KAAtB,EAA6B;IACzBqN,MAAM,EAAE,gBAAU0c,KAAV,EAAiB;MACrB,IAAI7W,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcmrB,KAAd,CAArC,EAA2D/mB,QAA3D,CAAoE,QAApE,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAJwB;IAKzBga,GAAG,EAAE,aAAUnD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGia,uBAAuB,CAACpD,KAAD,EAAQ9pB,OAAR,CAAvB,CAAwC+C,QAAxC,CAAiD,KAAjD,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CARwB;IASzBka,GAAG,EAAE,aAAUrD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGqZ,wCAAwC,CAACxC,KAAD,EAAQ9pB,OAAR,CAAxC,CAAyD+C,QAAzD,CAAkE,KAAlE,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAZwB;IAazBma,CAAC,EAAE,WAAU7W,IAAV,EAAgBuT,KAAhB,EAAuB;MACtB,IAAI,EAAEA,KAAK,YAAYrrB,SAAjB,IAA8BqrB,KAAK,YAAYnrB,SAAjD,CAAJ,EAAiE;QAC7D,MAAM,IAAI+C,KAAJ,CAAU,mDAAV,CAAN;MACH;;MACDsR,QAAQ,CAACI,YAAT,CAAsB,IAAI3U,SAAJ,CAAc8X,IAAd,EAAoBnD,YAApB,CAAiC0W,KAAjC,CAAtB;IACH;EAlBwB,CAA7B;EAoBA,OAAO9W,QAAP;AACH,CAvBD;;AAwBA,IAAI+Z,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUhtB,KAAV,EAAiBC,OAAjB,EAA0B;EAC7E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,8BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACstB,MAAN,KAAiB7rB,SAAjB,IAA8BzB,KAAK,CAACstB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpa,IAAI,GAAG,IAAIxU,SAAJ,CAAc,6BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACstB,MAApB,CADP,EAENtqB,QAFM,CAEG,QAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACutB,eAAN,KAA0B9rB,SAA1B,IAAuCzB,KAAK,CAACutB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIra,IAAI,GAAG,IAAIxU,SAAJ,CAAc,WAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACutB,eAApB,CADP,EAENvqB,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwB,MAAN,KAAiBC,SAAjB,IAA8BzB,KAAK,CAACwB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI0R,IAAI,GAAG,IAAIxU,SAAJ,CAAc,YAAd,EAA4B2U,YAA5B,CAAyC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACwB,MAApB,CAAzC,EAAsEwB,QAAtE,CAA+E,QAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAvBD;;AAwBA,IAAItD,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU3P,KAAV,EAAiBC,OAAjB,EAA0B;EAC7E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,8BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACic,KAAN,KAAgBxa,SAAhB,IAA6BzB,KAAK,CAACic,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI2P,KAAK,GAAG4B,kCAAkC,CAACxtB,KAAK,CAACic,KAAP,EAAchc,OAAd,CAA9C;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,MAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAInD,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAU9P,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACyc,cAAN,KAAyBhb,SAAzB,IAAsCzB,KAAK,CAACyc,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIvJ,IAAI,GAAGua,kCAAkC,CAACztB,KAAK,CAACyc,cAAP,EAAuBxc,OAAvB,CAAlC,CAAkE+C,QAAlE,CAA2E,gBAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIlQ,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAU/C,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACwlB,KAAN,KAAgB/jB,SAAhB,IAA6BzB,KAAK,CAACwlB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIoG,KAAK,GAAG8B,qCAAqC,CAAC1tB,KAAK,CAACwlB,KAAP,EAAcvlB,OAAd,CAAjD;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,MAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAI0a,iCAAiC,GAAG,SAApCA,iCAAoC,CAAU3tB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC4U,IAAN,KAAenT,SAAf,IAA4BzB,KAAK,CAAC4U,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI1B,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EAAsB2U,YAAtB,CAAmC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC4U,IAApB,CAAnC,EAA8D5R,QAA9D,CAAuE,MAAvE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACuC,aAAN,KAAwBd,SAAxB,IAAqCzB,KAAK,CAACuC,aAAN,KAAwB,IAAjE,EAAuE;IACnE,IAAI2Q,IAAI,GAAG,IAAIxU,SAAJ,CAAc,eAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACuC,aAApB,CADP,EAENS,QAFM,CAEG,eAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwC,cAAN,KAAyBf,SAAzB,IAAsCzB,KAAK,CAACwC,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI0Q,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACwC,cAApB,CADP,EAENQ,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACyC,YAAN,KAAuBhB,SAAvB,IAAoCzB,KAAK,CAACyC,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIyQ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,cAAd,EAA8B2U,YAA9B,CAA2C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyC,YAApB,CAA3C,EAA8EO,QAA9E,CAAuF,cAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0C,cAAN,KAAyBjB,SAAzB,IAAsCzB,KAAK,CAAC0C,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIwQ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC0C,cAApB,CADP,EAENM,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACsL,UAAN,KAAqB7J,SAArB,IAAkCzB,KAAK,CAACsL,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAI4H,IAAI,GAAG,IAAIxU,SAAJ,CAAc,YAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACsL,UAAP,CAApB,CADP,EAENtI,QAFM,CAEG,YAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAnCD;;AAoCA,IAAIya,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAU1tB,KAAV,EAAiBC,OAAjB,EAA0B;EAClE,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGya,iCAAiC,CAACvB,KAAD,EAAQnsB,OAAR,CAA5C;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI4qB,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAU5tB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,WAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC6tB,2BAAN,KAAsCpsB,SAAtC,IAAmDzB,KAAK,CAAC6tB,2BAAN,KAAsC,IAA7F,EAAmG;IAC/F,IAAI3a,IAAI,GAAG,IAAIxU,SAAJ,CAAc,6BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC6tB,2BAApB,CADP,EAEN7qB,QAFM,CAEG,6BAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC8tB,eAAN,KAA0BrsB,SAA1B,IAAuCzB,KAAK,CAAC8tB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI5a,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC8tB,eAApB,CADP,EAEN9qB,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAIlE,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAU/O,KAAV,EAAiBC,OAAjB,EAA0B;EAClE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,mBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACmb,SAAN,KAAoB1Z,SAApB,IAAiCzB,KAAK,CAACmb,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIyQ,KAAK,GAAGmC,6BAA6B,CAAC/tB,KAAK,CAACmb,SAAP,EAAkBlb,OAAlB,CAAzC;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,UAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAI+a,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAUhuB,KAAV,EAAiBC,OAAjB,EAA0B;EACzD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,UAAd,CAAf;;EACA,IAAIsB,KAAK,CAACiuB,EAAN,KAAaxsB,SAAb,IAA0BzB,KAAK,CAACiuB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI/a,IAAI,GAAG,IAAIxU,SAAJ,CAAc,IAAd,EAAoB2U,YAApB,CAAiC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACiuB,EAApB,CAAjC,EAA0DjrB,QAA1D,CAAmE,IAAnE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACkuB,cAAN,KAAyBzsB,SAAzB,IAAsCzB,KAAK,CAACkuB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAItC,KAAK,GAAGK,kCAAkC,CAACjsB,KAAK,CAACkuB,cAAP,EAAuBjuB,OAAvB,CAA9C;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,eAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACmuB,cAAN,KAAyB1sB,SAAzB,IAAsCzB,KAAK,CAACmuB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIvC,KAAK,GAAGS,kCAAkC,CAACrsB,KAAK,CAACmuB,cAAP,EAAuBluB,OAAvB,CAA9C;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,eAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACouB,cAAN,KAAyB3sB,SAAzB,IAAsCzB,KAAK,CAACouB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIxC,KAAK,GAAGU,kCAAkC,CAACtsB,KAAK,CAACouB,cAAP,EAAuBnuB,OAAvB,CAA9C;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,eAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACquB,aAAN,KAAwB5sB,SAAxB,IAAqCzB,KAAK,CAACquB,aAAN,KAAwB,IAAjE,EAAuE;IACnE,IAAIzC,KAAK,GAAG0C,iCAAiC,CAACtuB,KAAK,CAACquB,aAAP,EAAsBpuB,OAAtB,CAA7C;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,cAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACuuB,aAAN,KAAwB9sB,SAAxB,IAAqCzB,KAAK,CAACuuB,aAAN,KAAwB,IAAjE,EAAuE;IACnE,IAAIrb,IAAI,GAAG,IAAIxU,SAAJ,CAAc,eAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACuuB,aAAP,CAApB,CADP,EAENvrB,QAFM,CAEG,eAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAzCD;;AA0CA,IAAI8a,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAU/tB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG8a,4BAA4B,CAAC5B,KAAD,EAAQnsB,OAAR,CAAvC;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAImD,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUnG,KAAV,EAAiBC,OAAjB,EAA0B;EAC1E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,2BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsc,kBAAN,KAA6B7a,SAA7B,IAA0CzB,KAAK,CAACsc,kBAAN,KAA6B,IAA3E,EAAiF;IAC7E,IAAIpJ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,0BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsc,kBAApB,CADP,EAENtZ,QAFM,CAEG,oBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIub,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAUxuB,KAAV,EAAiBC,OAAjB,EAA0B;EACzD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,UAAd,CAAf;;EACA,IAAIsB,KAAK,CAACyuB,cAAN,KAAyBhtB,SAAzB,IAAsCzB,KAAK,CAACyuB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIvb,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyuB,cAApB,CADP,EAENzrB,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0uB,QAAN,KAAmBjtB,SAAnB,IAAgCzB,KAAK,CAAC0uB,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIxb,IAAI,GAAG,IAAIxU,SAAJ,CAAc,UAAd,EAA0B2U,YAA1B,CAAuC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC0uB,QAApB,CAAvC,EAAsE1rB,QAAtE,CAA+E,UAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC2uB,oBAAN,KAA+BltB,SAA/B,IAA4CzB,KAAK,CAAC2uB,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAIzb,IAAI,GAAG,IAAIxU,SAAJ,CAAc,sBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC2uB,oBAApB,CADP,EAEN3rB,QAFM,CAEG,sBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC4uB,eAAN,KAA0BntB,SAA1B,IAAuCzB,KAAK,CAAC4uB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI1b,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC4uB,eAApB,CADP,EAEN5rB,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC6uB,cAAN,KAAyBptB,SAAzB,IAAsCzB,KAAK,CAAC6uB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI3b,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC6uB,cAApB,CADP,EAEN7rB,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC8uB,cAAN,KAAyBrtB,SAAzB,IAAsCzB,KAAK,CAAC8uB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI5b,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC8uB,cAApB,CADP,EAEN9rB,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC+uB,0BAAN,KAAqCttB,SAArC,IAAkDzB,KAAK,CAAC+uB,0BAAN,KAAqC,IAA3F,EAAiG;IAC7F,IAAI7b,IAAI,GAAG,IAAIxU,SAAJ,CAAc,4BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAAC+uB,0BAAP,CAApB,CADP,EAEN/rB,QAFM,CAEG,4BAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA3CD;;AA4CA,IAAI+b,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAUhvB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,WAAd,CAAf;;EACA,IAAIsB,KAAK,CAACivB,WAAN,KAAsBxtB,SAAtB,IAAmCzB,KAAK,CAACivB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAI/b,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EAA6B2U,YAA7B,CAA0C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACivB,WAApB,CAA1C,EAA4EjsB,QAA5E,CAAqF,aAArF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC2uB,oBAAN,KAA+BltB,SAA/B,IAA4CzB,KAAK,CAAC2uB,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAIzb,IAAI,GAAG,IAAIxU,SAAJ,CAAc,sBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC2uB,oBAApB,CADP,EAEN3rB,QAFM,CAEG,sBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC4uB,eAAN,KAA0BntB,SAA1B,IAAuCzB,KAAK,CAAC4uB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI1b,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC4uB,eAApB,CADP,EAEN5rB,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC6uB,cAAN,KAAyBptB,SAAzB,IAAsCzB,KAAK,CAAC6uB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI3b,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC6uB,cAApB,CADP,EAEN7rB,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC8uB,cAAN,KAAyBrtB,SAAzB,IAAsCzB,KAAK,CAAC8uB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI5b,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC8uB,cAApB,CADP,EAEN9rB,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA/BD;;AAgCA,IAAIic,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUlvB,KAAV,EAAiBC,OAAjB,EAA0B;EACjE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,kBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACmvB,IAAN,KAAe1tB,SAAf,IAA4BzB,KAAK,CAACmvB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIjc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,yBAAd,EAAyC2U,YAAzC,CAAsD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACmvB,IAApB,CAAtD,EAAiFnsB,QAAjF,CAA0F,MAA1F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACovB,IAAN,KAAe3tB,SAAf,IAA4BzB,KAAK,CAACovB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIlc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EAAsB2U,YAAtB,CAAmC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACovB,IAAP,CAApB,CAAnC,EAAsEpsB,QAAtE,CAA+E,MAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqvB,KAAN,KAAgB5tB,SAAhB,IAA6BzB,KAAK,CAACqvB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAInc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,OAAd,EAAuB2U,YAAvB,CAAoC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACqvB,KAAP,CAApB,CAApC,EAAwErsB,QAAxE,CAAiF,OAAjF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAIzK,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAUxI,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,QAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsvB,OAAN,KAAkB7tB,SAAlB,IAA+BzB,KAAK,CAACsvB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI1D,KAAK,GAAG2D,wCAAwC,CAACvvB,KAAK,CAACsvB,OAAP,EAAgBrvB,OAAhB,CAApD;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACwvB,KAAN,KAAgB/tB,SAAhB,IAA6BzB,KAAK,CAACwvB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAItc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,OAAd,EAAuB2U,YAAvB,CAAoC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACwvB,KAAP,CAApB,CAApC,EAAwExsB,QAAxE,CAAiF,OAAjF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAIwc,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUzvB,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,+BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CADP,EAENtX,QAFM,CAEG,QAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIyc,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAU1vB,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,aAAd,CAAf;;EACA,IAAIsB,KAAK,CAACwB,MAAN,KAAiBC,SAAjB,IAA8BzB,KAAK,CAACwB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI0R,IAAI,GAAG,IAAIxU,SAAJ,CAAc,YAAd,EAA4B2U,YAA5B,CAAyC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACwB,MAApB,CAAzC,EAAsEwB,QAAtE,CAA+E,QAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC2vB,OAAN,KAAkBluB,SAAlB,IAA+BzB,KAAK,CAAC2vB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAIzc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,WAAd,EAA2B2U,YAA3B,CAAwC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC2vB,OAApB,CAAxC,EAAsE3sB,QAAtE,CAA+E,SAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACyE,YAAN,KAAuBhD,SAAvB,IAAoCzB,KAAK,CAACyE,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIyO,IAAI,GAAG,IAAIxU,SAAJ,CAAc,cAAd,EAA8B2U,YAA9B,CAA2C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyE,YAApB,CAA3C,EAA8EzB,QAA9E,CAAuF,cAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC4vB,wBAAN,KAAmCnuB,SAAnC,IAAgDzB,KAAK,CAAC4vB,wBAAN,KAAmC,IAAvF,EAA6F;IACzF,IAAI1c,IAAI,GAAG8Y,4CAA4C,CAAChsB,KAAK,CAAC4vB,wBAAP,EAAiC3vB,OAAjC,CAA5C,CAAsF+C,QAAtF,CAA+F,0BAA/F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC6vB,uBAAN,KAAkCpuB,SAAlC,IAA+CzB,KAAK,CAAC6vB,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAI3c,IAAI,GAAG4c,2CAA2C,CAAC9vB,KAAK,CAAC6vB,uBAAP,EAAgC5vB,OAAhC,CAA3C,CAAoF+C,QAApF,CAA6F,yBAA7F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC+vB,eAAN,KAA0BtuB,SAA1B,IAAuCzB,KAAK,CAAC+vB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI7c,IAAI,GAAG8c,mCAAmC,CAAChwB,KAAK,CAAC+vB,eAAP,EAAwB9vB,OAAxB,CAAnC,CAAoE+C,QAApE,CAA6E,iBAA7E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACiwB,OAAN,KAAkBxuB,SAAlB,IAA+BzB,KAAK,CAACiwB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI/c,IAAI,GAAGgd,2BAA2B,CAAClwB,KAAK,CAACiwB,OAAP,EAAgBhwB,OAAhB,CAA3B,CAAoD+C,QAApD,CAA6D,SAA7D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA/BD;;AAgCA,IAAIkd,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUnwB,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIsB,KAAK,CAACowB,cAAN,KAAyB3uB,SAAzB,IAAsCzB,KAAK,CAACowB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIld,IAAI,GAAG,IAAIxU,SAAJ,CAAc,sBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACowB,cAApB,CADP,EAENptB,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqwB,QAAN,KAAmB5uB,SAAnB,IAAgCzB,KAAK,CAACqwB,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAInd,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EAA6B2U,YAA7B,CAA0C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqwB,QAApB,CAA1C,EAAyErtB,QAAzE,CAAkF,UAAlF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACswB,UAAN,KAAqB7uB,SAArB,IAAkCzB,KAAK,CAACswB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIpd,IAAI,GAAG,IAAIxU,SAAJ,CAAc,YAAd,EAA4B2U,YAA5B,CAAyC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACswB,UAApB,CAAzC,EAA0EttB,QAA1E,CAAmF,YAAnF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAjBD;;AAkBA,IAAI6c,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAU9vB,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACuwB,eAAN,KAA0B9uB,SAA1B,IAAuCzB,KAAK,CAACuwB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIrd,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACuwB,eAApB,CADP,EAENvtB,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIud,iCAAiC,GAAG,SAApCA,iCAAoC,CAAUxwB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC6B,GAAN,KAAcJ,SAAd,IAA2BzB,KAAK,CAAC6B,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIqR,IAAI,GAAG,IAAIxU,SAAJ,CAAc,WAAd,EAA2B2U,YAA3B,CAAwC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC6B,GAApB,CAAxC,EAAkEmB,QAAlE,CAA2E,KAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIwd,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUzwB,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,0BAAd,CAAf;EACA,OAAOuU,QAAP;AACH,CAHD;;AAIA,IAAIyd,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAU1wB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,OAAd,EAAuB2U,YAAvB,CAAoC,IAAIzU,SAAJ,CAAcwtB,KAAd,CAApC,CAAX;IACA,OAAOlZ,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI2tB,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU3wB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,2BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iCAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CADP,EAENtX,QAFM,CAEG,QAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIqb,iCAAiC,GAAG,SAApCA,iCAAoC,CAAUtuB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,cAAd,EAA8B2U,YAA9B,CAA2C,IAAIzU,SAAJ,CAAcwtB,KAAd,CAA3C,CAAX;IACA,OAAOlZ,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI4tB,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAU5wB,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqkB,IAAN,KAAe5iB,SAAf,IAA4BzB,KAAK,CAACqkB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAInR,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EAAgC2U,YAAhC,CAA6C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqkB,IAApB,CAA7C,EAAwErhB,QAAxE,CAAiF,MAAjF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC6wB,KAAN,KAAgBpvB,SAAhB,IAA6BzB,KAAK,CAAC6wB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI3d,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EAAiC2U,YAAjC,CAA8C,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC6wB,KAApB,CAA9C,EAA0E7tB,QAA1E,CAAmF,OAAnF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAI6d,kCAAkC,GAAG,SAArCA,kCAAqC,CAAU9wB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG0d,8BAA8B,CAACxE,KAAD,EAAQnsB,OAAR,CAAzC;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI+tB,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAU/wB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACgxB,IAAN,KAAevvB,SAAf,IAA4BzB,KAAK,CAACgxB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI9d,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EAAsB2U,YAAtB,CAAmC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACgxB,IAApB,CAAnC,EAA8DhuB,QAA9D,CAAuE,MAAvE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIge,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAUjxB,KAAV,EAAiBC,OAAjB,EAA0B;EACtD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,OAAd,CAAf;;EACA,IAAIsB,KAAK,CAACkxB,OAAN,KAAkBzvB,SAAlB,IAA+BzB,KAAK,CAACkxB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAIhe,IAAI,GAAGie,2BAA2B,CAACnxB,KAAK,CAACkxB,OAAP,EAAgBjxB,OAAhB,CAA3B,CAAoD+C,QAApD,CAA6D,SAA7D,CAAX;IACAkQ,IAAI,CAACjQ,YAAL,CAAkB,WAAlB,EAA+B,2CAA/B;IACAgQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACoxB,UAAN,KAAqB3vB,SAArB,IAAkCzB,KAAK,CAACoxB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIle,IAAI,GAAG,IAAIxU,SAAJ,CAAc,YAAd,EAA4B2U,YAA5B,CAAyC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACoxB,UAApB,CAAzC,EAA0EpuB,QAA1E,CAAmF,YAAnF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAZD;;AAaA,IAAIke,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUnxB,KAAV,EAAiBC,OAAjB,EAA0B;EACxD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqxB,WAAN,KAAsB5vB,SAAtB,IAAmCzB,KAAK,CAACqxB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIne,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EAA6B2U,YAA7B,CAA0C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqxB,WAApB,CAA1C,EAA4EruB,QAA5E,CAAqF,aAArF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACsxB,YAAN,KAAuB7vB,SAAvB,IAAoCzB,KAAK,CAACsxB,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIpe,IAAI,GAAG,IAAIxU,SAAJ,CAAc,cAAd,EAA8B2U,YAA9B,CAA2C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsxB,YAApB,CAA3C,EAA8EtuB,QAA9E,CAAuF,cAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACiuB,EAAN,KAAaxsB,SAAb,IAA0BzB,KAAK,CAACiuB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI/a,IAAI,GAAG,IAAIxU,SAAJ,CAAc,IAAd,EAAoB2U,YAApB,CAAiC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACiuB,EAApB,CAAjC,EAA0DjrB,QAA1D,CAAmE,IAAnE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACuxB,GAAN,KAAc9vB,SAAd,IAA2BzB,KAAK,CAACuxB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIre,IAAI,GAAG,IAAIxU,SAAJ,CAAc,KAAd,EAAqB2U,YAArB,CAAkC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACuxB,GAApB,CAAlC,EAA4DvuB,QAA5D,CAAqE,KAArE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwxB,IAAN,KAAe/vB,SAAf,IAA4BzB,KAAK,CAACwxB,IAAN,KAAe,IAA/C,EAAqD;IACjDve,QAAQ,CAAChQ,YAAT,CAAsB,UAAtB,EAAkCjD,KAAK,CAACwxB,IAAxC;EACH;;EACD,OAAOve,QAAP;AACH,CAtBD;;AAuBA,IAAI4Y,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAU7rB,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG+d,yBAAyB,CAAC7E,KAAD,EAAQnsB,OAAR,CAApC;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,OAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIyuB,iCAAiC,GAAG,SAApCA,iCAAoC,CAAUzxB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC0xB,MAAN,KAAiBjwB,SAAjB,IAA8BzB,KAAK,CAAC0xB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxe,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC0xB,MAApB,CAArC,EAAkE1uB,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIO,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUxT,KAAV,EAAiBC,OAAjB,EAA0B;EACnE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,oBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC2xB,GAAN,KAAclwB,SAAd,IAA2BzB,KAAK,CAAC2xB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIze,IAAI,GAAGsb,4BAA4B,CAACxuB,KAAK,CAAC2xB,GAAP,EAAY1xB,OAAZ,CAA5B,CAAiD+C,QAAjD,CAA0D,KAA1D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC4xB,eAAN,KAA0BnwB,SAA1B,IAAuCzB,KAAK,CAAC4xB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI1e,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC4xB,eAApB,CADP,EAEN5uB,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC6xB,IAAN,KAAepwB,SAAf,IAA4BzB,KAAK,CAAC6xB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI3e,IAAI,GAAG4e,6BAA6B,CAAC9xB,KAAK,CAAC6xB,IAAP,EAAa5xB,OAAb,CAA7B,CAAmD+C,QAAnD,CAA4D,MAA5D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC+xB,OAAN,KAAkBtwB,SAAlB,IAA+BzB,KAAK,CAAC+xB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI7e,IAAI,GAAG8e,gCAAgC,CAAChyB,KAAK,CAAC+xB,OAAP,EAAgB9xB,OAAhB,CAAhC,CAAyD+C,QAAzD,CAAkE,SAAlE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CArBD;;AAsBA,IAAIgf,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUjyB,KAAV,EAAiBC,OAAjB,EAA0B;EAC9E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,+BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwsB,IAAN,KAAe/qB,SAAf,IAA4BzB,KAAK,CAACwsB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAACzsB,KAAK,CAACwsB,IAAP,EAAavsB,OAAb,CAAtC;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,KAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAI5D,mDAAmD,GAAG,SAAtDA,mDAAsD,CAAUrP,KAAV,EAAiBC,OAAjB,EAA0B;EAChF,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,iCAAd,CAAf;;EACA,IAAIsB,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0BzB,KAAK,CAACyG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIyM,IAAI,GAAG,IAAIxU,SAAJ,CAAc,sBAAd,EAAsC2U,YAAtC,CAAmD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyG,EAApB,CAAnD,EAA4EzD,QAA5E,CAAqF,IAArF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0sB,MAAN,KAAiBjrB,SAAjB,IAA8BzB,KAAK,CAAC0sB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxZ,IAAI,GAAGgf,4CAA4C,CAAClyB,KAAK,CAAC0sB,MAAP,EAAezsB,OAAf,CAA5C,CAAoE+C,QAApE,CAA6E,QAA7E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,0BAAd,EAA0C2U,YAA1C,CAAuD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CAAvD,EAAoFtX,QAApF,CAA6F,QAA7F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACmyB,QAAN,KAAmB1wB,SAAnB,IAAgCzB,KAAK,CAACmyB,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIvG,KAAK,GAAGwG,+BAA+B,CAACpyB,KAAK,CAACmyB,QAAP,EAAiBlyB,OAAjB,CAA3C;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,SAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAtBD;;AAuBA,IAAIif,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUlyB,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACktB,GAAN,KAAczrB,SAAd,IAA2BzB,KAAK,CAACktB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIha,IAAI,GAAGia,uBAAuB,CAACntB,KAAK,CAACktB,GAAP,EAAYjtB,OAAZ,CAAvB,CAA4C+C,QAA5C,CAAqD,KAArD,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACotB,GAAN,KAAc3rB,SAAd,IAA2BzB,KAAK,CAACotB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIla,IAAI,GAAG+e,iDAAiD,CAACjyB,KAAK,CAACotB,GAAP,EAAYntB,OAAZ,CAAjD,CAAsE+C,QAAtE,CAA+E,KAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAIzD,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUxP,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,wBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqyB,WAAN,KAAsB5wB,SAAtB,IAAmCzB,KAAK,CAACqyB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAInf,IAAI,GAAGof,wCAAwC,CAACtyB,KAAK,CAACqyB,WAAP,EAAoBpyB,OAApB,CAAxC,CAAqE+C,QAArE,CAA8E,aAA9E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACuyB,SAAN,KAAoB9wB,SAApB,IAAiCzB,KAAK,CAACuyB,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIrf,IAAI,GAAG,IAAIxU,SAAJ,CAAc,WAAd,EAA2B2U,YAA3B,CAAwC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACuyB,SAAP,CAApB,CAAxC,EAAgFvvB,QAAhF,CAAyF,WAAzF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0sB,MAAN,KAAiBjrB,SAAjB,IAA8BzB,KAAK,CAAC0sB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxZ,IAAI,GAAGsf,mCAAmC,CAACxyB,KAAK,CAAC0sB,MAAP,EAAezsB,OAAf,CAAnC,CAA2D+C,QAA3D,CAAoE,QAApE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0BzB,KAAK,CAACyG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIyM,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EAA6B2U,YAA7B,CAA0C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyG,EAApB,CAA1C,EAAmEzD,QAAnE,CAA4E,IAA5E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACyyB,sBAAN,KAAiChxB,SAAjC,IAA8CzB,KAAK,CAACyyB,sBAAN,KAAiC,IAAnF,EAAyF;IACrF,IAAIvf,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iCAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyyB,sBAApB,CADP,EAENzvB,QAFM,CAEG,wBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0yB,cAAN,KAAyBjxB,SAAzB,IAAsCzB,KAAK,CAAC0yB,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAI9G,KAAK,GAAG+G,2CAA2C,CAAC3yB,KAAK,CAAC0yB,cAAP,EAAuBzyB,OAAvB,CAAvD;IACA,IAAI2yB,eAAe,GAAG,IAAIl0B,SAAJ,CAAc,gBAAd,CAAtB;IACAktB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtB0f,eAAe,CAACvf,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsBuf,eAAtB;EACH;;EACD,IAAI5yB,KAAK,CAAC6yB,QAAN,KAAmBpxB,SAAnB,IAAgCzB,KAAK,CAAC6yB,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI3f,IAAI,GAAG4f,qCAAqC,CAAC9yB,KAAK,CAAC6yB,QAAP,EAAiB5yB,OAAjB,CAArC,CAA+D+C,QAA/D,CAAwE,UAAxE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CArCD;;AAsCA,IAAIqf,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUtyB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC+sB,mBAAN,KAA8BtrB,SAA9B,IAA2CzB,KAAK,CAAC+sB,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAI7Z,IAAI,GAAG6f,gDAAgD,CAAC/yB,KAAK,CAAC+sB,mBAAP,EAA4B9sB,OAA5B,CAAhD,CAAqF+C,QAArF,CAA8F,qBAA9F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI+f,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUhzB,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACizB,KAAN,KAAgBxxB,SAAhB,IAA6BzB,KAAK,CAACizB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI/f,IAAI,GAAGggB,yBAAyB,CAAClzB,KAAK,CAACizB,KAAP,EAAchzB,OAAd,CAAzB,CAAgD+C,QAAhD,CAAyD,QAAzD,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACmzB,MAAN,KAAiB1xB,SAAjB,IAA8BzB,KAAK,CAACmzB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIjgB,IAAI,GAAGkgB,0BAA0B,CAACpzB,KAAK,CAACmzB,MAAP,EAAelzB,OAAf,CAA1B,CAAkD+C,QAAlD,CAA2D,SAA3D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIuf,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUxyB,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,iBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI0f,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAU3yB,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,wBAAd,EAAwC2U,YAAxC,CAAqD,IAAIzU,SAAJ,CAAcwtB,KAAd,CAArD,CAAX;IACA,OAAOlZ,IAAI,CAAClQ,QAAL,CAAc,OAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI+vB,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAU/yB,KAAV,EAAiBC,OAAjB,EAA0B;EAC7E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,8BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqzB,SAAN,KAAoB5xB,SAApB,IAAiCzB,KAAK,CAACqzB,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIngB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,WAAd,EAA2B2U,YAA3B,CAAwC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqzB,SAApB,CAAxC,EAAwErwB,QAAxE,CAAiF,WAAjF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwB,MAAN,KAAiBC,SAAjB,IAA8BzB,KAAK,CAACwB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI0R,IAAI,GAAG,IAAIxU,SAAJ,CAAc,YAAd,EAA4B2U,YAA5B,CAAyC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACwB,MAApB,CAAzC,EAAsEwB,QAAtE,CAA+E,QAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACstB,MAAN,KAAiB7rB,SAAjB,IAA8BzB,KAAK,CAACstB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpa,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EAAiC2U,YAAjC,CAA8C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACstB,MAApB,CAA9C,EAA2EtqB,QAA3E,CAAoF,QAApF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACszB,UAAN,KAAqB7xB,SAArB,IAAkCzB,KAAK,CAACszB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIpgB,IAAI,GAAG8f,uCAAuC,CAAChzB,KAAK,CAACszB,UAAP,EAAmBrzB,OAAnB,CAAvC,CAAmE+C,QAAnE,CAA4E,YAA5E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAvBD;;AAwBA,IAAI6f,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAU9yB,KAAV,EAAiBC,OAAjB,EAA0B;EAClE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,mBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACuzB,SAAN,KAAoB9xB,SAApB,IAAiCzB,KAAK,CAACuzB,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIrgB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,oBAAd,EAAoC2U,YAApC,CAAiD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACuzB,SAApB,CAAjD,EAAiFvwB,QAAjF,CAA0F,WAA1F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI6e,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAU9xB,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,WAAd,CAAf;;EACA,IAAIsB,KAAK,CAACwxB,IAAN,KAAe/vB,SAAf,IAA4BzB,KAAK,CAACwxB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIte,IAAI,GAAG,IAAIxU,SAAJ,CAAc,UAAd,EAA0B2U,YAA1B,CAAuC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACwxB,IAApB,CAAvC,EAAkExuB,QAAlE,CAA2E,MAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIugB,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUxzB,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC4uB,eAAN,KAA0BntB,SAA1B,IAAuCzB,KAAK,CAAC4uB,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI1b,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC4uB,eAApB,CADP,EAEN5rB,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIwgB,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUzzB,KAAV,EAAiBC,OAAjB,EAA0B;EAC5E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,6BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0BzB,KAAK,CAACyG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIyM,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EAAgC2U,YAAhC,CAA6C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyG,EAApB,CAA7C,EAAsEzD,QAAtE,CAA+E,IAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0zB,iBAAN,KAA4BjyB,SAA5B,IAAyCzB,KAAK,CAAC0zB,iBAAN,KAA4B,IAAzE,EAA+E;IAC3E,IAAIxgB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,mBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC0zB,iBAApB,CADP,EAEN1wB,QAFM,CAEG,eAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC2zB,MAAN,KAAiBlyB,SAAjB,IAA8BzB,KAAK,CAAC2zB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI/H,KAAK,GAAG8E,6BAA6B,CAAC1wB,KAAK,CAAC2zB,MAAP,EAAe1zB,OAAf,CAAzC;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,OAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAAC0sB,MAAN,KAAiBjrB,SAAjB,IAA8BzB,KAAK,CAAC0sB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxZ,IAAI,GAAG0gB,mDAAmD,CAAC5zB,KAAK,CAAC0sB,MAAP,EAAezsB,OAAf,CAAnD,CAA2E+C,QAA3E,CAAoF,QAApF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAxBD;;AAyBA,IAAI4gB,mDAAmD,GAAG,SAAtDA,mDAAsD,CAAU7zB,KAAV,EAAiBC,OAAjB,EAA0B;EAChF,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGugB,+CAA+C,CAACrH,KAAD,EAAQnsB,OAAR,CAA1D;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI8wB,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAU9zB,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC+zB,IAAN,KAAetyB,SAAf,IAA4BzB,KAAK,CAAC+zB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI7gB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC+zB,IAAN,CAAW3uB,WAAX,GAAyBtD,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,IAAyC,GAAvD,CADP,EAENkB,QAFM,CAEG,MAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACovB,IAAN,KAAe3tB,SAAf,IAA4BzB,KAAK,CAACovB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIlc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EAAsB2U,YAAtB,CAAmC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACovB,IAAP,CAApB,CAAnC,EAAsEpsB,QAAtE,CAA+E,MAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACg0B,yBAAN,KAAoCvyB,SAApC,IAAiDzB,KAAK,CAACg0B,yBAAN,KAAoC,IAAzF,EAA+F;IAC3F,IAAI9gB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,2BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACg0B,yBAAP,CAApB,CADP,EAENhxB,QAFM,CAEG,2BAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAnBD;;AAoBA,IAAIghB,iCAAiC,GAAG,SAApCA,iCAAoC,CAAUj0B,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC6U,UAAN,KAAqBpT,SAArB,IAAkCzB,KAAK,CAAC6U,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAI3B,IAAI,GAAG4gB,uCAAuC,CAAC9zB,KAAK,CAAC6U,UAAP,EAAmB5U,OAAnB,CAAvC,CAAmE+C,QAAnE,CAA4E,YAA5E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACiuB,EAAN,KAAaxsB,SAAb,IAA0BzB,KAAK,CAACiuB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI/a,IAAI,GAAG,IAAIxU,SAAJ,CAAc,IAAd,EAAoB2U,YAApB,CAAiC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACiuB,EAApB,CAAjC,EAA0DjrB,QAA1D,CAAmE,IAAnE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0sB,MAAN,KAAiBjrB,SAAjB,IAA8BzB,KAAK,CAAC0sB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxZ,IAAI,GAAGghB,uCAAuC,CAACl0B,KAAK,CAAC0sB,MAAP,EAAezsB,OAAf,CAAvC,CAA+D+C,QAA/D,CAAwE,QAAxE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,kBAAd,EAAkC2U,YAAlC,CAA+C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CAA/C,EAA4EtX,QAA5E,CAAqF,QAArF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACm0B,WAAN,KAAsB1yB,SAAtB,IAAmCzB,KAAK,CAACm0B,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIvI,KAAK,GAAGwI,kCAAkC,CAACp0B,KAAK,CAACm0B,WAAP,EAAoBl0B,OAApB,CAA9C;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,YAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACq0B,4BAAN,KAAuC5yB,SAAvC,IAAoDzB,KAAK,CAACq0B,4BAAN,KAAuC,IAA/F,EAAqG;IACjG,IAAIzI,KAAK,GAAG0I,mDAAmD,CAACt0B,KAAK,CAACq0B,4BAAP,EAAqCp0B,OAArC,CAA/D;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,6BAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACu0B,2BAAN,KAAsC9yB,SAAtC,IAAmDzB,KAAK,CAACu0B,2BAAN,KAAsC,IAA7F,EAAmG;IAC/F,IAAIrhB,IAAI,GAAGshB,+CAA+C,CAACx0B,KAAK,CAACu0B,2BAAP,EAAoCt0B,OAApC,CAA/C,CAA4F+C,QAA5F,CAAqG,6BAArG,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACy0B,8BAAN,KAAyChzB,SAAzC,IAAsDzB,KAAK,CAACy0B,8BAAN,KAAyC,IAAnG,EAAyG;IACrG,IAAIvhB,IAAI,GAAGuY,kDAAkD,CAACzrB,KAAK,CAACy0B,8BAAP,EAAuCx0B,OAAvC,CAAlD,CAAkG+C,QAAlG,CAA2G,gCAA3G,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA7CD;;AA8CA,IAAIyhB,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAU10B,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwsB,IAAN,KAAe/qB,SAAf,IAA4BzB,KAAK,CAACwsB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAACzsB,KAAK,CAACwsB,IAAP,EAAavsB,OAAb,CAAtC;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,KAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAAC20B,qBAAN,KAAgClzB,SAAhC,IAA6CzB,KAAK,CAAC20B,qBAAN,KAAgC,IAAjF,EAAuF;IACnF,IAAIzhB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,4BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAAC20B,qBAAP,CAApB,CADP,EAEN3xB,QAFM,CAEG,uBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC40B,kBAAN,KAA6BnzB,SAA7B,IAA0CzB,KAAK,CAAC40B,kBAAN,KAA6B,IAA3E,EAAiF;IAC7E,IAAI1hB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,yBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAAC40B,kBAAP,CAApB,CADP,EAEN5xB,QAFM,CAEG,oBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA1BD;;AA2BA,IAAIihB,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUl0B,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,qBAAd,CAAf;EACAU,mBAAmB,CAAC6tB,KAApB,CAA0BjtB,KAA1B,EAAiC;IAC7BqN,MAAM,EAAE,gBAAU0c,KAAV,EAAiB;MACrB,IAAI7W,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcmrB,KAAd,CAArC,EAA2D/mB,QAA3D,CAAoE,QAApE,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAJ4B;IAK7Bga,GAAG,EAAE,aAAUnD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGia,uBAAuB,CAACpD,KAAD,EAAQ9pB,OAAR,CAAvB,CAAwC+C,QAAxC,CAAiD,KAAjD,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAR4B;IAS7ByhB,qBAAqB,EAAE,+BAAU5K,KAAV,EAAiB;MACpC,IAAI7W,IAAI,GAAG,IAAIxU,SAAJ,CAAc,4BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC5B,KAAD,CAApB,CADP,EAEN/mB,QAFM,CAEG,uBAFH,CAAX;MAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAd4B;IAe7B0hB,kBAAkB,EAAE,4BAAU7K,KAAV,EAAiB;MACjC,IAAI7W,IAAI,GAAG,IAAIxU,SAAJ,CAAc,yBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC5B,KAAD,CAApB,CADP,EAEN/mB,QAFM,CAEG,oBAFH,CAAX;MAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CApB4B;IAqB7Bka,GAAG,EAAE,aAAUrD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGwhB,4CAA4C,CAAC3K,KAAD,EAAQ9pB,OAAR,CAA5C,CAA6D+C,QAA7D,CAAsE,KAAtE,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAxB4B;IAyB7Bma,CAAC,EAAE,WAAU7W,IAAV,EAAgBuT,KAAhB,EAAuB;MACtB,IAAI,EAAEA,KAAK,YAAYrrB,SAAjB,IAA8BqrB,KAAK,YAAYnrB,SAAjD,CAAJ,EAAiE;QAC7D,MAAM,IAAI+C,KAAJ,CAAU,mDAAV,CAAN;MACH;;MACDsR,QAAQ,CAACI,YAAT,CAAsB,IAAI3U,SAAJ,CAAc8X,IAAd,EAAoBnD,YAApB,CAAiC0W,KAAjC,CAAtB;IACH;EA9B4B,CAAjC;EAgCA,OAAO9W,QAAP;AACH,CAnCD;;AAoCA,IAAIua,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUxtB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG+gB,iCAAiC,CAAC7H,KAAD,EAAQnsB,OAAR,CAA5C;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIyqB,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUztB,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,gBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC60B,YAAN,KAAuBpzB,SAAvB,IAAoCzB,KAAK,CAAC60B,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAI3hB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,cAAd,EAA8B2U,YAA9B,CAA2C,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC60B,YAApB,CAA3C,EAA8E7xB,QAA9E,CAAuF,cAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC80B,YAAN,KAAuBrzB,SAAvB,IAAoCzB,KAAK,CAAC80B,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIlJ,KAAK,GAAGmJ,gCAAgC,CAAC/0B,KAAK,CAAC80B,YAAP,EAAqB70B,OAArB,CAA5C;IACA,IAAI+0B,eAAe,GAAG,IAAIt2B,SAAJ,CAAc,cAAd,CAAtB;IACAktB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtB8hB,eAAe,CAAC3hB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsB2hB,eAAtB;EACH;;EACD,IAAIh1B,KAAK,CAACi1B,YAAN,KAAuBxzB,SAAvB,IAAoCzB,KAAK,CAACi1B,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAI/hB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,cAAd,EAA8B2U,YAA9B,CAA2C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACi1B,YAApB,CAA3C,EAA8EjyB,QAA9E,CAAuF,cAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAnBD;;AAoBA,IAAIiiB,iCAAiC,GAAG,SAApCA,iCAAoC,CAAUl1B,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,eAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqkB,IAAN,KAAe5iB,SAAf,IAA4BzB,KAAK,CAACqkB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAInR,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EAA6B2U,YAA7B,CAA0C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqkB,IAApB,CAA1C,EAAqErhB,QAArE,CAA8E,MAA9E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC6wB,KAAN,KAAgBpvB,SAAhB,IAA6BzB,KAAK,CAAC6wB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI3d,IAAI,GAAG,IAAIxU,SAAJ,CAAc,eAAd,EAA+B2U,YAA/B,CAA4C,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC6wB,KAApB,CAA5C,EAAwE7tB,QAAxE,CAAiF,OAAjF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIid,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUlwB,KAAV,EAAiBC,OAAjB,EAA0B;EACxD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,eAAd,EAA+B2U,YAA/B,CAA4C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CAA5C,EAAyEtX,QAAzE,CAAkF,QAAlF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACm1B,cAAN,KAAyB1zB,SAAzB,IAAsCzB,KAAK,CAACm1B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIjiB,IAAI,GAAGkiB,wCAAwC,CAACp1B,KAAK,CAACm1B,cAAP,EAAuBl1B,OAAvB,CAAxC,CAAwE+C,QAAxE,CAAiF,gBAAjF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIoiB,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUr1B,KAAV,EAAiBC,OAAjB,EAA0B;EACnE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,oBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwsB,IAAN,KAAe/qB,SAAf,IAA4BzB,KAAK,CAACwsB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAACzsB,KAAK,CAACwsB,IAAP,EAAavsB,OAAb,CAAtC;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,KAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACs1B,cAAN,KAAyB7zB,SAAzB,IAAsCzB,KAAK,CAACs1B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIpiB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACs1B,cAApB,CADP,EAENtyB,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CApBD;;AAqBA,IAAIhD,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUjQ,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0BzB,KAAK,CAACyG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIyM,IAAI,GAAG,IAAIxU,SAAJ,CAAc,WAAd,EAA2B2U,YAA3B,CAAwC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyG,EAApB,CAAxC,EAAiEzD,QAAjE,CAA0E,IAA1E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0sB,MAAN,KAAiBjrB,SAAjB,IAA8BzB,KAAK,CAAC0sB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxZ,IAAI,GAAGqiB,iCAAiC,CAACv1B,KAAK,CAAC0sB,MAAP,EAAezsB,OAAf,CAAjC,CAAyD+C,QAAzD,CAAkE,QAAlE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIsiB,iCAAiC,GAAG,SAApCA,iCAAoC,CAAUv1B,KAAV,EAAiBC,OAAjB,EAA0B;EAC9D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,eAAd,CAAf;EACAW,aAAa,CAAC4tB,KAAd,CAAoBjtB,KAApB,EAA2B;IACvBqN,MAAM,EAAE,gBAAU0c,KAAV,EAAiB;MACrB,IAAI7W,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcmrB,KAAd,CAArC,EAA2D/mB,QAA3D,CAAoE,QAApE,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAJsB;IAKvBga,GAAG,EAAE,aAAUnD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGia,uBAAuB,CAACpD,KAAD,EAAQ9pB,OAAR,CAAvB,CAAwC+C,QAAxC,CAAiD,KAAjD,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CARsB;IASvBoiB,cAAc,EAAE,wBAAUvL,KAAV,EAAiB;MAC7B,IAAI7W,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EAAgC2U,YAAhC,CAA6C,IAAIzU,SAAJ,CAAcmrB,KAAd,CAA7C,EAAmE/mB,QAAnE,CAA4E,gBAA5E,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAZsB;IAavBka,GAAG,EAAE,aAAUrD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGmiB,sCAAsC,CAACtL,KAAD,EAAQ9pB,OAAR,CAAtC,CAAuD+C,QAAvD,CAAgE,KAAhE,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAhBsB;IAiBvBma,CAAC,EAAE,WAAU7W,IAAV,EAAgBuT,KAAhB,EAAuB;MACtB,IAAI,EAAEA,KAAK,YAAYrrB,SAAjB,IAA8BqrB,KAAK,YAAYnrB,SAAjD,CAAJ,EAAiE;QAC7D,MAAM,IAAI+C,KAAJ,CAAU,mDAAV,CAAN;MACH;;MACDsR,QAAQ,CAACI,YAAT,CAAsB,IAAI3U,SAAJ,CAAc8X,IAAd,EAAoBnD,YAApB,CAAiC0W,KAAjC,CAAtB;IACH;EAtBsB,CAA3B;EAwBA,OAAO9W,QAAP;AACH,CA3BD;;AA4BA,IAAIuhB,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUx0B,KAAV,EAAiBC,OAAjB,EAA0B;EAC5E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,6BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACw1B,cAAN,KAAyB/zB,SAAzB,IAAsCzB,KAAK,CAACw1B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAItiB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACw1B,cAAP,CAApB,CADP,EAENxyB,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACy1B,uBAAN,KAAkCh0B,SAAlC,IAA+CzB,KAAK,CAACy1B,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAIviB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,cAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACy1B,uBAAP,CAApB,CADP,EAENzyB,QAFM,CAEG,yBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAIyiB,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAU11B,KAAV,EAAiBC,OAAjB,EAA0B;EAC5E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,6BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACw1B,cAAN,KAAyB/zB,SAAzB,IAAsCzB,KAAK,CAACw1B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAItiB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACw1B,cAAP,CAApB,CADP,EAENxyB,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACyE,YAAN,KAAuBhD,SAAvB,IAAoCzB,KAAK,CAACyE,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIyO,IAAI,GAAG,IAAIxU,SAAJ,CAAc,wBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyE,YAApB,CADP,EAENzB,QAFM,CAEG,cAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACy1B,uBAAN,KAAkCh0B,SAAlC,IAA+CzB,KAAK,CAACy1B,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAIviB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,cAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACy1B,uBAAP,CAApB,CADP,EAENzyB,QAFM,CAEG,yBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CArBD;;AAsBA,IAAIqhB,mDAAmD,GAAG,SAAtDA,mDAAsD,CAAUt0B,KAAV,EAAiBC,OAAjB,EAA0B;EAChF,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGwiB,+CAA+C,CAACtJ,KAAD,EAAQnsB,OAAR,CAA1D;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIqN,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUrQ,KAAV,EAAiBC,OAAjB,EAA0B;EAC1E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,2BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACmd,mBAAN,KAA8B1b,SAA9B,IAA2CzB,KAAK,CAACmd,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAIyO,KAAK,GAAG+J,0CAA0C,CAAC31B,KAAK,CAACmd,mBAAP,EAA4Bld,OAA5B,CAAtD;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,oBAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACkd,mBAAN,KAA8Bzb,SAA9B,IAA2CzB,KAAK,CAACkd,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAI0O,KAAK,GAAGgK,0CAA0C,CAAC51B,KAAK,CAACkd,mBAAP,EAA4Bjd,OAA5B,CAAtD;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,oBAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACid,4BAAN,KAAuCxb,SAAvC,IAAoDzB,KAAK,CAACid,4BAAN,KAAuC,IAA/F,EAAqG;IACjG,IAAI2O,KAAK,GAAGiI,mDAAmD,CAAC7zB,KAAK,CAACid,4BAAP,EAAqChd,OAArC,CAA/D;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,4BAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAACgd,wBAAN,KAAmCvb,SAAnC,IAAgDzB,KAAK,CAACgd,wBAAN,KAAmC,IAAvF,EAA6F;IACzF,IAAI9J,IAAI,GAAGud,4CAA4C,CAACzwB,KAAK,CAACgd,wBAAP,EAAiC/c,OAAjC,CAA5C,CAAsF+C,QAAtF,CAA+F,0BAA/F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA5BD;;AA6BA,IAAI2gB,mDAAmD,GAAG,SAAtDA,mDAAsD,CAAU5zB,KAAV,EAAiBC,OAAjB,EAA0B;EAChF,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,iCAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC6B,GAAN,KAAcJ,SAAd,IAA2BzB,KAAK,CAAC6B,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIqR,IAAI,GAAG2iB,+BAA+B,CAAC71B,KAAK,CAAC6B,GAAP,EAAY5B,OAAZ,CAA/B,CAAoD+C,QAApD,CAA6D,OAA7D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI6iB,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAU91B,KAAV,EAAiBC,OAAjB,EAA0B;EACjE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,kBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC6B,GAAN,KAAcJ,SAAd,IAA2BzB,KAAK,CAAC6B,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIqR,IAAI,GAAG,IAAIxU,SAAJ,CAAc,WAAd,EAA2B2U,YAA3B,CAAwC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC6B,GAApB,CAAxC,EAAkEmB,QAAlE,CAA2E,KAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACmI,SAAN,KAAoB1G,SAApB,IAAiCzB,KAAK,CAACmI,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAI+K,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EAAiC2U,YAAjC,CAA8C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACmI,SAApB,CAA9C,EAA8EnF,QAA9E,CAAuF,WAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIsc,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUvvB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG4iB,oCAAoC,CAAC1J,KAAD,EAAQnsB,OAAR,CAA/C;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIoP,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUpS,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC+1B,iBAAN,KAA4Bt0B,SAA5B,IAAyCzB,KAAK,CAAC+1B,iBAAN,KAA4B,IAAzE,EAA+E;IAC3E,IAAI7iB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,mBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC+1B,iBAApB,CADP,EAEN/yB,QAFM,CAEG,mBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACkc,IAAN,KAAeza,SAAf,IAA4BzB,KAAK,CAACkc,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIhJ,IAAI,GAAG8iB,kCAAkC,CAACh2B,KAAK,CAACkc,IAAP,EAAajc,OAAb,CAAlC,CAAwD+C,QAAxD,CAAiE,MAAjE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAbD;;AAcA,IAAIhB,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUjS,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,2BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CADP,EAENtX,QAFM,CAEG,QAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIV,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUvS,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACmvB,IAAN,KAAe1tB,SAAf,IAA4BzB,KAAK,CAACmvB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIjc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,yBAAd,EAAyC2U,YAAzC,CAAsD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACmvB,IAApB,CAAtD,EAAiFnsB,QAAjF,CAA0F,MAA1F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACi2B,eAAN,KAA0Bx0B,SAA1B,IAAuCzB,KAAK,CAACi2B,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAI/iB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACi2B,eAAN,CAAsB7wB,WAAtB,GAAoCtD,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,IAAoD,GAAlE,CADP,EAENkB,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAbD;;AAcA,IAAI+iB,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUh2B,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,gBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACk2B,gBAAN,KAA2Bz0B,SAA3B,IAAwCzB,KAAK,CAACk2B,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAIhjB,IAAI,GAAGgc,oCAAoC,CAAClvB,KAAK,CAACk2B,gBAAP,EAAyBj2B,OAAzB,CAApC,CAAsE+C,QAAtE,CAA+E,kBAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIkjB,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUn2B,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,gBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACo2B,EAAN,KAAa30B,SAAb,IAA0BzB,KAAK,CAACo2B,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIljB,IAAI,GAAGmjB,8BAA8B,CAACr2B,KAAK,CAACo2B,EAAP,EAAWn2B,OAAX,CAA9B,CAAkD+C,QAAlD,CAA2D,IAA3D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIS,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAU1T,KAAV,EAAiBC,OAAjB,EAA0B;EACpE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,qBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC2xB,GAAN,KAAclwB,SAAd,IAA2BzB,KAAK,CAAC2xB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIze,IAAI,GAAG8b,6BAA6B,CAAChvB,KAAK,CAAC2xB,GAAP,EAAY1xB,OAAZ,CAA7B,CAAkD+C,QAAlD,CAA2D,KAA3D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC6xB,IAAN,KAAepwB,SAAf,IAA4BzB,KAAK,CAAC6xB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI3e,IAAI,GAAGsgB,8BAA8B,CAACxzB,KAAK,CAAC6xB,IAAP,EAAa5xB,OAAb,CAA9B,CAAoD+C,QAApD,CAA6D,MAA7D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAI8Y,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAU/rB,KAAV,EAAiBC,OAAjB,EAA0B;EACtD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,OAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqxB,WAAN,KAAsB5vB,SAAtB,IAAmCzB,KAAK,CAACqxB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIne,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EAA6B2U,YAA7B,CAA0C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqxB,WAApB,CAA1C,EAA4EruB,QAA5E,CAAqF,aAArF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACiuB,EAAN,KAAaxsB,SAAb,IAA0BzB,KAAK,CAACiuB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI/a,IAAI,GAAG,IAAIxU,SAAJ,CAAc,IAAd,EAAoB2U,YAApB,CAAiC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACiuB,EAApB,CAAjC,EAA0DjrB,QAA1D,CAAmE,IAAnE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIzC,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAUxQ,KAAV,EAAiBC,OAAjB,EAA0B;EAClE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,mBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACic,KAAN,KAAgBxa,SAAhB,IAA6BzB,KAAK,CAACic,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI2P,KAAK,GAAG0K,0CAA0C,CAACt2B,KAAK,CAACic,KAAP,EAAchc,OAAd,CAAtD;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,MAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAIsjB,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUv2B,KAAV,EAAiBC,OAAjB,EAA0B;EACtE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,uBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACiG,eAAN,KAA0BxE,SAA1B,IAAuCzB,KAAK,CAACiG,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAIiN,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACiG,eAApB,CADP,EAENjD,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIqjB,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUt2B,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGqjB,yCAAyC,CAACnK,KAAD,EAAQnsB,OAAR,CAApD;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIgvB,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAUhyB,KAAV,EAAiBC,OAAjB,EAA0B;EAC7D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,cAAd,CAAf;EACA,OAAOuU,QAAP;AACH,CAHD;;AAIA,IAAIN,kDAAkD,GAAG,SAArDA,kDAAqD,CAAU3S,KAAV,EAAiBC,OAAjB,EAA0B;EAC/E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,gCAAd,CAAf;;EACA,IAAIsB,KAAK,CAACw2B,eAAN,KAA0B/0B,SAA1B,IAAuCzB,KAAK,CAACw2B,eAAN,KAA0B,IAArE,EAA2E;IACvE,IAAItjB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,SAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACw2B,eAAP,CAApB,CADP,EAENxzB,QAFM,CAEG,iBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACy2B,gBAAN,KAA2Bh1B,SAA3B,IAAwCzB,KAAK,CAACy2B,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAIvjB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,SAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACy2B,gBAAP,CAApB,CADP,EAENzzB,QAFM,CAEG,kBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC02B,iBAAN,KAA4Bj1B,SAA5B,IAAyCzB,KAAK,CAAC02B,iBAAN,KAA4B,IAAzE,EAA+E;IAC3E,IAAIxjB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,SAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAAC02B,iBAAP,CAApB,CADP,EAEN1zB,QAFM,CAEG,mBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC22B,qBAAN,KAAgCl1B,SAAhC,IAA6CzB,KAAK,CAAC22B,qBAAN,KAAgC,IAAjF,EAAuF;IACnF,IAAIzjB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,SAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAAC22B,qBAAP,CAApB,CADP,EAEN3zB,QAFM,CAEG,uBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA3BD;;AA4BA,IAAI2jB,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAU52B,KAAV,EAAiBC,OAAjB,EAA0B;EACnE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,oBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0BzB,KAAK,CAACyG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIyM,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EAAgC2U,YAAhC,CAA6C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyG,EAApB,CAA7C,EAAsEzD,QAAtE,CAA+E,IAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC62B,QAAN,KAAmBp1B,SAAnB,IAAgCzB,KAAK,CAAC62B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI3jB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,UAAd,EAA0B2U,YAA1B,CAAuC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC62B,QAApB,CAAvC,EAAsE7zB,QAAtE,CAA+E,OAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC2zB,MAAN,KAAiBlyB,SAAjB,IAA8BzB,KAAK,CAAC2zB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI/H,KAAK,GAAG8E,6BAA6B,CAAC1wB,KAAK,CAAC2zB,MAAP,EAAe1zB,OAAf,CAAzC;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,OAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAAC0sB,MAAN,KAAiBjrB,SAAjB,IAA8BzB,KAAK,CAAC0sB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxZ,IAAI,GAAG0gB,mDAAmD,CAAC5zB,KAAK,CAAC0sB,MAAP,EAAezsB,OAAf,CAAnD,CAA2E+C,QAA3E,CAAoF,QAApF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAtBD;;AAuBA,IAAI2iB,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAU51B,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAG0jB,sCAAsC,CAACxK,KAAD,EAAQnsB,OAAR,CAAjD;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI8zB,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAU92B,KAAV,EAAiBC,OAAjB,EAA0B;EACzD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,UAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC+2B,QAAN,KAAmBt1B,SAAnB,IAAgCzB,KAAK,CAAC+2B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI7jB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,UAAd,EAA0B2U,YAA1B,CAAuC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC+2B,QAApB,CAAvC,EAAsE/zB,QAAtE,CAA+E,UAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACg3B,gBAAN,KAA2Bv1B,SAA3B,IAAwCzB,KAAK,CAACg3B,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAI9jB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,kBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACg3B,gBAApB,CADP,EAENh0B,QAFM,CAEG,kBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACi3B,QAAN,KAAmBx1B,SAAnB,IAAgCzB,KAAK,CAACi3B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI/jB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,UAAd,EAA0B2U,YAA1B,CAAuC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACi3B,QAApB,CAAvC,EAAsEj0B,QAAtE,CAA+E,UAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACk3B,oBAAN,KAA+Bz1B,SAA/B,IAA4CzB,KAAK,CAACk3B,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAIhkB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,sBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACk3B,oBAApB,CADP,EAENl0B,QAFM,CAEG,sBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACm3B,cAAN,KAAyB11B,SAAzB,IAAsCzB,KAAK,CAACm3B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIjkB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACm3B,cAApB,CADP,EAENn0B,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA7BD;;AA8BA,IAAImkB,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUp3B,KAAV,EAAiBC,OAAjB,EAA0B;EACtE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,uBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC+2B,QAAN,KAAmBt1B,SAAnB,IAAgCzB,KAAK,CAAC+2B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI7jB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,UAAd,EAA0B2U,YAA1B,CAAuC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC+2B,QAApB,CAAvC,EAAsE/zB,QAAtE,CAA+E,UAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACi3B,QAAN,KAAmBx1B,SAAnB,IAAgCzB,KAAK,CAACi3B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAI/jB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,UAAd,EAA0B2U,YAA1B,CAAuC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACi3B,QAApB,CAAvC,EAAsEj0B,QAAtE,CAA+E,UAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIokB,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUr3B,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,4BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CADP,EAENtX,QAFM,CAEG,QAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIlC,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAU/Q,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACs3B,IAAN,KAAe71B,SAAf,IAA4BzB,KAAK,CAACs3B,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIpkB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EAAsB2U,YAAtB,CAAmC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACs3B,IAApB,CAAnC,EAA8Dt0B,QAA9D,CAAuE,MAAvE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACic,KAAN,KAAgBxa,SAAhB,IAA6BzB,KAAK,CAACic,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI2P,KAAK,GAAG2L,oCAAoC,CAACv3B,KAAK,CAACic,KAAP,EAAchc,OAAd,CAAhD;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,MAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAIukB,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUx3B,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,iBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACiuB,EAAN,KAAaxsB,SAAb,IAA0BzB,KAAK,CAACiuB,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAI/a,IAAI,GAAG,IAAIxU,SAAJ,CAAc,IAAd,EAAoB2U,YAApB,CAAiC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACiuB,EAApB,CAAjC,EAA0DjrB,QAA1D,CAAmE,IAAnE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACy3B,QAAN,KAAmBh2B,SAAnB,IAAgCzB,KAAK,CAACy3B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIvkB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,UAAd,EAA0B2U,YAA1B,CAAuC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACy3B,QAAP,CAApB,CAAvC,EAA8Ez0B,QAA9E,CAAuF,UAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC0sB,MAAN,KAAiBjrB,SAAjB,IAA8BzB,KAAK,CAAC0sB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxZ,IAAI,GAAGwkB,yCAAyC,CAAC13B,KAAK,CAAC0sB,MAAP,EAAezsB,OAAf,CAAzC,CAAiE+C,QAAjE,CAA0E,QAA1E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,uBAAd,EAAuC2U,YAAvC,CAAoD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CAApD,EAAiFtX,QAAjF,CAA0F,QAA1F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC23B,uBAAN,KAAkCl2B,SAAlC,IAA+CzB,KAAK,CAAC23B,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAIzkB,IAAI,GAAG0kB,2CAA2C,CAAC53B,KAAK,CAAC23B,uBAAP,EAAgC13B,OAAhC,CAA3C,CAAoF+C,QAApF,CAA6F,yBAA7F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC63B,yBAAN,KAAoCp2B,SAApC,IAAiDzB,KAAK,CAAC63B,yBAAN,KAAoC,IAAzF,EAA+F;IAC3F,IAAI3kB,IAAI,GAAGyd,6CAA6C,CAAC3wB,KAAK,CAAC63B,yBAAP,EAAkC53B,OAAlC,CAA7C,CAAwF+C,QAAxF,CAAiG,2BAAjG,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqyB,WAAN,KAAsB5wB,SAAtB,IAAmCzB,KAAK,CAACqyB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAInf,IAAI,GAAGwc,+BAA+B,CAAC1vB,KAAK,CAACqyB,WAAP,EAAoBpyB,OAApB,CAA/B,CAA4D+C,QAA5D,CAAqE,aAArE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC83B,uBAAN,KAAkCr2B,SAAlC,IAA+CzB,KAAK,CAAC83B,uBAAN,KAAkC,IAArF,EAA2F;IACvF,IAAI5kB,IAAI,GAAGuc,2CAA2C,CAACzvB,KAAK,CAAC83B,uBAAP,EAAgC73B,OAAhC,CAA3C,CAAoF+C,QAApF,CAA6F,yBAA7F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAvCD;;AAwCA,IAAI8kB,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU/3B,KAAV,EAAiBC,OAAjB,EAA0B;EAC3E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,4BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAArC,EAAkErK,QAAlE,CAA2E,QAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwsB,IAAN,KAAe/qB,SAAf,IAA4BzB,KAAK,CAACwsB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIZ,KAAK,GAAGa,0BAA0B,CAACzsB,KAAK,CAACwsB,IAAP,EAAavsB,OAAb,CAAtC;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,KAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAIykB,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAU13B,KAAV,EAAiBC,OAAjB,EAA0B;EACtE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,uBAAd,CAAf;EACAiB,qBAAqB,CAACstB,KAAtB,CAA4BjtB,KAA5B,EAAmC;IAC/BqN,MAAM,EAAE,gBAAU0c,KAAV,EAAiB;MACrB,IAAI7W,IAAI,GAAG,IAAIxU,SAAJ,CAAc,QAAd,EAAwB2U,YAAxB,CAAqC,IAAIzU,SAAJ,CAAcmrB,KAAd,CAArC,EAA2D/mB,QAA3D,CAAoE,QAApE,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAJ8B;IAK/Bga,GAAG,EAAE,aAAUnD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAGia,uBAAuB,CAACpD,KAAD,EAAQ9pB,OAAR,CAAvB,CAAwC+C,QAAxC,CAAiD,KAAjD,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAR8B;IAS/Bka,GAAG,EAAE,aAAUrD,KAAV,EAAiB;MAClB,IAAI7W,IAAI,GAAG6kB,8CAA8C,CAAChO,KAAD,EAAQ9pB,OAAR,CAA9C,CAA+D+C,QAA/D,CAAwE,KAAxE,CAAX;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAZ8B;IAa/Bma,CAAC,EAAE,WAAU7W,IAAV,EAAgBuT,KAAhB,EAAuB;MACtB,IAAI,EAAEA,KAAK,YAAYrrB,SAAjB,IAA8BqrB,KAAK,YAAYnrB,SAAjD,CAAJ,EAAiE;QAC7D,MAAM,IAAI+C,KAAJ,CAAU,mDAAV,CAAN;MACH;;MACDsR,QAAQ,CAACI,YAAT,CAAsB,IAAI3U,SAAJ,CAAc8X,IAAd,EAAoBnD,YAApB,CAAiC0W,KAAjC,CAAtB;IACH;EAlB8B,CAAnC;EAoBA,OAAO9W,QAAP;AACH,CAvBD;;AAwBA,IAAIskB,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUv3B,KAAV,EAAiBC,OAAjB,EAA0B;EACjE,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGskB,mCAAmC,CAACpL,KAAD,EAAQnsB,OAAR,CAA9C;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIgtB,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUhwB,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,iBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,uBAAd,EAAuC2U,YAAvC,CAAoD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CAApD,EAAiFtX,QAAjF,CAA0F,QAA1F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACg4B,IAAN,KAAev2B,SAAf,IAA4BzB,KAAK,CAACg4B,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI9kB,IAAI,GAAGkiB,wCAAwC,CAACp1B,KAAK,CAACg4B,IAAP,EAAa/3B,OAAb,CAAxC,CAA8D+C,QAA9D,CAAuE,MAAvE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAImiB,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUp1B,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACi4B,OAAN,KAAkBx2B,SAAlB,IAA+BzB,KAAK,CAACi4B,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAI/kB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,SAAd,EAAyB2U,YAAzB,CAAsC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACi4B,OAAP,CAApB,CAAtC,EAA4Ej1B,QAA5E,CAAqF,SAArF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI/B,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUlR,KAAV,EAAiBC,OAAjB,EAA0B;EAC5E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,6BAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC0e,KAAN,KAAgBjd,SAAhB,IAA6BzB,KAAK,CAAC0e,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIxL,IAAI,GAAG,IAAIxU,SAAJ,CAAc,OAAd,EAAuB2U,YAAvB,CAAoC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC0e,KAApB,CAApC,EAAgE1b,QAAhE,CAAyE,OAAzE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAIW,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAU5T,KAAV,EAAiBC,OAAjB,EAA0B;EAChE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,iBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACk4B,OAAN,KAAkBz2B,SAAlB,IAA+BzB,KAAK,CAACk4B,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAIhlB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,uBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACk4B,OAAP,CAApB,CADP,EAENl1B,QAFM,CAEG,SAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIF,kCAAkC,GAAG,SAArCA,kCAAqC,CAAU/S,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,gBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACovB,IAAN,KAAe3tB,SAAf,IAA4BzB,KAAK,CAACovB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIlc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EAAsB2U,YAAtB,CAAmC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACovB,IAAP,CAApB,CAAnC,EAAsEpsB,QAAtE,CAA+E,MAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACm4B,oBAAN,KAA+B12B,SAA/B,IAA4CzB,KAAK,CAACm4B,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAIjlB,IAAI,GAAG6d,wCAAwC,CAAC/wB,KAAK,CAACm4B,oBAAP,EAA6Bl4B,OAA7B,CAAxC,CAA8E+C,QAA9E,CAAuF,sBAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwxB,IAAN,KAAe/vB,SAAf,IAA4BzB,KAAK,CAACwxB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIte,IAAI,GAAG,IAAIxU,SAAJ,CAAc,oBAAd,EAAoC2U,YAApC,CAAiD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACwxB,IAApB,CAAjD,EAA4ExuB,QAA5E,CAAqF,MAArF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACgxB,IAAN,KAAevvB,SAAf,IAA4BzB,KAAK,CAACgxB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI9d,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EAAsB2U,YAAtB,CAAmC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACgxB,IAApB,CAAnC,EAA8DhuB,QAA9D,CAAuE,MAAvE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACo4B,WAAN,KAAsB32B,SAAtB,IAAmCzB,KAAK,CAACo4B,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIllB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EAA6B2U,YAA7B,CAA0C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACo4B,WAApB,CAA1C,EAA4Ep1B,QAA5E,CAAqF,aAArF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACq4B,gBAAN,KAA2B52B,SAA3B,IAAwCzB,KAAK,CAACq4B,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAInlB,IAAI,GAAGolB,oCAAoC,CAACt4B,KAAK,CAACq4B,gBAAP,EAAyBp4B,OAAzB,CAApC,CAAsE+C,QAAtE,CAA+E,kBAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACu4B,cAAN,KAAyB92B,SAAzB,IAAsCzB,KAAK,CAACu4B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIrlB,IAAI,GAAGijB,kCAAkC,CAACn2B,KAAK,CAACu4B,cAAP,EAAuBt4B,OAAvB,CAAlC,CAAkE+C,QAAlE,CAA2E,gBAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA/BD;;AAgCA,IAAIulB,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAUx4B,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,aAAd,CAAf;;EACA,IAAIsB,KAAK,CAACy4B,SAAN,KAAoBh3B,SAApB,IAAiCzB,KAAK,CAACy4B,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAIvlB,IAAI,GAAG0a,6BAA6B,CAAC5tB,KAAK,CAACy4B,SAAP,EAAkBx4B,OAAlB,CAA7B,CAAwD+C,QAAxD,CAAiE,WAAjE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC04B,QAAN,KAAmBj3B,SAAnB,IAAgCzB,KAAK,CAAC04B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAIxlB,IAAI,GAAG4jB,4BAA4B,CAAC92B,KAAK,CAAC04B,QAAP,EAAiBz4B,OAAjB,CAA5B,CAAsD+C,QAAtD,CAA+D,UAA/D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAI0lB,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAU34B,KAAV,EAAiBC,OAAjB,EAA0B;EAC7D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGslB,+BAA+B,CAACpM,KAAD,EAAQnsB,OAAR,CAA1C;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,aAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI6yB,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAU71B,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,aAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC44B,WAAN,KAAsBn3B,SAAtB,IAAmCzB,KAAK,CAAC44B,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAIhN,KAAK,GAAGkF,kCAAkC,CAAC9wB,KAAK,CAAC44B,WAAP,EAAoB34B,OAApB,CAA9C;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,YAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAIojB,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUr2B,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC64B,UAAN,KAAqBp3B,SAArB,IAAkCzB,KAAK,CAAC64B,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAI3lB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,YAAd,EAA4B2U,YAA5B,CAAyC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC64B,UAApB,CAAzC,EAA0E71B,QAA1E,CAAmF,YAAnF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqN,MAAN,KAAiB5L,SAAjB,IAA8BzB,KAAK,CAACqN,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI6F,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EAAgC2U,YAAhC,CAA6C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACqN,MAApB,CAA7C,EAA0ErK,QAA1E,CAAmF,QAAnF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACszB,UAAN,KAAqB7xB,SAArB,IAAkCzB,KAAK,CAACszB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIpgB,IAAI,GAAGid,8BAA8B,CAACnwB,KAAK,CAACszB,UAAP,EAAmBrzB,OAAnB,CAA9B,CAA0D+C,QAA1D,CAAmE,YAAnE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC84B,SAAN,KAAoBr3B,SAApB,IAAiCzB,KAAK,CAAC84B,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAI5lB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,iBAAd,EAAiC2U,YAAjC,CAA8C,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC84B,SAApB,CAA9C,EAA8E91B,QAA9E,CAAuF,WAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC2a,iBAAN,KAA4BlZ,SAA5B,IAAyCzB,KAAK,CAAC2a,iBAAN,KAA4B,IAAzE,EAA+E;IAC3E,IAAIiR,KAAK,GAAGC,0BAA0B,CAAC7rB,KAAK,CAAC2a,iBAAP,EAA0B1a,OAA1B,CAAtC;IACA,IAAI84B,eAAe,GAAG,IAAIr6B,SAAJ,CAAc,mBAAd,CAAtB;IACAktB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtB6lB,eAAe,CAAC1lB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsB0lB,eAAtB;EACH;;EACD,IAAI/4B,KAAK,CAACiF,OAAN,KAAkBxD,SAAlB,IAA+BzB,KAAK,CAACiF,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAIiO,IAAI,GAAG9B,2BAA2B,CAACpR,KAAK,CAACiF,OAAP,EAAgBhF,OAAhB,CAA3B,CAAoD+C,QAApD,CAA6D,SAA7D,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACg5B,YAAN,KAAuBv3B,SAAvB,IAAoCzB,KAAK,CAACg5B,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIpN,KAAK,GAAGqN,gCAAgC,CAACj5B,KAAK,CAACg5B,YAAP,EAAqB/4B,OAArB,CAA5C;IACA,IAAIi5B,eAAe,GAAG,IAAIx6B,SAAJ,CAAc,cAAd,CAAtB;IACAktB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBgmB,eAAe,CAAC7lB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsB6lB,eAAtB;EACH;;EACD,IAAIl5B,KAAK,CAACyE,YAAN,KAAuBhD,SAAvB,IAAoCzB,KAAK,CAACyE,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIyO,IAAI,GAAG,IAAIxU,SAAJ,CAAc,cAAd,EAA8B2U,YAA9B,CAA2C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyE,YAApB,CAA3C,EAA8EzB,QAA9E,CAAuF,cAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CA3CD;;AA4CA,IAAIa,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAU9T,KAAV,EAAiBC,OAAjB,EAA0B;EAC1D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,WAAd,CAAf;;EACA,IAAIsB,KAAK,CAACm5B,KAAN,KAAgB13B,SAAhB,IAA6BzB,KAAK,CAACm5B,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAIjmB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,OAAd,EAAuB2U,YAAvB,CAAoC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACm5B,KAAP,CAApB,CAApC,EAAwEn2B,QAAxE,CAAiF,OAAjF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACorB,GAAN,KAAc3pB,SAAd,IAA2BzB,KAAK,CAACorB,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIlY,IAAI,GAAG,IAAIxU,SAAJ,CAAc,KAAd,EAAqB2U,YAArB,CAAkC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACorB,GAAP,CAApB,CAAlC,EAAoEpoB,QAApE,CAA6E,KAA7E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIqlB,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUt4B,KAAV,EAAiBC,OAAjB,EAA0B;EACjE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,kBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACuT,kBAAN,KAA6B9R,SAA7B,IAA0CzB,KAAK,CAACuT,kBAAN,KAA6B,IAA3E,EAAiF;IAC7E,IAAIL,IAAI,GAAGM,sCAAsC,CAACxT,KAAK,CAACuT,kBAAP,EAA2BtT,OAA3B,CAAtC,CAA0E+C,QAA1E,CAAmF,oBAAnF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACsT,cAAN,KAAyB7R,SAAzB,IAAsCzB,KAAK,CAACsT,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIJ,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsT,cAApB,CADP,EAENtQ,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACoT,UAAN,KAAqB3R,SAArB,IAAkCzB,KAAK,CAACoT,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIF,IAAI,GAAG,IAAIxU,SAAJ,CAAc,YAAd,EAA4B2U,YAA5B,CAAyC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACoT,UAApB,CAAzC,EAA0EpQ,QAA1E,CAAmF,YAAnF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACyT,mBAAN,KAA8BhS,SAA9B,IAA2CzB,KAAK,CAACyT,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAIP,IAAI,GAAGQ,uCAAuC,CAAC1T,KAAK,CAACyT,mBAAP,EAA4BxT,OAA5B,CAAvC,CAA4E+C,QAA5E,CAAqF,qBAArF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CArBD;;AAsBA,IAAImmB,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUp5B,KAAV,EAAiBC,OAAjB,EAA0B;EAC9E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,+BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACq5B,YAAN,KAAuB53B,SAAvB,IAAoCzB,KAAK,CAACq5B,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAInmB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,sBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACq5B,YAApB,CADP,EAENr2B,QAFM,CAEG,cAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACs5B,cAAN,KAAyB73B,SAAzB,IAAsCzB,KAAK,CAACs5B,cAAN,KAAyB,IAAnE,EAAyE;IACrE,IAAIpmB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACs5B,cAApB,CADP,EAENt2B,QAFM,CAEG,gBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAI/D,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUlP,KAAV,EAAiBC,OAAjB,EAA0B;EAClF,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,mCAAd,CAAf;;EACA,IAAIsB,KAAK,CAACic,KAAN,KAAgBxa,SAAhB,IAA6BzB,KAAK,CAACic,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI2P,KAAK,GAAG2N,6CAA6C,CAACv5B,KAAK,CAACic,KAAP,EAAchc,OAAd,CAAzD;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,MAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,OAAOD,QAAP;AACH,CAVD;;AAWA,IAAIumB,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUx5B,KAAV,EAAiBC,OAAjB,EAA0B;EACzE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,0BAAd,CAAf;;EACA,IAAIsB,KAAK,CAACy5B,kCAAN,KAA6Ch4B,SAA7C,IAA0DzB,KAAK,CAACy5B,kCAAN,KAA6C,IAA3G,EAAiH;IAC7G,IAAIvmB,IAAI,GAAGkmB,iDAAiD,CAACp5B,KAAK,CAACy5B,kCAAP,EAA2Cx5B,OAA3C,CAAjD,CAAqG+C,QAArG,CAA8G,oCAA9G,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC6E,gBAAN,KAA2BpD,SAA3B,IAAwCzB,KAAK,CAAC6E,gBAAN,KAA2B,IAAvE,EAA6E;IACzE,IAAIqO,IAAI,GAAG,IAAIxU,SAAJ,CAAc,kBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAAC6E,gBAAP,CAApB,CADP,EAEN7B,QAFM,CAEG,kBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAbD;;AAcA,IAAIsmB,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUv5B,KAAV,EAAiBC,OAAjB,EAA0B;EAC1E,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGsmB,4CAA4C,CAACpN,KAAD,EAAQnsB,OAAR,CAAvD;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAI40B,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAU53B,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC05B,sBAAN,KAAiCj4B,SAAjC,IAA8CzB,KAAK,CAAC05B,sBAAN,KAAiC,IAAnF,EAAyF;IACrF,IAAIxmB,IAAI,GAAGymB,0CAA0C,CAAC35B,KAAK,CAAC05B,sBAAP,EAA+Bz5B,OAA/B,CAA1C,CAAkF+C,QAAlF,CAA2F,wBAA3F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC45B,oBAAN,KAA+Bn4B,SAA/B,IAA4CzB,KAAK,CAAC45B,oBAAN,KAA+B,IAA/E,EAAqF;IACjF,IAAI1mB,IAAI,GAAGmkB,wCAAwC,CAACr3B,KAAK,CAAC45B,oBAAP,EAA6B35B,OAA7B,CAAxC,CAA8E+C,QAA9E,CAAuF,sBAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAImgB,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAUpzB,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC65B,KAAN,KAAgBp4B,SAAhB,IAA6BzB,KAAK,CAAC65B,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI3mB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,aAAd,EAA6B2U,YAA7B,CAA0C,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC65B,KAApB,CAA1C,EAAsE72B,QAAtE,CAA+E,OAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI0mB,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAU35B,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,wBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,8BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CADP,EAENtX,QAFM,CAEG,QAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CATD;;AAUA,IAAIigB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAUlzB,KAAV,EAAiBC,OAAjB,EAA0B;EACtD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,QAAd,CAAf;EACA,OAAOuU,QAAP;AACH,CAHD;;AAIA,IAAI4Z,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAU7sB,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC85B,UAAN,KAAqBr4B,SAArB,IAAkCzB,KAAK,CAAC85B,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAI5mB,IAAI,GAAG6mB,kDAAkD,CAAC/5B,KAAK,CAAC85B,UAAP,EAAmB75B,OAAnB,CAAlD,CAA8E+C,QAA9E,CAAuF,YAAvF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAPD;;AAQA,IAAI8mB,kDAAkD,GAAG,SAArDA,kDAAqD,CAAU/5B,KAAV,EAAiBC,OAAjB,EAA0B;EAC/E,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,gCAAd,CAAf;;EACA,IAAIsB,KAAK,CAACg6B,mBAAN,KAA8Bv4B,SAA9B,IAA2CzB,KAAK,CAACg6B,mBAAN,KAA8B,IAA7E,EAAmF;IAC/E,IAAI9mB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,mCAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACg6B,mBAApB,CADP,EAENh3B,QAFM,CAEG,qBAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqyB,WAAN,KAAsB5wB,SAAtB,IAAmCzB,KAAK,CAACqyB,WAAN,KAAsB,IAA7D,EAAmE;IAC/D,IAAInf,IAAI,GAAG4Z,8CAA8C,CAAC9sB,KAAK,CAACqyB,WAAP,EAAoBpyB,OAApB,CAA9C,CAA2E+C,QAA3E,CAAoF,aAApF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAbD;;AAcA,IAAIka,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAUntB,KAAV,EAAiBC,OAAjB,EAA0B;EACpD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,KAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC6B,GAAN,KAAcJ,SAAd,IAA2BzB,KAAK,CAAC6B,GAAN,KAAc,IAA7C,EAAmD;IAC/C,IAAIqR,IAAI,GAAG,IAAIxU,SAAJ,CAAc,WAAd,EAA2B2U,YAA3B,CAAwC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC6B,GAApB,CAAxC,EAAkEmB,QAAlE,CAA2E,KAA3E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC6wB,KAAN,KAAgBpvB,SAAhB,IAA6BzB,KAAK,CAAC6wB,KAAN,KAAgB,IAAjD,EAAuD;IACnD,IAAI3d,IAAI,GAAG,IAAIxU,SAAJ,CAAc,OAAd,EAAuB2U,YAAvB,CAAoC,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC6wB,KAApB,CAApC,EAAgE7tB,QAAhE,CAAyE,OAAzE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAI7B,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUpR,KAAV,EAAiBC,OAAjB,EAA0B;EACxD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC6e,MAAN,KAAiBpd,SAAjB,IAA8BzB,KAAK,CAAC6e,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI+M,KAAK,GAAGa,0BAA0B,CAACzsB,KAAK,CAAC6e,MAAP,EAAe5e,OAAf,CAAtC;IACA,IAAIg6B,eAAe,GAAG,IAAIv7B,SAAJ,CAAc,QAAd,CAAtB;IACAktB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtB+mB,eAAe,CAAC5mB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsB4mB,eAAtB;EACH;;EACD,OAAOhnB,QAAP;AACH,CAXD;;AAYA,IAAIwZ,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAUzsB,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGia,uBAAuB,CAACf,KAAD,EAAQnsB,OAAR,CAAlC;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,KAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIk3B,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAUl6B,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,aAAd,CAAf;;EACA,IAAIsB,KAAK,CAACkxB,OAAN,KAAkBzvB,SAAlB,IAA+BzB,KAAK,CAACkxB,OAAN,KAAkB,IAArD,EAA2D;IACvD,IAAIhe,IAAI,GAAGie,2BAA2B,CAACnxB,KAAK,CAACkxB,OAAP,EAAgBjxB,OAAhB,CAA3B,CAAoD+C,QAApD,CAA6D,SAA7D,CAAX;IACAkQ,IAAI,CAACjQ,YAAL,CAAkB,WAAlB,EAA+B,2CAA/B;IACAgQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACoxB,UAAN,KAAqB3vB,SAArB,IAAkCzB,KAAK,CAACoxB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAIle,IAAI,GAAG,IAAIxU,SAAJ,CAAc,sBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACoxB,UAApB,CADP,EAENpuB,QAFM,CAEG,YAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAdD;;AAeA,IAAI8hB,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAU/0B,KAAV,EAAiBC,OAAjB,EAA0B;EAC7D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGgnB,+BAA+B,CAAC9N,KAAD,EAAQnsB,OAAR,CAA1C;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,OAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIm3B,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUn6B,KAAV,EAAiBC,OAAjB,EAA0B;EACxD,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,SAAd,CAAf;;EACA,IAAIsB,KAAK,CAACovB,IAAN,KAAe3tB,SAAf,IAA4BzB,KAAK,CAACovB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIlc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,wBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACovB,IAAP,CAApB,CADP,EAENpsB,QAFM,CAEG,MAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACwrB,UAAN,KAAqB/pB,SAArB,IAAkCzB,KAAK,CAACwrB,UAAN,KAAqB,IAA3D,EAAiE;IAC7D,IAAItY,IAAI,GAAG,IAAIxU,SAAJ,CAAc,8BAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACwrB,UAApB,CADP,EAENxoB,QAFM,CAEG,YAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAfD;;AAgBA,IAAImf,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAUpyB,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGinB,2BAA2B,CAAC/N,KAAD,EAAQnsB,OAAR,CAAtC;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIo3B,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUp6B,KAAV,EAAiBC,OAAjB,EAA0B;EACnE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,oBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACyG,EAAN,KAAahF,SAAb,IAA0BzB,KAAK,CAACyG,EAAN,KAAa,IAA3C,EAAiD;IAC7C,IAAIyM,IAAI,GAAG,IAAIxU,SAAJ,CAAc,gBAAd,EAAgC2U,YAAhC,CAA6C,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyG,EAApB,CAA7C,EAAsEzD,QAAtE,CAA+E,IAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACq6B,QAAN,KAAmB54B,SAAnB,IAAgCzB,KAAK,CAACq6B,QAAN,KAAmB,IAAvD,EAA6D;IACzD,IAAInnB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,UAAd,EAA0B2U,YAA1B,CAAuC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACq6B,QAApB,CAAvC,EAAsEr3B,QAAtE,CAA+E,OAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAAC2zB,MAAN,KAAiBlyB,SAAjB,IAA8BzB,KAAK,CAAC2zB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAI/H,KAAK,GAAG8E,6BAA6B,CAAC1wB,KAAK,CAAC2zB,MAAP,EAAe1zB,OAAf,CAAzC;IACA2rB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBA,IAAI,GAAGA,IAAI,CAAClQ,QAAL,CAAc,OAAd,CAAP;MACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;IACH,CAHD;EAIH;;EACD,IAAIlT,KAAK,CAAC0sB,MAAN,KAAiBjrB,SAAjB,IAA8BzB,KAAK,CAAC0sB,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIxZ,IAAI,GAAG0gB,mDAAmD,CAAC5zB,KAAK,CAAC0sB,MAAP,EAAezsB,OAAf,CAAnD,CAA2E+C,QAA3E,CAAoF,QAApF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAtBD;;AAuBA,IAAI0iB,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAU31B,KAAV,EAAiBC,OAAjB,EAA0B;EACvE,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGknB,sCAAsC,CAAChO,KAAD,EAAQnsB,OAAR,CAAjD;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIs3B,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUt6B,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,YAAd,CAAf;;EACA,IAAIsB,KAAK,CAAC+zB,IAAN,KAAetyB,SAAf,IAA4BzB,KAAK,CAAC+zB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAI7gB,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAAC+zB,IAAN,CAAW3uB,WAAX,GAAyBtD,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,IAAyC,GAAvD,CADP,EAENkB,QAFM,CAEG,MAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACovB,IAAN,KAAe3tB,SAAf,IAA4BzB,KAAK,CAACovB,IAAN,KAAe,IAA/C,EAAqD;IACjD,IAAIlc,IAAI,GAAG,IAAIxU,SAAJ,CAAc,MAAd,EAAsB2U,YAAtB,CAAmC,IAAIzU,SAAJ,CAAc+sB,MAAM,CAAC3rB,KAAK,CAACovB,IAAP,CAApB,CAAnC,EAAsEpsB,QAAtE,CAA+E,MAA/E,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACyE,YAAN,KAAuBhD,SAAvB,IAAoCzB,KAAK,CAACyE,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIyO,IAAI,GAAG,IAAIxU,SAAJ,CAAc,wBAAd,EACN2U,YADM,CACO,IAAIzU,SAAJ,CAAcoB,KAAK,CAACyE,YAApB,CADP,EAENzB,QAFM,CAEG,cAFH,CAAX;IAGAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAnBD;;AAoBA,IAAImhB,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUp0B,KAAV,EAAiBC,OAAjB,EAA0B;EAC/D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGonB,8BAA8B,CAAClO,KAAD,EAAQnsB,OAAR,CAAzC;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,QAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIi2B,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAUj5B,KAAV,EAAiBC,OAAjB,EAA0B;EAC7D,OAAOD,KAAK,CACPksB,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,IAAIlZ,IAAI,GAAGgiB,iCAAiC,CAAC9I,KAAD,EAAQnsB,OAAR,CAA5C;IACA,OAAOiT,IAAI,CAAClQ,QAAL,CAAc,eAAd,CAAP;EACH,CARM,CAAP;AASH,CAVD;;AAWA,IAAIuO,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUvR,KAAV,EAAiBC,OAAjB,EAA0B;EACxE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,yBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACif,SAAN,KAAoBxd,SAApB,IAAiCzB,KAAK,CAACif,SAAN,KAAoB,IAAzD,EAA+D;IAC3D,IAAI/L,IAAI,GAAG,IAAIxU,SAAJ,CAAc,WAAd,EAA2B2U,YAA3B,CAAwC,IAAIzU,SAAJ,CAAcoB,KAAK,CAACif,SAApB,CAAxC,EAAwEjc,QAAxE,CAAiF,WAAjF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACsa,MAAN,KAAiB7Y,SAAjB,IAA8BzB,KAAK,CAACsa,MAAN,KAAiB,IAAnD,EAAyD;IACrD,IAAIpH,IAAI,GAAG,IAAIxU,SAAJ,CAAc,wBAAd,EAAwC2U,YAAxC,CAAqD,IAAIzU,SAAJ,CAAcoB,KAAK,CAACsa,MAApB,CAArD,EAAkFtX,QAAlF,CAA2F,QAA3F,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,OAAOD,QAAP;AACH,CAXD;;AAYA,IAAIvB,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAU1R,KAAV,EAAiBC,OAAjB,EAA0B;EACrE,IAAIgT,QAAQ,GAAG,IAAIvU,SAAJ,CAAc,sBAAd,CAAf;;EACA,IAAIsB,KAAK,CAACof,aAAN,KAAwB3d,SAAxB,IAAqCzB,KAAK,CAACof,aAAN,KAAwB,IAAjE,EAAuE;IACnE,IAAIlM,IAAI,GAAGsd,iCAAiC,CAACxwB,KAAK,CAACof,aAAP,EAAsBnf,OAAtB,CAAjC,CAAgE+C,QAAhE,CAAyE,eAAzE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACqf,aAAN,KAAwB5d,SAAxB,IAAqCzB,KAAK,CAACqf,aAAN,KAAwB,IAAjE,EAAuE;IACnE,IAAInM,IAAI,GAAGue,iCAAiC,CAACzxB,KAAK,CAACqf,aAAP,EAAsBpf,OAAtB,CAAjC,CAAgE+C,QAAhE,CAAyE,eAAzE,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACsf,qBAAN,KAAgC7d,SAAhC,IAA6CzB,KAAK,CAACsf,qBAAN,KAAgC,IAAjF,EAAuF;IACnF,IAAIpM,IAAI,GAAGkkB,yCAAyC,CAACp3B,KAAK,CAACsf,qBAAP,EAA8Brf,OAA9B,CAAzC,CAAgF+C,QAAhF,CAAyF,uBAAzF,CAAX;IACAiQ,QAAQ,CAACI,YAAT,CAAsBH,IAAtB;EACH;;EACD,IAAIlT,KAAK,CAACuf,YAAN,KAAuB9d,SAAvB,IAAoCzB,KAAK,CAACuf,YAAN,KAAuB,IAA/D,EAAqE;IACjE,IAAIqM,KAAK,GAAG+M,gCAAgC,CAAC34B,KAAK,CAACuf,YAAP,EAAqBtf,OAArB,CAA5C;IACA,IAAIs6B,eAAe,GAAG,IAAI77B,SAAJ,CAAc,cAAd,CAAtB;IACAktB,KAAK,CAAC7pB,GAAN,CAAU,UAAUmR,IAAV,EAAgB;MACtBqnB,eAAe,CAAClnB,YAAhB,CAA6BH,IAA7B;IACH,CAFD;IAGAD,QAAQ,CAACI,YAAT,CAAsBknB,eAAtB;EACH;;EACD,OAAOtnB,QAAP;AACH,CAvBD;;AAwBA,IAAIunB,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUjlB,MAAV,EAAkBtV,OAAlB,EAA2B;EAClF,IAAIqC,QAAQ,GAAG;IACXopB,mBAAmB,EAAEjqB;EADV,CAAf;;EAGA,IAAI8T,MAAM,CAAC,qBAAD,CAAN,KAAkC9T,SAAtC,EAAiD;IAC7Ca,QAAQ,CAACopB,mBAAT,GAA+BptB,kBAAkB,CAACiX,MAAM,CAAC,qBAAD,CAAP,CAAjD;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIm4B,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUllB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5E,IAAIqC,QAAQ,GAAG;IACXoY,KAAK,EAAEjZ;EADI,CAAf;;EAGA,IAAI8T,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACoY,KAAT,GAAiBpd,cAAc,CAACiY,MAAM,CAAC,OAAD,CAAP,CAA/B;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIo4B,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUnlB,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO9uB,cAAc,CAAC8uB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIuO,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUplB,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO9uB,cAAc,CAAC8uB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIwO,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUrlB,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO9uB,cAAc,CAAC8uB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIyO,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUtlB,MAAV,EAAkBtV,OAAlB,EAA2B;EACxE,IAAIqC,QAAQ,GAAG;IACX+K,MAAM,EAAE5L,SADG;IAEX+qB,IAAI,EAAE/qB;EAFK,CAAf;;EAIA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC2X,GAAP,KAAe,EAAnB,EAAuB;IACnB5qB,QAAQ,CAACkqB,IAAT,GAAgB,EAAhB;EACH,CAFD,MAGK,IAAIjX,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAClCa,QAAQ,CAACkqB,IAAT,GAAgB1N,4BAA4B,CAAClhB,sBAAsB,CAAC2X,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwCtV,OAAxC,CAA5C;EACH;;EACD,OAAOqC,QAAP;AACH,CAfD;;AAgBA,IAAI0Y,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUzF,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1E,IAAIqC,QAAQ,GAAG;IACXmE,EAAE,EAAEhF,SADO;IAEXirB,MAAM,EAAEjrB,SAFG;IAGXmrB,oBAAoB,EAAEnrB;EAHX,CAAf;;EAKA,IAAI8T,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAACmE,EAAT,GAAcnJ,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAACmX,MAAP,KAAkB,EAAtB,EAA0B,CACzB,CADD,MAEK,IAAInX,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IACrCa,QAAQ,CAACoqB,MAAT,GAAkBoO,qCAAqC,CAACt9B,aAAa,CAAC+X,MAAM,CAAC,QAAD,CAAP,CAAd,EAAkCtV,OAAlC,CAAvD;EACH;;EACD,IAAIsV,MAAM,CAAC,sBAAD,CAAN,KAAmC9T,SAAvC,EAAkD;IAC9Ca,QAAQ,CAACsqB,oBAAT,GAAgCmO,0CAA0C,CAACxlB,MAAM,CAAC,sBAAD,CAAP,EAAiCtV,OAAjC,CAA1E;EACH;;EACD,OAAOqC,QAAP;AACH,CAlBD;;AAmBA,IAAIkgB,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUjN,MAAV,EAAkBtV,OAAlB,EAA2B;EAC9E,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOpR,4CAA4C,CAACoR,KAAD,EAAQnsB,OAAR,CAAnD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI+6B,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUzlB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC9E,IAAIqC,QAAQ,GAAG;IACXyqB,mBAAmB,EAAEtrB;EADV,CAAf;;EAGA,IAAI8T,MAAM,CAAC,qBAAD,CAAN,KAAkC9T,SAAtC,EAAiD;IAC7Ca,QAAQ,CAACyqB,mBAAT,GAA+BkO,kDAAkD,CAAC1lB,MAAM,CAAC,qBAAD,CAAP,EAAgCtV,OAAhC,CAAjF;EACH;;EACD,OAAOqC,QAAP;AACH,CARD;;AASA,IAAIw4B,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAUvlB,MAAV,EAAkBtV,OAAlB,EAA2B;EACnE,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChC,OAAO;MACH4L,MAAM,EAAE/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP;IADnB,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7B,OAAO;MACHyrB,GAAG,EAAEgO,yBAAyB,CAAC3lB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB;IAD3B,CAAP;EAGH;;EACD,IAAIsV,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7B,OAAO;MACH2rB,GAAG,EAAEyN,0CAA0C,CAACtlB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB;IAD5C,CAAP;EAGH;;EACD,OAAO;IAAEorB,QAAQ,EAAE7lB,MAAM,CAACokB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CAjBD;;AAkBA,IAAI0lB,kDAAkD,GAAG,SAArDA,kDAAqD,CAAU1lB,MAAV,EAAkBtV,OAAlB,EAA2B;EAChF,IAAIqC,QAAQ,GAAG;IACXgrB,MAAM,EAAE7rB,SADG;IAEX8rB,eAAe,EAAE9rB,SAFN;IAGXD,MAAM,EAAEC,SAHG;IAIX4L,MAAM,EAAE5L;EAJG,CAAf;;EAMA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgrB,MAAT,GAAkBhwB,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,iBAAD,CAAN,KAA8B9T,SAAlC,EAA6C;IACzCa,QAAQ,CAACirB,eAAT,GAA2BjwB,cAAc,CAACiY,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACd,MAAT,GAAkBlE,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOjT,QAAP;AACH,CApBD;;AAqBA,IAAI64B,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAU5lB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1D,IAAIqC,QAAQ,GAAG;IACX+hB,IAAI,EAAE5iB,SADK;IAEX25B,YAAY,EAAE35B;EAFH,CAAf;;EAIA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC+hB,IAAT,GAAgB/mB,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAAC84B,YAAT,GAAwBl+B,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIkhB,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAUjO,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3D,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO+O,4BAA4B,CAAC/O,KAAD,EAAQnsB,OAAR,CAAnC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI0gB,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUpL,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5D,IAAIqC,QAAQ,GAAG;IACXC,aAAa,EAAEd,SADJ;IAEXe,cAAc,EAAEf,SAFL;IAGXgB,YAAY,EAAEhB,SAHH;IAIXiB,cAAc,EAAEjB;EAJL,CAAf;;EAMA,IAAI8T,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IACvCa,QAAQ,CAACC,aAAT,GAAyBjF,cAAc,CAACiY,MAAM,CAAC,eAAD,CAAP,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACE,cAAT,GAA0BlF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACG,YAAT,GAAwBnF,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACI,cAAT,GAA0BpF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOjT,QAAP;AACH,CApBD;;AAqBA,IAAI+4B,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAU9lB,MAAV,EAAkBtV,OAAlB,EAA2B;EACzE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO9uB,cAAc,CAAC8uB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIkP,kCAAkC,GAAG,SAArCA,kCAAqC,CAAU/lB,MAAV,EAAkBtV,OAAlB,EAA2B;EAChE,IAAIqC,QAAQ,GAAG;IACX+K,MAAM,EAAE5L;EADG,CAAf;;EAGA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIyhB,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUxO,MAAV,EAAkBtV,OAAlB,EAA2B;EACpE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOkP,kCAAkC,CAAClP,KAAD,EAAQnsB,OAAR,CAAzC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIs7B,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAUhmB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC7D,IAAIqC,QAAQ,GAAG;IACXurB,2BAA2B,EAAEpsB,SADlB;IAEXqsB,eAAe,EAAErsB;EAFN,CAAf;;EAIA,IAAI8T,MAAM,CAAC,6BAAD,CAAN,KAA0C9T,SAA9C,EAAyD;IACrDa,QAAQ,CAACurB,2BAAT,GAAuCvwB,cAAc,CAACiY,MAAM,CAAC,6BAAD,CAAP,CAArD;EACH;;EACD,IAAIA,MAAM,CAAC,iBAAD,CAAN,KAA8B9T,SAAlC,EAA6C;IACzCa,QAAQ,CAACwrB,eAAT,GAA2BxwB,cAAc,CAACiY,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIk5B,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUjmB,MAAV,EAAkBtV,OAAlB,EAA2B;EACrE,IAAIqC,QAAQ,GAAG,EAAf;EACA,OAAOA,QAAP;AACH,CAHD;;AAIA,IAAI8U,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAU7B,MAAV,EAAkBtV,OAAlB,EAA2B;EACpE,IAAIqC,QAAQ,GAAG;IACXsS,IAAI,EAAEnT,SADK;IAEXqT,YAAY,EAAErT,SAFH;IAGXc,aAAa,EAAEd,SAHJ;IAIXe,cAAc,EAAEf,SAJL;IAKXgB,YAAY,EAAEhB,SALH;IAMXiB,cAAc,EAAEjB;EANL,CAAf;;EAQA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACsS,IAAT,GAAgBtX,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACwS,YAAT,GAAwB5X,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IACvCa,QAAQ,CAACC,aAAT,GAAyBjF,cAAc,CAACiY,MAAM,CAAC,eAAD,CAAP,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACE,cAAT,GAA0BlF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACG,YAAT,GAAwBnF,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACI,cAAT,GAA0BpF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOjT,QAAP;AACH,CA5BD;;AA6BA,IAAIgoB,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAU/U,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,IAAIqC,QAAQ,GAAG;IACXsS,IAAI,EAAEnT,SADK;IAEXqT,YAAY,EAAErT,SAFH;IAGXc,aAAa,EAAEd,SAHJ;IAIXe,cAAc,EAAEf,SAJL;IAKXgB,YAAY,EAAEhB,SALH;IAMXiB,cAAc,EAAEjB;EANL,CAAf;;EAQA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACsS,IAAT,GAAgBtX,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACwS,YAAT,GAAwB5X,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IACvCa,QAAQ,CAACC,aAAT,GAAyBjF,cAAc,CAACiY,MAAM,CAAC,eAAD,CAAP,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACE,cAAT,GAA0BlF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACG,YAAT,GAAwBnF,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACI,cAAT,GAA0BpF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOjT,QAAP;AACH,CA5BD;;AA6BA,IAAIm5B,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUlmB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5D,IAAIqC,QAAQ,GAAG;IACX2rB,EAAE,EAAExsB,SADO;IAEXysB,cAAc,EAAEzsB,SAFL;IAGX0sB,cAAc,EAAE1sB,SAHL;IAIX2sB,cAAc,EAAE3sB,SAJL;IAKX4sB,aAAa,EAAE5sB,SALJ;IAMX8sB,aAAa,EAAE9sB;EANJ,CAAf;;EAQA,IAAI8T,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC2rB,EAAT,GAAc3wB,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAACmmB,aAAP,KAAyB,EAA7B,EAAiC;IAC7Bp5B,QAAQ,CAAC4rB,cAAT,GAA0B,EAA1B;EACH,CAFD,MAGK,IAAI3Y,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IAC5Ca,QAAQ,CAAC4rB,cAAT,GAA0BwM,oCAAoC,CAAC98B,sBAAsB,CAAC2X,MAAM,CAAC,eAAD,CAAP,CAAvB,EAAkDtV,OAAlD,CAA9D;EACH;;EACD,IAAIsV,MAAM,CAAComB,aAAP,KAAyB,EAA7B,EAAiC;IAC7Br5B,QAAQ,CAAC6rB,cAAT,GAA0B,EAA1B;EACH,CAFD,MAGK,IAAI5Y,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IAC5Ca,QAAQ,CAAC6rB,cAAT,GAA0BwM,oCAAoC,CAAC/8B,sBAAsB,CAAC2X,MAAM,CAAC,eAAD,CAAP,CAAvB,EAAkDtV,OAAlD,CAA9D;EACH;;EACD,IAAIsV,MAAM,CAACqmB,aAAP,KAAyB,EAA7B,EAAiC;IAC7Bt5B,QAAQ,CAAC8rB,cAAT,GAA0B,EAA1B;EACH,CAFD,MAGK,IAAI7Y,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IAC5Ca,QAAQ,CAAC8rB,cAAT,GAA0BwM,oCAAoC,CAACh9B,sBAAsB,CAAC2X,MAAM,CAAC,eAAD,CAAP,CAAvB,EAAkDtV,OAAlD,CAA9D;EACH;;EACD,IAAIsV,MAAM,CAACsmB,YAAP,KAAwB,EAA5B,EAAgC;IAC5Bv5B,QAAQ,CAAC+rB,aAAT,GAAyB,EAAzB;EACH,CAFD,MAGK,IAAI9Y,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IAC3Ca,QAAQ,CAAC+rB,aAAT,GAAyByN,mCAAmC,CAACl+B,sBAAsB,CAAC2X,MAAM,CAAC,cAAD,CAAP,CAAvB,EAAiDtV,OAAjD,CAA5D;EACH;;EACD,IAAIsV,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IACvCa,QAAQ,CAACisB,aAAT,GAAyBjwB,kBAAkB,CAACiX,MAAM,CAAC,eAAD,CAAP,CAA3C;EACH;;EACD,OAAOjT,QAAP;AACH,CAxCD;;AAyCA,IAAI+Y,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAU9F,MAAV,EAAkBtV,OAAlB,EAA2B;EAC7D,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOqP,8BAA8B,CAACrP,KAAD,EAAQnsB,OAAR,CAArC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI87B,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUxmB,MAAV,EAAkBtV,OAAlB,EAA2B;EACpE,IAAIqC,QAAQ,GAAG;IACX6sB,IAAI,EAAE1tB,SADK;IAEX2tB,IAAI,EAAE3tB,SAFK;IAGX4tB,KAAK,EAAE5tB;EAHI,CAAf;;EAKA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC6sB,IAAT,GAAgB7xB,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC8sB,IAAT,GAAgB9wB,kBAAkB,CAACiX,MAAM,CAAC,MAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAAC+sB,KAAT,GAAiB/wB,kBAAkB,CAACiX,MAAM,CAAC,OAAD,CAAP,CAAnC;EACH;;EACD,OAAOjT,QAAP;AACH,CAhBD;;AAiBA,IAAI05B,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUzmB,MAAV,EAAkBtV,OAAlB,EAA2B;EACjE,IAAIqC,QAAQ,GAAG;IACXT,GAAG,EAAEJ,SADM;IAEX0G,SAAS,EAAE1G,SAFA;IAGXkT,YAAY,EAAElT,SAHH;IAIXw6B,qBAAqB,EAAEx6B;EAJZ,CAAf;;EAMA,IAAI8T,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACiY,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAAC6F,SAAT,GAAqB7K,cAAc,CAACiY,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACqS,YAAT,GAAwB3W,cAAc,CAACuX,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,uBAAD,CAAN,KAAoC9T,SAAxC,EAAmD;IAC/Ca,QAAQ,CAAC25B,qBAAT,GAAiC3+B,cAAc,CAACiY,MAAM,CAAC,uBAAD,CAAP,CAA/C;EACH;;EACD,OAAOjT,QAAP;AACH,CApBD;;AAqBA,IAAIwX,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUvE,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO4P,mCAAmC,CAAC5P,KAAD,EAAQnsB,OAAR,CAA1C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIi8B,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAU3mB,MAAV,EAAkBtV,OAAlB,EAA2B;EACrE,IAAIqC,QAAQ,GAAG;IACXoY,KAAK,EAAEjZ,SADI;IAEXI,GAAG,EAAEJ,SAFM;IAGX0G,SAAS,EAAE1G,SAHA;IAIX06B,QAAQ,EAAE16B,SAJC;IAKXqT,YAAY,EAAErT;EALH,CAAf;;EAOA,IAAI8T,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACoY,KAAT,GAAiBG,2BAA2B,CAACtF,MAAM,CAAC,OAAD,CAAP,EAAkBtV,OAAlB,CAA5C;EACH;;EACD,IAAIsV,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACiY,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAAC6F,SAAT,GAAqB7K,cAAc,CAACiY,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAAC65B,QAAT,GAAoBn+B,cAAc,CAACuX,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACwS,YAAT,GAAwB5X,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,OAAOjT,QAAP;AACH,CAxBD;;AAyBA,IAAI85B,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU7mB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3E,IAAIqC,QAAQ,GAAG;IACXgY,MAAM,EAAE7Y;EADG,CAAf;;EAGA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAI2iB,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAU1P,MAAV,EAAkBtV,OAAlB,EAA2B;EACjE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO8P,uCAAuC,CAAC9P,KAAD,EAAQnsB,OAAR,CAA9C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIo8B,iCAAiC,GAAG,SAApCA,iCAAoC,CAAU9mB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC/D,IAAIqC,QAAQ,GAAG;IACXd,MAAM,EAAEC,SADG;IAEXkuB,OAAO,EAAEluB,SAFE;IAGXgD,YAAY,EAAEhD,SAHH;IAIXmuB,wBAAwB,EAAEnuB,SAJf;IAKXouB,uBAAuB,EAAEpuB,SALd;IAMXsuB,eAAe,EAAEtuB,SANN;IAOXwuB,OAAO,EAAExuB;EAPE,CAAf;;EASA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACd,MAAT,GAAkBlE,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAACqtB,OAAT,GAAmBryB,cAAc,CAACiY,MAAM,CAAC,SAAD,CAAP,CAAjC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACmC,YAAT,GAAwBnH,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,0BAAD,CAAN,KAAuC9T,SAA3C,EAAsD;IAClDa,QAAQ,CAACstB,wBAAT,GAAoC6K,8CAA8C,CAACllB,MAAM,CAAC,0BAAD,CAAP,EAAqCtV,OAArC,CAAlF;EACH;;EACD,IAAIsV,MAAM,CAAC,yBAAD,CAAN,KAAsC9T,SAA1C,EAAqD;IACjDa,QAAQ,CAACutB,uBAAT,GAAmCyM,6CAA6C,CAAC/mB,MAAM,CAAC,yBAAD,CAAP,EAAoCtV,OAApC,CAAhF;EACH;;EACD,IAAIsV,MAAM,CAAC,iBAAD,CAAN,KAA8B9T,SAAlC,EAA6C;IACzCa,QAAQ,CAACytB,eAAT,GAA2BwM,qCAAqC,CAAChnB,MAAM,CAAC,iBAAD,CAAP,EAA4BtV,OAA5B,CAAhE;EACH;;EACD,IAAIsV,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAAC2tB,OAAT,GAAmBuM,6BAA6B,CAACjnB,MAAM,CAAC,SAAD,CAAP,EAAoBtV,OAApB,CAAhD;EACH;;EACD,OAAOqC,QAAP;AACH,CAhCD;;AAiCA,IAAIg6B,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU/mB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3E,IAAIqC,QAAQ,GAAG;IACXiuB,eAAe,EAAE9uB;EADN,CAAf;;EAGA,IAAI8T,MAAM,CAAC,iBAAD,CAAN,KAA8B9T,SAAlC,EAA6C;IACzCa,QAAQ,CAACiuB,eAAT,GAA2BjzB,cAAc,CAACiY,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIm6B,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUlnB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5D,IAAIqC,QAAQ,GAAG,EAAf;EACA,OAAOA,QAAP;AACH,CAHD;;AAIA,IAAIo6B,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAUnnB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1D,IAAIqC,QAAQ,GAAG;IACXT,GAAG,EAAEJ,SADM;IAEX0G,SAAS,EAAE1G,SAFA;IAGXiV,IAAI,EAAEjV,SAHK;IAIXk7B,OAAO,EAAEl7B;EAJE,CAAf;;EAMA,IAAI8T,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACiY,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAAC6F,SAAT,GAAqB7K,cAAc,CAACiY,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACoU,IAAT,GAAgBpZ,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAACq6B,OAAT,GAAmBr/B,cAAc,CAACiY,MAAM,CAAC,SAAD,CAAP,CAAjC;EACH;;EACD,OAAOjT,QAAP;AACH,CApBD;;AAqBA,IAAIkd,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUjK,MAAV,EAAkBtV,OAAlB,EAA2B;EACjE,IAAIqC,QAAQ,GAAG;IACXT,GAAG,EAAEJ;EADM,CAAf;;EAGA,IAAI8T,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACiY,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIyX,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAUxE,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1D,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOsQ,4BAA4B,CAACtQ,KAAD,EAAQnsB,OAAR,CAAnC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAImd,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU7H,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5E,IAAIqC,QAAQ,GAAG,EAAf;EACA,OAAOA,QAAP;AACH,CAHD;;AAIA,IAAIs6B,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAUrnB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC7D,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO9uB,cAAc,CAAC8uB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIyQ,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAUtnB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC7E,IAAIqC,QAAQ,GAAG;IACXgY,MAAM,EAAE7Y;EADG,CAAf;;EAGA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIw5B,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUvmB,MAAV,EAAkBtV,OAAlB,EAA2B;EACjE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO9uB,cAAc,CAAC8uB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI0Q,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAUvnB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC9D,IAAIqC,QAAQ,GAAG;IACX+hB,IAAI,EAAE5iB,SADK;IAEXovB,KAAK,EAAEpvB;EAFI,CAAf;;EAIA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC+hB,IAAT,GAAgB/mB,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACuuB,KAAT,GAAiBvzB,cAAc,CAACiY,MAAM,CAAC,OAAD,CAAP,CAA/B;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIy6B,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUxnB,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO0Q,gCAAgC,CAAC1Q,KAAD,EAAQnsB,OAAR,CAAvC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI2gB,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUrL,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5E,IAAIqC,QAAQ,GAAG;IACX06B,eAAe,EAAEv7B,SADN;IAEXkK,gBAAgB,EAAElK,SAFP;IAGX8jB,oBAAoB,EAAE9jB,SAHX;IAIXiK,QAAQ,EAAEjK,SAJC;IAKX6gB,WAAW,EAAE7gB,SALF;IAMX+jB,KAAK,EAAE/jB;EANI,CAAf;;EAQA,IAAI8T,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACpCa,QAAQ,CAAC06B,eAAT,GAA2B1+B,kBAAkB,CAACiX,MAAM,CAAC,YAAD,CAAP,CAA7C;EACH;;EACD,IAAIA,MAAM,CAAC,kBAAD,CAAN,KAA+B9T,SAAnC,EAA8C;IAC1Ca,QAAQ,CAACqJ,gBAAT,GAA4BrO,cAAc,CAACiY,MAAM,CAAC,kBAAD,CAAP,CAA1C;EACH;;EACD,IAAIA,MAAM,CAAC,sBAAD,CAAN,KAAmC9T,SAAvC,EAAkD;IAC9Ca,QAAQ,CAACijB,oBAAT,GAAgCjoB,cAAc,CAACiY,MAAM,CAAC,sBAAD,CAAP,CAA9C;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAACoJ,QAAT,GAAoBpN,kBAAkB,CAACiX,MAAM,CAAC,UAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,aAAD,CAAN,KAA0B9T,SAA9B,EAAyC;IACrCa,QAAQ,CAACggB,WAAT,GAAuBtkB,cAAc,CAACuX,MAAM,CAAC,aAAD,CAAP,CAArC;EACH;;EACD,IAAIA,MAAM,CAACmQ,IAAP,KAAgB,EAApB,EAAwB;IACpBpjB,QAAQ,CAACkjB,KAAT,GAAiB,EAAjB;EACH,CAFD,MAGK,IAAIjQ,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IACnCa,QAAQ,CAACkjB,KAAT,GAAiByX,+BAA+B,CAACr/B,sBAAsB,CAAC2X,MAAM,CAAC,MAAD,CAAP,CAAvB,EAAyCtV,OAAzC,CAAhD;EACH;;EACD,OAAOqC,QAAP;AACH,CA/BD;;AAgCA,IAAI46B,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAU3nB,MAAV,EAAkBtV,OAAlB,EAA2B;EACzD,IAAIqC,QAAQ,GAAG;IACX4uB,OAAO,EAAEzvB,SADE;IAEX2vB,UAAU,EAAE3vB;EAFD,CAAf;;EAIA,IAAI8T,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAAC4uB,OAAT,GAAmBiM,6BAA6B,CAAC5nB,MAAM,CAAC,SAAD,CAAP,EAAoBtV,OAApB,CAAhD;EACH;;EACD,IAAIsV,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACpCa,QAAQ,CAAC8uB,UAAT,GAAsB9zB,cAAc,CAACiY,MAAM,CAAC,YAAD,CAAP,CAApC;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAI66B,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAU5nB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3D,IAAIqC,QAAQ,GAAG;IACX+uB,WAAW,EAAE5vB,SADF;IAEX6vB,YAAY,EAAE7vB,SAFH;IAGXwsB,EAAE,EAAExsB,SAHO;IAIX8vB,GAAG,EAAE9vB,SAJM;IAKX+vB,IAAI,EAAE/vB;EALK,CAAf;;EAOA,IAAI8T,MAAM,CAAC,aAAD,CAAN,KAA0B9T,SAA9B,EAAyC;IACrCa,QAAQ,CAAC+uB,WAAT,GAAuB/zB,cAAc,CAACiY,MAAM,CAAC,aAAD,CAAP,CAArC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACgvB,YAAT,GAAwBh0B,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC2rB,EAAT,GAAc3wB,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACivB,GAAT,GAAej0B,cAAc,CAACiY,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAACkvB,IAAT,GAAgBl0B,cAAc,CAACiY,MAAM,CAAC,UAAD,CAAP,CAA9B;EACH;;EACD,OAAOjT,QAAP;AACH,CAxBD;;AAyBA,IAAIsY,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAUrF,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1D,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO8Q,2BAA2B,CAAC9Q,KAAD,EAAQnsB,OAAR,CAAlC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIwf,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUlK,MAAV,EAAkBtV,OAAlB,EAA2B;EACjE,IAAIqC,QAAQ,GAAG;IACXovB,MAAM,EAAEjwB;EADG,CAAf;;EAGA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACovB,MAAT,GAAkBp0B,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAImjB,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAUlQ,MAAV,EAAkBtV,OAAlB,EAA2B;EAC7D,IAAIqC,QAAQ,GAAG;IACX2rB,EAAE,EAAExsB,SADO;IAEX4vB,WAAW,EAAE5vB;EAFF,CAAf;;EAIA,IAAI8T,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC2rB,EAAT,GAAc3wB,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,aAAD,CAAN,KAA0B9T,SAA9B,EAAyC;IACrCa,QAAQ,CAAC+uB,WAAT,GAAuB/zB,cAAc,CAACiY,MAAM,CAAC,aAAD,CAAP,CAArC;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAI86B,mDAAmD,GAAG,SAAtDA,mDAAsD,CAAU7nB,MAAV,EAAkBtV,OAAlB,EAA2B;EACjF,IAAIqC,QAAQ,GAAG;IACX+K,MAAM,EAAE5L,SADG;IAEX+qB,IAAI,EAAE/qB;EAFK,CAAf;;EAIA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC2X,GAAP,KAAe,EAAnB,EAAuB;IACnB5qB,QAAQ,CAACkqB,IAAT,GAAgB,EAAhB;EACH,CAFD,MAGK,IAAIjX,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAClCa,QAAQ,CAACkqB,IAAT,GAAgB1N,4BAA4B,CAAClhB,sBAAsB,CAAC2X,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwCtV,OAAxC,CAA5C;EACH;;EACD,OAAOqC,QAAP;AACH,CAfD;;AAgBA,IAAIqZ,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUpG,MAAV,EAAkBtV,OAAlB,EAA2B;EACnF,IAAIqC,QAAQ,GAAG;IACXmE,EAAE,EAAEhF,SADO;IAEXirB,MAAM,EAAEjrB,SAFG;IAGX6Y,MAAM,EAAE7Y,SAHG;IAIX0wB,QAAQ,EAAE1wB;EAJC,CAAf;;EAMA,IAAI8T,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAACmE,EAAT,GAAcnJ,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACoqB,MAAT,GAAkB2Q,8CAA8C,CAAC9nB,MAAM,CAAC,QAAD,CAAP,EAAmBtV,OAAnB,CAAhE;EACH;;EACD,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC+nB,OAAP,KAAmB,EAAvB,EAA2B;IACvBh7B,QAAQ,CAAC6vB,QAAT,GAAoB,EAApB;EACH,CAFD,MAGK,IAAI5c,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACtCa,QAAQ,CAAC6vB,QAAT,GAAoBoL,iCAAiC,CAAC3/B,sBAAsB,CAAC2X,MAAM,CAAC,SAAD,CAAP,CAAvB,EAA4CtV,OAA5C,CAArD;EACH;;EACD,OAAOqC,QAAP;AACH,CAvBD;;AAwBA,IAAIsgB,yDAAyD,GAAG,SAA5DA,yDAA4D,CAAUrN,MAAV,EAAkBtV,OAAlB,EAA2B;EACvF,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOzQ,qDAAqD,CAACyQ,KAAD,EAAQnsB,OAAR,CAA5D;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIo9B,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU9nB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5E,IAAIqC,QAAQ,GAAG;IACX+K,MAAM,EAAE5L,SADG;IAEXyrB,GAAG,EAAEzrB,SAFM;IAGX2rB,GAAG,EAAE3rB;EAHM,CAAf;;EAKA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAAC4qB,GAAT,GAAegO,yBAAyB,CAAC3lB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB,CAAxC;EACH;;EACD,IAAIsV,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAAC8qB,GAAT,GAAegQ,mDAAmD,CAAC7nB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB,CAAlE;EACH;;EACD,OAAOqC,QAAP;AACH,CAhBD;;AAiBA,IAAIwZ,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUvG,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1E,IAAIqC,QAAQ,GAAG;IACX+vB,WAAW,EAAE5wB,SADF;IAEX8wB,SAAS,EAAE9wB,SAFA;IAGXirB,MAAM,EAAEjrB,SAHG;IAIXgF,EAAE,EAAEhF,SAJO;IAKXgxB,sBAAsB,EAAEhxB,SALb;IAMXixB,cAAc,EAAEjxB,SANL;IAOXoxB,QAAQ,EAAEpxB;EAPC,CAAf;;EASA,IAAI8T,MAAM,CAAC,aAAD,CAAN,KAA0B9T,SAA9B,EAAyC;IACrCa,QAAQ,CAAC+vB,WAAT,GAAuBmL,0CAA0C,CAACjoB,MAAM,CAAC,aAAD,CAAP,EAAwBtV,OAAxB,CAAjE;EACH;;EACD,IAAIsV,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAACiwB,SAAT,GAAqBv0B,cAAc,CAACuX,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACoqB,MAAT,GAAkB+Q,qCAAqC,CAACloB,MAAM,CAAC,QAAD,CAAP,EAAmBtV,OAAnB,CAAvD;EACH;;EACD,IAAIsV,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAACmE,EAAT,GAAcnJ,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,wBAAD,CAAN,KAAqC9T,SAAzC,EAAoD;IAChDa,QAAQ,CAACmwB,sBAAT,GAAkCn1B,cAAc,CAACiY,MAAM,CAAC,wBAAD,CAAP,CAAhD;EACH;;EACD,IAAIA,MAAM,CAACmd,cAAP,KAA0B,EAA9B,EAAkC;IAC9BpwB,QAAQ,CAACowB,cAAT,GAA0B,EAA1B;EACH,CAFD,MAGK,IAAInd,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAA7B,IAA0C8T,MAAM,CAAC,gBAAD,CAAN,CAAyB,OAAzB,MAAsC9T,SAApF,EAA+F;IAChGa,QAAQ,CAACowB,cAAT,GAA0BgL,6CAA6C,CAAC9/B,sBAAsB,CAAC2X,MAAM,CAAC,gBAAD,CAAN,CAAyB,OAAzB,CAAD,CAAvB,EAA4DtV,OAA5D,CAAvE;EACH;;EACD,IAAIsV,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAACuwB,QAAT,GAAoB8K,uCAAuC,CAACpoB,MAAM,CAAC,UAAD,CAAP,EAAqBtV,OAArB,CAA3D;EACH;;EACD,OAAOqC,QAAP;AACH,CAnCD;;AAoCA,IAAI0gB,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUzN,MAAV,EAAkBtV,OAAlB,EAA2B;EAC9E,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOtQ,4CAA4C,CAACsQ,KAAD,EAAQnsB,OAAR,CAAnD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIu9B,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUjoB,MAAV,EAAkBtV,OAAlB,EAA2B;EACxE,IAAIqC,QAAQ,GAAG;IACXyqB,mBAAmB,EAAEtrB;EADV,CAAf;;EAGA,IAAI8T,MAAM,CAAC,qBAAD,CAAN,KAAkC9T,SAAtC,EAAiD;IAC7Ca,QAAQ,CAACyqB,mBAAT,GAA+B6Q,kDAAkD,CAACroB,MAAM,CAAC,qBAAD,CAAP,EAAgCtV,OAAhC,CAAjF;EACH;;EACD,OAAOqC,QAAP;AACH,CARD;;AASA,IAAIu7B,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUtoB,MAAV,EAAkBtV,OAAlB,EAA2B;EACvE,IAAIqC,QAAQ,GAAG;IACX2wB,KAAK,EAAExxB,SADI;IAEX0xB,MAAM,EAAE1xB;EAFG,CAAf;;EAIA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC2wB,KAAT,GAAiB6K,2BAA2B,CAACvoB,MAAM,CAAC,QAAD,CAAP,EAAmBtV,OAAnB,CAA5C;EACH;;EACD,IAAIsV,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAAC6wB,MAAT,GAAkB4K,4BAA4B,CAACxoB,MAAM,CAAC,SAAD,CAAP,EAAoBtV,OAApB,CAA9C;EACH;;EACD,OAAOqC,QAAP;AACH,CAZD;;AAaA,IAAIm7B,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAUloB,MAAV,EAAkBtV,OAAlB,EAA2B;EACnE,IAAIqC,QAAQ,GAAG;IACX+K,MAAM,EAAE5L;EADG,CAAf;;EAGA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIo7B,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUnoB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3E,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO9uB,cAAc,CAAC8uB,KAAD,CAArB;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIwR,kDAAkD,GAAG,SAArDA,kDAAqD,CAAUroB,MAAV,EAAkBtV,OAAlB,EAA2B;EAChF,IAAIqC,QAAQ,GAAG;IACX+wB,SAAS,EAAE5xB,SADA;IAEXD,MAAM,EAAEC,SAFG;IAGX6rB,MAAM,EAAE7rB,SAHG;IAIX4L,MAAM,EAAE5L,SAJG;IAKX6xB,UAAU,EAAE7xB;EALD,CAAf;;EAOA,IAAI8T,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAAC+wB,SAAT,GAAqB/1B,cAAc,CAACiY,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACd,MAAT,GAAkBlE,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgrB,MAAT,GAAkBhwB,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACpCa,QAAQ,CAACgxB,UAAT,GAAsBuK,yCAAyC,CAACtoB,MAAM,CAAC,YAAD,CAAP,EAAuBtV,OAAvB,CAA/D;EACH;;EACD,OAAOqC,QAAP;AACH,CAxBD;;AAyBA,IAAIq7B,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUpoB,MAAV,EAAkBtV,OAAlB,EAA2B;EACrE,IAAIqC,QAAQ,GAAG;IACXixB,SAAS,EAAE9xB;EADA,CAAf;;EAGA,IAAI8T,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAACixB,SAAT,GAAqBj2B,cAAc,CAACiY,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAI07B,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUzoB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC/E,IAAIqC,QAAQ,GAAG;IACXmE,EAAE,EAAEhF,SADO;IAEXiyB,iBAAiB,EAAEjyB,SAFR;IAGXkyB,MAAM,EAAElyB,SAHG;IAIXirB,MAAM,EAAEjrB;EAJG,CAAf;;EAMA,IAAI8T,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAACmE,EAAT,GAAcnJ,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IACvCa,QAAQ,CAACoxB,iBAAT,GAA6Bp2B,cAAc,CAACiY,MAAM,CAAC,eAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAAC0oB,KAAP,KAAiB,EAArB,EAAyB;IACrB37B,QAAQ,CAACqxB,MAAT,GAAkB,EAAlB;EACH,CAFD,MAGK,IAAIpe,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IACpCa,QAAQ,CAACqxB,MAAT,GAAkBiJ,+BAA+B,CAACh/B,sBAAsB,CAAC2X,MAAM,CAAC,OAAD,CAAP,CAAvB,EAA0CtV,OAA1C,CAAjD;EACH;;EACD,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACoqB,MAAT,GAAkBwR,qDAAqD,CAAC3oB,MAAM,CAAC,QAAD,CAAP,EAAmBtV,OAAnB,CAAvE;EACH;;EACD,OAAOqC,QAAP;AACH,CAvBD;;AAwBA,IAAIgb,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAU/H,MAAV,EAAkBtV,OAAlB,EAA2B;EACnF,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO4R,iDAAiD,CAAC5R,KAAD,EAAQnsB,OAAR,CAAxD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIk+B,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAU5oB,MAAV,EAAkBtV,OAAlB,EAA2B;EACvE,IAAIqC,QAAQ,GAAG;IACXyxB,IAAI,EAAEtyB,SADK;IAEX2tB,IAAI,EAAE3tB,SAFK;IAGXuyB,yBAAyB,EAAEvyB;EAHhB,CAAf;;EAKA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACyxB,IAAT,GAAgB72B,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,MAAD,CAAP,CAAvB,CAA/B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC8sB,IAAT,GAAgB9wB,kBAAkB,CAACiX,MAAM,CAAC,MAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,2BAAD,CAAN,KAAwC9T,SAA5C,EAAuD;IACnDa,QAAQ,CAAC0xB,yBAAT,GAAqCh2B,cAAc,CAACuX,MAAM,CAAC,2BAAD,CAAP,CAAnD;EACH;;EACD,OAAOjT,QAAP;AACH,CAhBD;;AAiBA,IAAI87B,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAU7oB,MAAV,EAAkBtV,OAAlB,EAA2B;EACjE,IAAIqC,QAAQ,GAAG;IACXuS,UAAU,EAAEpT,SADD;IAEXwsB,EAAE,EAAExsB,SAFO;IAGX4L,MAAM,EAAE5L,SAHG;IAIXirB,MAAM,EAAEjrB,SAJG;IAKX6Y,MAAM,EAAE7Y,SALG;IAMX0yB,WAAW,EAAE1yB,SANF;IAOX4yB,4BAA4B,EAAE5yB,SAPnB;IAQX8yB,2BAA2B,EAAE9yB,SARlB;IASXgzB,8BAA8B,EAAEhzB;EATrB,CAAf;;EAWA,IAAI8T,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACpCa,QAAQ,CAACuS,UAAT,GAAsBspB,yCAAyC,CAAC5oB,MAAM,CAAC,YAAD,CAAP,EAAuBtV,OAAvB,CAA/D;EACH;;EACD,IAAIsV,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC2rB,EAAT,GAAc3wB,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAACmX,MAAP,KAAkB,EAAtB,EAA0B,CACzB,CADD,MAEK,IAAInX,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IACrCa,QAAQ,CAACoqB,MAAT,GAAkB2R,yCAAyC,CAAC7gC,aAAa,CAAC+X,MAAM,CAAC,QAAD,CAAP,CAAd,EAAkCtV,OAAlC,CAA3D;EACH;;EACD,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC+oB,UAAP,KAAsB,EAA1B,EAA8B;IAC1Bh8B,QAAQ,CAAC6xB,WAAT,GAAuB,EAAvB;EACH,CAFD,MAGK,IAAI5e,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACzCa,QAAQ,CAAC6xB,WAAT,GAAuBoK,oCAAoC,CAAC3gC,sBAAsB,CAAC2X,MAAM,CAAC,YAAD,CAAP,CAAvB,EAA+CtV,OAA/C,CAA3D;EACH;;EACD,IAAIsV,MAAM,CAACipB,2BAAP,KAAuC,EAA3C,EAA+C;IAC3Cl8B,QAAQ,CAAC+xB,4BAAT,GAAwC,EAAxC;EACH,CAFD,MAGK,IAAI9e,MAAM,CAAC,6BAAD,CAAN,KAA0C9T,SAA9C,EAAyD;IAC1Da,QAAQ,CAAC+xB,4BAAT,GAAwCoK,qDAAqD,CAAC7gC,sBAAsB,CAAC2X,MAAM,CAAC,6BAAD,CAAP,CAAvB,EAAgEtV,OAAhE,CAA7F;EACH;;EACD,IAAIsV,MAAM,CAAC,6BAAD,CAAN,KAA0C9T,SAA9C,EAAyD;IACrDa,QAAQ,CAACiyB,2BAAT,GAAuCmK,iDAAiD,CAACnpB,MAAM,CAAC,6BAAD,CAAP,EAAwCtV,OAAxC,CAAxF;EACH;;EACD,IAAIsV,MAAM,CAAC,gCAAD,CAAN,KAA6C9T,SAAjD,EAA4D;IACxDa,QAAQ,CAACmyB,8BAAT,GAA0C+F,oDAAoD,CAACjlB,MAAM,CAAC,gCAAD,CAAP,EAA2CtV,OAA3C,CAA9F;EACH;;EACD,OAAOqC,QAAP;AACH,CAhDD;;AAiDA,IAAIq8B,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUppB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5E,IAAIqC,QAAQ,GAAG;IACX+K,MAAM,EAAE5L,SADG;IAEX+qB,IAAI,EAAE/qB,SAFK;IAGXkzB,qBAAqB,EAAElzB,SAHZ;IAIXmzB,kBAAkB,EAAEnzB;EAJT,CAAf;;EAMA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC2X,GAAP,KAAe,EAAnB,EAAuB;IACnB5qB,QAAQ,CAACkqB,IAAT,GAAgB,EAAhB;EACH,CAFD,MAGK,IAAIjX,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAClCa,QAAQ,CAACkqB,IAAT,GAAgB1N,4BAA4B,CAAClhB,sBAAsB,CAAC2X,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwCtV,OAAxC,CAA5C;EACH;;EACD,IAAIsV,MAAM,CAAC,uBAAD,CAAN,KAAoC9T,SAAxC,EAAmD;IAC/Ca,QAAQ,CAACqyB,qBAAT,GAAiCn2B,iBAAiB,CAAC+W,MAAM,CAAC,uBAAD,CAAP,CAAlD;EACH;;EACD,IAAIA,MAAM,CAAC,oBAAD,CAAN,KAAiC9T,SAArC,EAAgD;IAC5Ca,QAAQ,CAACsyB,kBAAT,GAA8Bp2B,iBAAiB,CAAC+W,MAAM,CAAC,oBAAD,CAAP,CAA/C;EACH;;EACD,OAAOjT,QAAP;AACH,CAvBD;;AAwBA,IAAI+7B,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAU9oB,MAAV,EAAkBtV,OAAlB,EAA2B;EACvE,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChC,OAAO;MACH4L,MAAM,EAAE/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP;IADnB,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7B,OAAO;MACHyrB,GAAG,EAAEgO,yBAAyB,CAAC3lB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB;IAD3B,CAAP;EAGH;;EACD,IAAIsV,MAAM,CAAC,uBAAD,CAAN,KAAoC9T,SAAxC,EAAmD;IAC/C,OAAO;MACHkzB,qBAAqB,EAAEn2B,iBAAiB,CAAC+W,MAAM,CAAC,uBAAD,CAAP;IADrC,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,oBAAD,CAAN,KAAiC9T,SAArC,EAAgD;IAC5C,OAAO;MACHmzB,kBAAkB,EAAEp2B,iBAAiB,CAAC+W,MAAM,CAAC,oBAAD,CAAP;IADlC,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7B,OAAO;MACH2rB,GAAG,EAAEuR,8CAA8C,CAACppB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB;IADhD,CAAP;EAGH;;EACD,OAAO;IAAEorB,QAAQ,EAAE7lB,MAAM,CAACokB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CA3BD;;AA4BA,IAAI4G,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAU5G,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOgS,mCAAmC,CAAChS,KAAD,EAAQnsB,OAAR,CAA1C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIyc,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUnH,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,IAAIqC,QAAQ,GAAG;IACXuyB,YAAY,EAAEpzB,SADH;IAEXqzB,YAAY,EAAErzB,SAFH;IAGXwzB,YAAY,EAAExzB;EAHH,CAAf;;EAKA,IAAI8T,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACuyB,YAAT,GAAwBv3B,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAACuf,YAAP,KAAwB,EAA5B,EAAgC;IAC5BxyB,QAAQ,CAACwyB,YAAT,GAAwB,EAAxB;EACH,CAFD,MAGK,IAAIvf,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA3B,IAAwC8T,MAAM,CAAC,cAAD,CAAN,CAAuB,OAAvB,MAAoC9T,SAAhF,EAA2F;IAC5Fa,QAAQ,CAACwyB,YAAT,GAAwB8J,kCAAkC,CAAChhC,sBAAsB,CAAC2X,MAAM,CAAC,cAAD,CAAN,CAAuB,OAAvB,CAAD,CAAvB,EAA0DtV,OAA1D,CAA1D;EACH;;EACD,IAAIsV,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAAC2yB,YAAT,GAAwB33B,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,OAAOjT,QAAP;AACH,CAnBD;;AAoBA,IAAIk6B,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAUjnB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3D,IAAIqC,QAAQ,GAAG;IACXgY,MAAM,EAAE7Y,SADG;IAEX0zB,cAAc,EAAE1zB;EAFL,CAAf;;EAIA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAAC6yB,cAAT,GAA0B0J,0CAA0C,CAACtpB,MAAM,CAAC,gBAAD,CAAP,EAA2BtV,OAA3B,CAApE;EACH;;EACD,OAAOqC,QAAP;AACH,CAZD;;AAaA,IAAIw8B,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUvpB,MAAV,EAAkBtV,OAAlB,EAA2B;EACtE,IAAIqC,QAAQ,GAAG;IACX+K,MAAM,EAAE5L,SADG;IAEX+qB,IAAI,EAAE/qB,SAFK;IAGX6zB,cAAc,EAAE7zB;EAHL,CAAf;;EAKA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC2X,GAAP,KAAe,EAAnB,EAAuB;IACnB5qB,QAAQ,CAACkqB,IAAT,GAAgB,EAAhB;EACH,CAFD,MAGK,IAAIjX,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAClCa,QAAQ,CAACkqB,IAAT,GAAgB1N,4BAA4B,CAAClhB,sBAAsB,CAAC2X,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwCtV,OAAxC,CAA5C;EACH;;EACD,IAAIsV,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACgzB,cAAT,GAA0Bh4B,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOjT,QAAP;AACH,CAnBD;;AAoBA,IAAIua,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUtH,MAAV,EAAkBtV,OAAlB,EAA2B;EACxE,IAAIqC,QAAQ,GAAG;IACXmE,EAAE,EAAEhF,SADO;IAEXirB,MAAM,EAAEjrB;EAFG,CAAf;;EAIA,IAAI8T,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAACmE,EAAT,GAAcnJ,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAACmX,MAAP,KAAkB,EAAtB,EAA0B,CACzB,CADD,MAEK,IAAInX,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IACrCa,QAAQ,CAACoqB,MAAT,GAAkBqS,mCAAmC,CAACvhC,aAAa,CAAC+X,MAAM,CAAC,QAAD,CAAP,CAAd,EAAkCtV,OAAlC,CAArD;EACH;;EACD,OAAOqC,QAAP;AACH,CAdD;;AAeA,IAAI8gB,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU7N,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5E,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOvP,0CAA0C,CAACuP,KAAD,EAAQnsB,OAAR,CAAjD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI8+B,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUxpB,MAAV,EAAkBtV,OAAlB,EAA2B;EACjE,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChC,OAAO;MACH4L,MAAM,EAAE/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP;IADnB,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7B,OAAO;MACHyrB,GAAG,EAAEgO,yBAAyB,CAAC3lB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB;IAD3B,CAAP;EAGH;;EACD,IAAIsV,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxC,OAAO;MACH6zB,cAAc,EAAEh4B,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP;IAD3B,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7B,OAAO;MACH2rB,GAAG,EAAE0R,wCAAwC,CAACvpB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB;IAD1C,CAAP;EAGH;;EACD,OAAO;IAAEorB,QAAQ,EAAE7lB,MAAM,CAACokB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CAtBD;;AAuBA,IAAIypB,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAUzpB,MAAV,EAAkBtV,OAAlB,EAA2B;EACnE,IAAIqC,QAAQ,GAAG;IACXJ,QAAQ,EAAET,SADC;IAEXI,GAAG,EAAEJ,SAFM;IAGXw9B,SAAS,EAAEx9B,SAHA;IAIXgD,YAAY,EAAEhD,SAJH;IAKXiZ,KAAK,EAAEjZ,SALI;IAMX6jB,SAAS,EAAE7jB,SANA;IAOX6B,iBAAiB,EAAE7B;EAPR,CAAf;;EASA,IAAI8T,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAACJ,QAAT,GAAoB5E,cAAc,CAACiY,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACiY,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAAC28B,SAAT,GAAqB/hC,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,WAAD,CAAP,CAAvB,CAApC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACmC,YAAT,GAAwBnH,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACoY,KAAT,GAAiBG,2BAA2B,CAACtF,MAAM,CAAC,OAAD,CAAP,EAAkBtV,OAAlB,CAA5C;EACH;;EACD,IAAIsV,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAACgjB,SAAT,GAAqBG,+BAA+B,CAAClQ,MAAM,CAAC,WAAD,CAAP,EAAsBtV,OAAtB,CAApD;EACH;;EACD,IAAIsV,MAAM,CAAC,mBAAD,CAAN,KAAgC9T,SAApC,EAA+C;IAC3Ca,QAAQ,CAACgB,iBAAT,GAA6BhG,cAAc,CAACiY,MAAM,CAAC,mBAAD,CAAP,CAA3C;EACH;;EACD,OAAOjT,QAAP;AACH,CAhCD;;AAiCA,IAAI2hB,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAU1O,MAAV,EAAkBtV,OAAlB,EAA2B;EACvE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO4S,qCAAqC,CAAC5S,KAAD,EAAQnsB,OAAR,CAA5C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIy+B,iDAAiD,GAAG,SAApDA,iDAAoD,CAAUnpB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC/E,IAAIqC,QAAQ,GAAG;IACXkzB,cAAc,EAAE/zB,SADL;IAEXg0B,uBAAuB,EAAEh0B;EAFd,CAAf;;EAIA,IAAI8T,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACkzB,cAAT,GAA0Bl3B,kBAAkB,CAACiX,MAAM,CAAC,gBAAD,CAAP,CAA5C;EACH;;EACD,IAAIA,MAAM,CAAC,yBAAD,CAAN,KAAsC9T,SAA1C,EAAqD;IACjDa,QAAQ,CAACmzB,uBAAT,GAAmCn3B,kBAAkB,CAACiX,MAAM,CAAC,yBAAD,CAAP,CAArD;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAI48B,iDAAiD,GAAG,SAApDA,iDAAoD,CAAU3pB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC/E,IAAIqC,QAAQ,GAAG;IACXkzB,cAAc,EAAE/zB,SADL;IAEXgD,YAAY,EAAEhD,SAFH;IAGXg0B,uBAAuB,EAAEh0B;EAHd,CAAf;;EAKA,IAAI8T,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACkzB,cAAT,GAA0Bl3B,kBAAkB,CAACiX,MAAM,CAAC,gBAAD,CAAP,CAA5C;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACmC,YAAT,GAAwBnH,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,yBAAD,CAAN,KAAsC9T,SAA1C,EAAqD;IACjDa,QAAQ,CAACmzB,uBAAT,GAAmCn3B,kBAAkB,CAACiX,MAAM,CAAC,yBAAD,CAAP,CAArD;EACH;;EACD,OAAOjT,QAAP;AACH,CAhBD;;AAiBA,IAAIm8B,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAUlpB,MAAV,EAAkBtV,OAAlB,EAA2B;EACnF,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO8S,iDAAiD,CAAC9S,KAAD,EAAQnsB,OAAR,CAAxD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIi+B,qDAAqD,GAAG,SAAxDA,qDAAwD,CAAU3oB,MAAV,EAAkBtV,OAAlB,EAA2B;EACnF,IAAIqC,QAAQ,GAAG;IACXT,GAAG,EAAEJ;EADM,CAAf;;EAGA,IAAI8T,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACT,GAAT,GAAes9B,iCAAiC,CAAC5pB,MAAM,CAAC,OAAD,CAAP,EAAkBtV,OAAlB,CAAhD;EACH;;EACD,OAAOqC,QAAP;AACH,CARD;;AASA,IAAI88B,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAU7pB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3D,IAAIqC,QAAQ,GAAG;IACXT,GAAG,EAAEJ,SADM;IAEXqT,YAAY,EAAErT,SAFH;IAGXmT,IAAI,EAAEnT,SAHK;IAIX6B,iBAAiB,EAAE7B,SAJR;IAKX49B,IAAI,EAAE59B,SALK;IAMXgD,YAAY,EAAEhD,SANH;IAOXiZ,KAAK,EAAEjZ;EAPI,CAAf;;EASA,IAAI8T,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACiY,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACwS,YAAT,GAAwB5X,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACsS,IAAT,GAAgBtX,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAACjS,iBAAP,KAA6B,EAAjC,EAAqC;IACjChB,QAAQ,CAACgB,iBAAT,GAA6B,EAA7B;EACH,CAFD,MAGK,IAAIiS,MAAM,CAAC,mBAAD,CAAN,KAAgC9T,SAApC,EAA+C;IAChDa,QAAQ,CAACgB,iBAAT,GAA6B+3B,2CAA2C,CAACz9B,sBAAsB,CAAC2X,MAAM,CAAC,mBAAD,CAAP,CAAvB,EAAsDtV,OAAtD,CAAxE;EACH;;EACD,IAAIsV,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC+8B,IAAT,GAAgB7gC,iBAAiB,CAAC+W,MAAM,CAAC,MAAD,CAAP,CAAjC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACmC,YAAT,GAAwBnH,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACoY,KAAT,GAAiBG,2BAA2B,CAACtF,MAAM,CAAC,OAAD,CAAP,EAAkBtV,OAAlB,CAA5C;EACH;;EACD,OAAOqC,QAAP;AACH,CAnCD;;AAoCA,IAAIiiB,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAUhP,MAAV,EAAkBtV,OAAlB,EAA2B;EAC9D,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOgT,6BAA6B,CAAChT,KAAD,EAAQnsB,OAAR,CAApC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIihB,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAU3L,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3E,IAAIqC,QAAQ,GAAG;IACXyzB,iBAAiB,EAAEt0B,SADR;IAEXya,IAAI,EAAEza;EAFK,CAAf;;EAIA,IAAI8T,MAAM,CAAC,mBAAD,CAAN,KAAgC9T,SAApC,EAA+C;IAC3Ca,QAAQ,CAACyzB,iBAAT,GAA6Bz4B,cAAc,CAACiY,MAAM,CAAC,mBAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC4Z,IAAT,GAAgBojB,oCAAoC,CAAC/pB,MAAM,CAAC,MAAD,CAAP,EAAiBtV,OAAjB,CAApD;EACH;;EACD,OAAOqC,QAAP;AACH,CAZD;;AAaA,IAAIye,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAUxL,MAAV,EAAkBtV,OAAlB,EAA2B;EACvE,IAAIqC,QAAQ,GAAG;IACXgY,MAAM,EAAE7Y;EADG,CAAf;;EAGA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAI+e,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAU9L,MAAV,EAAkBtV,OAAlB,EAA2B;EACvE,IAAIqC,QAAQ,GAAG;IACX6sB,IAAI,EAAE1tB,SADK;IAEXw0B,eAAe,EAAEx0B;EAFN,CAAf;;EAIA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC6sB,IAAT,GAAgB7xB,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,iBAAD,CAAN,KAA8B9T,SAAlC,EAA6C;IACzCa,QAAQ,CAAC2zB,eAAT,GAA2B/4B,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,iBAAD,CAAP,CAAvB,CAA1C;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIg9B,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAU/pB,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,IAAIqC,QAAQ,GAAG;IACX4zB,gBAAgB,EAAEz0B;EADP,CAAf;;EAGA,IAAI8T,MAAM,CAAC,kBAAD,CAAN,KAA+B9T,SAAnC,EAA8C;IAC1Ca,QAAQ,CAAC4zB,gBAAT,GAA4B6F,sCAAsC,CAACxmB,MAAM,CAAC,kBAAD,CAAP,EAA6BtV,OAA7B,CAAlE;EACH;;EACD,OAAOqC,QAAP;AACH,CARD;;AASA,IAAIi9B,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAUhqB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC9D,IAAIqC,QAAQ,GAAG;IACXgJ,UAAU,EAAE7J,SADD;IAEX49B,IAAI,EAAE59B,SAFK;IAGXc,aAAa,EAAEd,SAHJ;IAIXe,cAAc,EAAEf,SAJL;IAKXgB,YAAY,EAAEhB,SALH;IAMXiB,cAAc,EAAEjB;EANL,CAAf;;EAQA,IAAI8T,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACpCa,QAAQ,CAACgJ,UAAT,GAAsBhN,kBAAkB,CAACiX,MAAM,CAAC,YAAD,CAAP,CAAxC;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC+8B,IAAT,GAAgB7gC,iBAAiB,CAAC+W,MAAM,CAAC,MAAD,CAAP,CAAjC;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IACvCa,QAAQ,CAACC,aAAT,GAAyBjF,cAAc,CAACiY,MAAM,CAAC,eAAD,CAAP,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACE,cAAT,GAA0BlF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACG,YAAT,GAAwBnF,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACI,cAAT,GAA0BpF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOjT,QAAP;AACH,CA5BD;;AA6BA,IAAIk9B,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUjqB,MAAV,EAAkBtV,OAAlB,EAA2B;EACjE,IAAIqC,QAAQ,GAAG;IACXsS,IAAI,EAAEnT,SADK;IAEX6B,iBAAiB,EAAE7B,SAFR;IAGX49B,IAAI,EAAE59B,SAHK;IAIXgD,YAAY,EAAEhD,SAJH;IAKXI,GAAG,EAAEJ,SALM;IAMX0G,SAAS,EAAE1G,SANA;IAOX06B,QAAQ,EAAE16B,SAPC;IAQXqT,YAAY,EAAErT,SARH;IASXiZ,KAAK,EAAEjZ;EATI,CAAf;;EAWA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACsS,IAAT,GAAgBtX,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAACjS,iBAAP,KAA6B,EAAjC,EAAqC;IACjChB,QAAQ,CAACgB,iBAAT,GAA6B,EAA7B;EACH,CAFD,MAGK,IAAIiS,MAAM,CAAC,mBAAD,CAAN,KAAgC9T,SAApC,EAA+C;IAChDa,QAAQ,CAACgB,iBAAT,GAA6B+3B,2CAA2C,CAACz9B,sBAAsB,CAAC2X,MAAM,CAAC,mBAAD,CAAP,CAAvB,EAAsDtV,OAAtD,CAAxE;EACH;;EACD,IAAIsV,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC+8B,IAAT,GAAgB7gC,iBAAiB,CAAC+W,MAAM,CAAC,MAAD,CAAP,CAAjC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACmC,YAAT,GAAwBnH,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACiY,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAAC6F,SAAT,GAAqB7K,cAAc,CAACiY,MAAM,CAAC,WAAD,CAAP,CAAnC;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAAC65B,QAAT,GAAoBn+B,cAAc,CAACuX,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACwS,YAAT,GAAwB5X,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACoY,KAAT,GAAiBG,2BAA2B,CAACtF,MAAM,CAAC,OAAD,CAAP,EAAkBtV,OAAlB,CAA5C;EACH;;EACD,OAAOqC,QAAP;AACH,CA3CD;;AA4CA,IAAI6iB,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAU5P,MAAV,EAAkBtV,OAAlB,EAA2B;EACrE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOoT,mCAAmC,CAACpT,KAAD,EAAQnsB,OAAR,CAA1C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI4a,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUtF,MAAV,EAAkBtV,OAAlB,EAA2B;EACzD,IAAIqC,QAAQ,GAAG;IACX+uB,WAAW,EAAE5vB,SADF;IAEXwsB,EAAE,EAAExsB;EAFO,CAAf;;EAIA,IAAI8T,MAAM,CAAC,aAAD,CAAN,KAA0B9T,SAA9B,EAAyC;IACrCa,QAAQ,CAAC+uB,WAAT,GAAuB/zB,cAAc,CAACiY,MAAM,CAAC,aAAD,CAAP,CAArC;EACH;;EACD,IAAIA,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC2rB,EAAT,GAAc3wB,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIub,uCAAuC,GAAG,SAA1CA,uCAA0C,CAAUtI,MAAV,EAAkBtV,OAAlB,EAA2B;EACrE,IAAIqC,QAAQ,GAAG;IACX2Z,KAAK,EAAExa;EADI,CAAf;;EAGA,IAAI8T,MAAM,CAAC2G,IAAP,KAAgB,EAApB,EAAwB;IACpB5Z,QAAQ,CAAC2Z,KAAT,GAAiB,EAAjB;EACH,CAFD,MAGK,IAAI1G,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IACnCa,QAAQ,CAAC2Z,KAAT,GAAiBwjB,4CAA4C,CAAC7hC,sBAAsB,CAAC2X,MAAM,CAAC,MAAD,CAAP,CAAvB,EAAyCtV,OAAzC,CAA7D;EACH;;EACD,OAAOqC,QAAP;AACH,CAXD;;AAYA,IAAIo9B,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUnqB,MAAV,EAAkBtV,OAAlB,EAA2B;EACzE,IAAIqC,QAAQ,GAAG;IACX2D,eAAe,EAAExE;EADN,CAAf;;EAGA,IAAI8T,MAAM,CAAC,iBAAD,CAAN,KAA8B9T,SAAlC,EAA6C;IACzCa,QAAQ,CAAC2D,eAAT,GAA2B3I,cAAc,CAACiY,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIm9B,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUlqB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1E,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOsT,2CAA2C,CAACtT,KAAD,EAAQnsB,OAAR,CAAlD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI0/B,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAUpqB,MAAV,EAAkBtV,OAAlB,EAA2B;EACxD,IAAIqC,QAAQ,GAAG;IACXgJ,UAAU,EAAE7J,SADD;IAEXqT,YAAY,EAAErT,SAFH;IAGXmT,IAAI,EAAEnT,SAHK;IAIX49B,IAAI,EAAE59B,SAJK;IAKXc,aAAa,EAAEd,SALJ;IAMXe,cAAc,EAAEf,SANL;IAOXgB,YAAY,EAAEhB,SAPH;IAQXiB,cAAc,EAAEjB;EARL,CAAf;;EAUA,IAAI8T,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACpCa,QAAQ,CAACgJ,UAAT,GAAsBhN,kBAAkB,CAACiX,MAAM,CAAC,YAAD,CAAP,CAAxC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACwS,YAAT,GAAwB5X,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,cAAD,CAAP,CAAvB,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACsS,IAAT,GAAgBtX,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC+8B,IAAT,GAAgB7gC,iBAAiB,CAAC+W,MAAM,CAAC,MAAD,CAAP,CAAjC;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IACvCa,QAAQ,CAACC,aAAT,GAAyBjF,cAAc,CAACiY,MAAM,CAAC,eAAD,CAAP,CAAvC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACE,cAAT,GAA0BlF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACG,YAAT,GAAwBnF,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACI,cAAT,GAA0BpF,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOjT,QAAP;AACH,CApCD;;AAqCA,IAAIqjB,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUpQ,MAAV,EAAkBtV,OAAlB,EAA2B;EACzD,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOuT,0BAA0B,CAACvT,KAAD,EAAQnsB,OAAR,CAAjC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIg9B,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAU1nB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC7D,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOmT,gCAAgC,CAACnT,KAAD,EAAQnsB,OAAR,CAAvC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIme,kCAAkC,GAAG,SAArCA,kCAAqC,CAAU7I,MAAV,EAAkBtV,OAAlB,EAA2B;EAChE,IAAIqC,QAAQ,GAAG;IACXs9B,QAAQ,EAAEn+B;EADC,CAAf;;EAGA,IAAI8T,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAACs9B,QAAT,GAAoB5hC,cAAc,CAACuX,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIu9B,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUtqB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5D,IAAIqC,QAAQ,GAAG;IACXw9B,YAAY,EAAEr+B,SADH;IAEXs+B,cAAc,EAAEt+B,SAFL;IAGXu+B,aAAa,EAAEv+B;EAHJ,CAAf;;EAKA,IAAI8T,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACw9B,YAAT,GAAwBthC,iBAAiB,CAAC+W,MAAM,CAAC,cAAD,CAAP,CAAzC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACy9B,cAAT,GAA0BvhC,iBAAiB,CAAC+W,MAAM,CAAC,gBAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IACvCa,QAAQ,CAAC09B,aAAT,GAAyBxhC,iBAAiB,CAAC+W,MAAM,CAAC,eAAD,CAAP,CAA1C;EACH;;EACD,OAAOjT,QAAP;AACH,CAhBD;;AAiBA,IAAI29B,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAU1qB,MAAV,EAAkBtV,OAAlB,EAA2B;EACjE,IAAIqC,QAAQ,GAAG;IACXgpB,OAAO,EAAE7pB;EADE,CAAf;;EAGA,IAAI8T,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAACgpB,OAAT,GAAmBuU,8BAA8B,CAACtqB,MAAM,CAAC,SAAD,CAAP,EAAoBtV,OAApB,CAAjD;EACH;;EACD,OAAOqC,QAAP;AACH,CARD;;AASA,IAAIsf,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUrM,MAAV,EAAkBtV,OAAlB,EAA2B;EAClF,IAAIqC,QAAQ,GAAG;IACXk0B,eAAe,EAAE/0B,SADN;IAEXg1B,gBAAgB,EAAEh1B,SAFP;IAGXi1B,iBAAiB,EAAEj1B,SAHR;IAIXk1B,qBAAqB,EAAEl1B;EAJZ,CAAf;;EAMA,IAAI8T,MAAM,CAAC,iBAAD,CAAN,KAA8B9T,SAAlC,EAA6C;IACzCa,QAAQ,CAACk0B,eAAT,GAA2Bx4B,cAAc,CAACuX,MAAM,CAAC,iBAAD,CAAP,CAAzC;EACH;;EACD,IAAIA,MAAM,CAAC,kBAAD,CAAN,KAA+B9T,SAAnC,EAA8C;IAC1Ca,QAAQ,CAACm0B,gBAAT,GAA4Bz4B,cAAc,CAACuX,MAAM,CAAC,kBAAD,CAAP,CAA1C;EACH;;EACD,IAAIA,MAAM,CAAC,mBAAD,CAAN,KAAgC9T,SAApC,EAA+C;IAC3Ca,QAAQ,CAACo0B,iBAAT,GAA6B14B,cAAc,CAACuX,MAAM,CAAC,mBAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAAC,uBAAD,CAAN,KAAoC9T,SAAxC,EAAmD;IAC/Ca,QAAQ,CAACq0B,qBAAT,GAAiC34B,cAAc,CAACuX,MAAM,CAAC,uBAAD,CAAP,CAA/C;EACH;;EACD,OAAOjT,QAAP;AACH,CApBD;;AAqBA,IAAI49B,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAU3qB,MAAV,EAAkBtV,OAAlB,EAA2B;EACtE,IAAIqC,QAAQ,GAAG;IACXmE,EAAE,EAAEhF,SADO;IAEXo1B,QAAQ,EAAEp1B,SAFC;IAGXkyB,MAAM,EAAElyB,SAHG;IAIXirB,MAAM,EAAEjrB;EAJG,CAAf;;EAMA,IAAI8T,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAACmE,EAAT,GAAcnJ,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACu0B,QAAT,GAAoBv5B,cAAc,CAACiY,MAAM,CAAC,OAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC0oB,KAAP,KAAiB,EAArB,EAAyB;IACrB37B,QAAQ,CAACqxB,MAAT,GAAkB,EAAlB;EACH,CAFD,MAGK,IAAIpe,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IACpCa,QAAQ,CAACqxB,MAAT,GAAkBiJ,+BAA+B,CAACh/B,sBAAsB,CAAC2X,MAAM,CAAC,OAAD,CAAP,CAAvB,EAA0CtV,OAA1C,CAAjD;EACH;;EACD,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACoqB,MAAT,GAAkBwR,qDAAqD,CAAC3oB,MAAM,CAAC,QAAD,CAAP,EAAmBtV,OAAnB,CAAvE;EACH;;EACD,OAAOqC,QAAP;AACH,CAvBD;;AAwBA,IAAIkb,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUjI,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1E,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO8T,wCAAwC,CAAC9T,KAAD,EAAQnsB,OAAR,CAA/C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIkgC,kCAAkC,GAAG,SAArCA,kCAAqC,CAAU5qB,MAAV,EAAkBtV,OAAlB,EAA2B;EAChE,IAAIqC,QAAQ,GAAG;IACX8mB,OAAO,EAAE3nB;EADE,CAAf;;EAGA,IAAI8T,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAAC8mB,OAAT,GAAmBnpB,OAAO,CAACmgC,aAAR,CAAsB7qB,MAAM,CAAC,SAAD,CAA5B,CAAnB;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAI+9B,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAU9qB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5D,IAAIqC,QAAQ,GAAG;IACXy0B,QAAQ,EAAEt1B,SADC;IAEXu1B,gBAAgB,EAAEv1B,SAFP;IAGXw1B,QAAQ,EAAEx1B,SAHC;IAIXy1B,oBAAoB,EAAEz1B,SAJX;IAKX01B,cAAc,EAAE11B;EALL,CAAf;;EAOA,IAAI8T,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAACy0B,QAAT,GAAoBz5B,cAAc,CAACiY,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,kBAAD,CAAN,KAA+B9T,SAAnC,EAA8C;IAC1Ca,QAAQ,CAAC00B,gBAAT,GAA4B15B,cAAc,CAACiY,MAAM,CAAC,kBAAD,CAAP,CAA1C;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAAC20B,QAAT,GAAoB35B,cAAc,CAACiY,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,sBAAD,CAAN,KAAmC9T,SAAvC,EAAkD;IAC9Ca,QAAQ,CAAC40B,oBAAT,GAAgC55B,cAAc,CAACiY,MAAM,CAAC,sBAAD,CAAP,CAA9C;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAAC60B,cAAT,GAA0B75B,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOjT,QAAP;AACH,CAxBD;;AAyBA,IAAIod,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUnK,MAAV,EAAkBtV,OAAlB,EAA2B;EACzE,IAAIqC,QAAQ,GAAG;IACXy0B,QAAQ,EAAEt1B,SADC;IAEXw1B,QAAQ,EAAEx1B;EAFC,CAAf;;EAIA,IAAI8T,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAACy0B,QAAT,GAAoBz5B,cAAc,CAACiY,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAAC20B,QAAT,GAAoB35B,cAAc,CAACiY,MAAM,CAAC,UAAD,CAAP,CAAlC;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIg+B,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAU/qB,MAAV,EAAkBtV,OAAlB,EAA2B;EACxE,IAAIqC,QAAQ,GAAG;IACXgY,MAAM,EAAE7Y;EADG,CAAf;;EAGA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIic,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAUhJ,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5E,IAAIqC,QAAQ,GAAG;IACXg1B,IAAI,EAAE71B,SADK;IAEXwa,KAAK,EAAExa;EAFI,CAAf;;EAIA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACg1B,IAAT,GAAgBh6B,cAAc,CAACiY,MAAM,CAAC,MAAD,CAAP,CAA9B;EACH;;EACD,IAAIA,MAAM,CAAC2G,IAAP,KAAgB,EAApB,EAAwB;IACpB5Z,QAAQ,CAAC2Z,KAAT,GAAiB,EAAjB;EACH,CAFD,MAGK,IAAI1G,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IACnCa,QAAQ,CAAC2Z,KAAT,GAAiBskB,sCAAsC,CAAC3iC,sBAAsB,CAAC2X,MAAM,CAAC,MAAD,CAAP,CAAvB,EAAyCtV,OAAzC,CAAvD;EACH;;EACD,OAAOqC,QAAP;AACH,CAfD;;AAgBA,IAAIk+B,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAUjrB,MAAV,EAAkBtV,OAAlB,EAA2B;EACnE,IAAIqC,QAAQ,GAAG;IACX2rB,EAAE,EAAExsB,SADO;IAEXg2B,QAAQ,EAAEh2B,SAFC;IAGX4L,MAAM,EAAE5L,SAHG;IAIXirB,MAAM,EAAEjrB,SAJG;IAKX6Y,MAAM,EAAE7Y,SALG;IAMXk2B,uBAAuB,EAAEl2B,SANd;IAOXo2B,yBAAyB,EAAEp2B,SAPhB;IAQX4wB,WAAW,EAAE5wB,SARF;IASXq2B,uBAAuB,EAAEr2B;EATd,CAAf;;EAWA,IAAI8T,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAAC2rB,EAAT,GAAc3wB,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAACm1B,QAAT,GAAoBn5B,kBAAkB,CAACiX,MAAM,CAAC,UAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAACmX,MAAP,KAAkB,EAAtB,EAA0B,CACzB,CADD,MAEK,IAAInX,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IACrCa,QAAQ,CAACoqB,MAAT,GAAkB+T,2CAA2C,CAACjjC,aAAa,CAAC+X,MAAM,CAAC,QAAD,CAAP,CAAd,EAAkCtV,OAAlC,CAA7D;EACH;;EACD,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,yBAAD,CAAN,KAAsC9T,SAA1C,EAAqD;IACjDa,QAAQ,CAACq1B,uBAAT,GAAmC+I,6CAA6C,CAACnrB,MAAM,CAAC,yBAAD,CAAP,EAAoCtV,OAApC,CAAhF;EACH;;EACD,IAAIsV,MAAM,CAAC,2BAAD,CAAN,KAAwC9T,SAA5C,EAAuD;IACnDa,QAAQ,CAACu1B,yBAAT,GAAqCgF,+CAA+C,CAACtnB,MAAM,CAAC,2BAAD,CAAP,EAAsCtV,OAAtC,CAApF;EACH;;EACD,IAAIsV,MAAM,CAAC,aAAD,CAAN,KAA0B9T,SAA9B,EAAyC;IACrCa,QAAQ,CAAC+vB,WAAT,GAAuBgK,iCAAiC,CAAC9mB,MAAM,CAAC,aAAD,CAAP,EAAwBtV,OAAxB,CAAxD;EACH;;EACD,IAAIsV,MAAM,CAAC,yBAAD,CAAN,KAAsC9T,SAA1C,EAAqD;IACjDa,QAAQ,CAACw1B,uBAAT,GAAmCsE,6CAA6C,CAAC7mB,MAAM,CAAC,yBAAD,CAAP,EAAoCtV,OAApC,CAAhF;EACH;;EACD,OAAOqC,QAAP;AACH,CA1CD;;AA2CA,IAAIq+B,gDAAgD,GAAG,SAAnDA,gDAAmD,CAAUprB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC9E,IAAIqC,QAAQ,GAAG;IACX+K,MAAM,EAAE5L,SADG;IAEX+qB,IAAI,EAAE/qB;EAFK,CAAf;;EAIA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAAC+K,MAAT,GAAkB/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC2X,GAAP,KAAe,EAAnB,EAAuB;IACnB5qB,QAAQ,CAACkqB,IAAT,GAAgB,EAAhB;EACH,CAFD,MAGK,IAAIjX,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAClCa,QAAQ,CAACkqB,IAAT,GAAgB1N,4BAA4B,CAAClhB,sBAAsB,CAAC2X,MAAM,CAAC,KAAD,CAAP,CAAvB,EAAwCtV,OAAxC,CAA5C;EACH;;EACD,OAAOqC,QAAP;AACH,CAfD;;AAgBA,IAAIm+B,2CAA2C,GAAG,SAA9CA,2CAA8C,CAAUlrB,MAAV,EAAkBtV,OAAlB,EAA2B;EACzE,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChC,OAAO;MACH4L,MAAM,EAAE/P,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP;IADnB,CAAP;EAGH;;EACD,IAAIA,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7B,OAAO;MACHyrB,GAAG,EAAEgO,yBAAyB,CAAC3lB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB;IAD3B,CAAP;EAGH;;EACD,IAAIsV,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7B,OAAO;MACH2rB,GAAG,EAAEuT,gDAAgD,CAACprB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB;IADlD,CAAP;EAGH;;EACD,OAAO;IAAEorB,QAAQ,EAAE7lB,MAAM,CAACokB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CAjBD;;AAkBA,IAAIgrB,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAUhrB,MAAV,EAAkBtV,OAAlB,EAA2B;EACpE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOoU,qCAAqC,CAACpU,KAAD,EAAQnsB,OAAR,CAA5C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIs8B,qCAAqC,GAAG,SAAxCA,qCAAwC,CAAUhnB,MAAV,EAAkBtV,OAAlB,EAA2B;EACnE,IAAIqC,QAAQ,GAAG;IACXgY,MAAM,EAAE7Y,SADG;IAEXu2B,IAAI,EAAEv2B;EAFK,CAAf;;EAIA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC01B,IAAT,GAAgB6G,0CAA0C,CAACtpB,MAAM,CAAC,MAAD,CAAP,EAAiBtV,OAAjB,CAA1D;EACH;;EACD,OAAOqC,QAAP;AACH,CAZD;;AAaA,IAAIu8B,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUtpB,MAAV,EAAkBtV,OAAlB,EAA2B;EACxE,IAAIqC,QAAQ,GAAG;IACX21B,OAAO,EAAEx2B;EADE,CAAf;;EAGA,IAAI8T,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAAC21B,OAAT,GAAmB35B,kBAAkB,CAACiX,MAAM,CAAC,SAAD,CAAP,CAArC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIs+B,iCAAiC,GAAG,SAApCA,iCAAoC,CAAUrrB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC/D,IAAIqC,QAAQ,GAAG;IACXm2B,SAAS,EAAEh3B,SADA;IAEXi3B,QAAQ,EAAEj3B;EAFC,CAAf;;EAIA,IAAI8T,MAAM,CAAC,WAAD,CAAN,KAAwB9T,SAA5B,EAAuC;IACnCa,QAAQ,CAACm2B,SAAT,GAAqB8C,+BAA+B,CAAChmB,MAAM,CAAC,WAAD,CAAP,EAAsBtV,OAAtB,CAApD;EACH;;EACD,IAAIsV,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClCa,QAAQ,CAACo2B,QAAT,GAAoB2H,8BAA8B,CAAC9qB,MAAM,CAAC,UAAD,CAAP,EAAqBtV,OAArB,CAAlD;EACH;;EACD,OAAOqC,QAAP;AACH,CAZD;;AAaA,IAAIqd,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUpK,MAAV,EAAkBtV,OAAlB,EAA2B;EAChE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOwU,iCAAiC,CAACxU,KAAD,EAAQnsB,OAAR,CAAxC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIk/B,iCAAiC,GAAG,SAApCA,iCAAoC,CAAU5pB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC/D,IAAIqC,QAAQ,GAAG;IACXs2B,WAAW,EAAEn3B;EADF,CAAf;;EAGA,IAAI8T,MAAM,CAACsrB,UAAP,KAAsB,EAA1B,EAA8B;IAC1Bv+B,QAAQ,CAACs2B,WAAT,GAAuB,EAAvB;EACH,CAFD,MAGK,IAAIrjB,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACzCa,QAAQ,CAACs2B,WAAT,GAAuBmE,oCAAoC,CAACn/B,sBAAsB,CAAC2X,MAAM,CAAC,YAAD,CAAP,CAAvB,EAA+CtV,OAA/C,CAA3D;EACH;;EACD,OAAOqC,QAAP;AACH,CAXD;;AAYA,IAAIw+B,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUvrB,MAAV,EAAkBtV,OAAlB,EAA2B;EAClF,IAAIsV,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjC,OAAO;MACHmpB,OAAO,EAAEuV,kCAAkC,CAAC5qB,MAAM,CAAC,SAAD,CAAP,EAAoBtV,OAApB;IADxC,CAAP;EAGH;;EACD,IAAIsV,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/B,OAAO;MACHqpB,KAAK,EAAEiW,gCAAgC,CAACxrB,MAAM,CAAC,OAAD,CAAP,EAAkBtV,OAAlB;IADpC,CAAP;EAGH;;EACD,IAAIsV,MAAM,CAAC,UAAD,CAAN,KAAuB9T,SAA3B,EAAsC;IAClC,OAAO;MACHupB,QAAQ,EAAEiV,mCAAmC,CAAC1qB,MAAM,CAAC,UAAD,CAAP,EAAqBtV,OAArB;IAD1C,CAAP;EAGH;;EACD,IAAIsV,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9B,OAAO;MACHypB,IAAI,EAAEsQ,uCAAuC,CAACjmB,MAAM,CAAC,MAAD,CAAP,EAAiBtV,OAAjB;IAD1C,CAAP;EAGH;;EACD,IAAIsV,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7B,OAAO;MACH2pB,GAAG,EAAEqR,8BAA8B,CAAClnB,MAAM,CAAC,KAAD,CAAP,EAAgBtV,OAAhB;IADhC,CAAP;EAGH;;EACD,OAAO;IAAEorB,QAAQ,EAAE7lB,MAAM,CAACokB,OAAP,CAAerU,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CA3BD;;AA4BA,IAAIyrB,mDAAmD,GAAG,SAAtDA,mDAAsD,CAAUzrB,MAAV,EAAkBtV,OAAlB,EAA2B;EACjF,IAAIqC,QAAQ,GAAG;IACX+2B,YAAY,EAAE53B,SADH;IAEX63B,cAAc,EAAE73B;EAFL,CAAf;;EAIA,IAAI8T,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAAC+2B,YAAT,GAAwB/7B,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACg3B,cAAT,GAA0Bh8B,cAAc,CAACiY,MAAM,CAAC,gBAAD,CAAP,CAAxC;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIkZ,uDAAuD,GAAG,SAA1DA,uDAA0D,CAAUjG,MAAV,EAAkBtV,OAAlB,EAA2B;EACrF,IAAIqC,QAAQ,GAAG;IACX2Z,KAAK,EAAExa;EADI,CAAf;;EAGA,IAAI8T,MAAM,CAAC2G,IAAP,KAAgB,EAApB,EAAwB;IACpB5Z,QAAQ,CAAC2Z,KAAT,GAAiB,EAAjB;EACH,CAFD,MAGK,IAAI1G,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IACnCa,QAAQ,CAAC2Z,KAAT,GAAiBglB,+CAA+C,CAACrjC,sBAAsB,CAAC2X,MAAM,CAAC,MAAD,CAAP,CAAvB,EAAyCtV,OAAzC,CAAhE;EACH;;EACD,OAAOqC,QAAP;AACH,CAXD;;AAYA,IAAI4+B,8CAA8C,GAAG,SAAjDA,8CAAiD,CAAU3rB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC5E,IAAIqC,QAAQ,GAAG;IACXm3B,kCAAkC,EAAEh4B,SADzB;IAEXoD,gBAAgB,EAAEpD;EAFP,CAAf;;EAIA,IAAI8T,MAAM,CAAC,oCAAD,CAAN,KAAiD9T,SAArD,EAAgE;IAC5Da,QAAQ,CAACm3B,kCAAT,GAA8CuH,mDAAmD,CAACzrB,MAAM,CAAC,oCAAD,CAAP,EAA+CtV,OAA/C,CAAjG;EACH;;EACD,IAAIsV,MAAM,CAAC,kBAAD,CAAN,KAA+B9T,SAAnC,EAA8C;IAC1Ca,QAAQ,CAACuC,gBAAT,GAA4B7G,cAAc,CAACuX,MAAM,CAAC,kBAAD,CAAP,CAA1C;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAI2+B,+CAA+C,GAAG,SAAlDA,+CAAkD,CAAU1rB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC7E,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO8U,8CAA8C,CAAC9U,KAAD,EAAQnsB,OAAR,CAArD;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIygC,6CAA6C,GAAG,SAAhDA,6CAAgD,CAAUnrB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3E,IAAIqC,QAAQ,GAAG;IACXo3B,sBAAsB,EAAEj4B,SADb;IAEXm4B,oBAAoB,EAAEn4B;EAFX,CAAf;;EAIA,IAAI8T,MAAM,CAAC,wBAAD,CAAN,KAAqC9T,SAAzC,EAAoD;IAChDa,QAAQ,CAACo3B,sBAAT,GAAkCyH,4CAA4C,CAAC5rB,MAAM,CAAC,wBAAD,CAAP,EAAmCtV,OAAnC,CAA9E;EACH;;EACD,IAAIsV,MAAM,CAAC,sBAAD,CAAN,KAAmC9T,SAAvC,EAAkD;IAC9Ca,QAAQ,CAACs3B,oBAAT,GAAgC0G,0CAA0C,CAAC/qB,MAAM,CAAC,sBAAD,CAAP,EAAiCtV,OAAjC,CAA1E;EACH;;EACD,OAAOqC,QAAP;AACH,CAZD;;AAaA,IAAIy7B,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAUxoB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1D,IAAIqC,QAAQ,GAAG;IACXu3B,KAAK,EAAEp4B;EADI,CAAf;;EAGA,IAAI8T,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACu3B,KAAT,GAAiBv8B,cAAc,CAACiY,MAAM,CAAC,OAAD,CAAP,CAA/B;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAI6+B,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAU5rB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1E,IAAIqC,QAAQ,GAAG;IACXgY,MAAM,EAAE7Y;EADG,CAAf;;EAGA,IAAI8T,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACgY,MAAT,GAAkBhd,cAAc,CAACiY,MAAM,CAAC,QAAD,CAAP,CAAhC;EACH;;EACD,OAAOjT,QAAP;AACH,CARD;;AASA,IAAIw7B,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUvoB,MAAV,EAAkBtV,OAAlB,EAA2B;EACzD,IAAIqC,QAAQ,GAAG,EAAf;EACA,OAAOA,QAAP;AACH,CAHD;;AAIA,IAAI8+B,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAU7rB,MAAV,EAAkBtV,OAAlB,EAA2B;EACzD,IAAIqC,QAAQ,GAAG;IACXw9B,YAAY,EAAEr+B,SADH;IAEXs+B,cAAc,EAAEt+B,SAFL;IAGXu+B,aAAa,EAAEv+B;EAHJ,CAAf;;EAKA,IAAI8T,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACw9B,YAAT,GAAwBthC,iBAAiB,CAAC+W,MAAM,CAAC,cAAD,CAAP,CAAzC;EACH;;EACD,IAAIA,MAAM,CAAC,gBAAD,CAAN,KAA6B9T,SAAjC,EAA4C;IACxCa,QAAQ,CAACy9B,cAAT,GAA0BvhC,iBAAiB,CAAC+W,MAAM,CAAC,gBAAD,CAAP,CAA3C;EACH;;EACD,IAAIA,MAAM,CAAC,eAAD,CAAN,KAA4B9T,SAAhC,EAA2C;IACvCa,QAAQ,CAAC09B,aAAT,GAAyBxhC,iBAAiB,CAAC+W,MAAM,CAAC,eAAD,CAAP,CAA1C;EACH;;EACD,OAAOjT,QAAP;AACH,CAhBD;;AAiBA,IAAIy+B,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAUxrB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC9D,IAAIqC,QAAQ,GAAG;IACXgpB,OAAO,EAAE7pB;EADE,CAAf;;EAGA,IAAI8T,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAACgpB,OAAT,GAAmB8V,2BAA2B,CAAC7rB,MAAM,CAAC,SAAD,CAAP,EAAoBtV,OAApB,CAA9C;EACH;;EACD,OAAOqC,QAAP;AACH,CARD;;AASA,IAAIy4B,0CAA0C,GAAG,SAA7CA,0CAA6C,CAAUxlB,MAAV,EAAkBtV,OAAlB,EAA2B;EACxE,IAAIqC,QAAQ,GAAG;IACXw3B,UAAU,EAAEr4B;EADD,CAAf;;EAGA,IAAI8T,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACpCa,QAAQ,CAACw3B,UAAT,GAAsBuH,oDAAoD,CAAC9rB,MAAM,CAAC,YAAD,CAAP,EAAuBtV,OAAvB,CAA1E;EACH;;EACD,OAAOqC,QAAP;AACH,CARD;;AASA,IAAI++B,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAU9rB,MAAV,EAAkBtV,OAAlB,EAA2B;EAClF,IAAIqC,QAAQ,GAAG;IACX03B,mBAAmB,EAAEv4B,SADV;IAEX4wB,WAAW,EAAE5wB;EAFF,CAAf;;EAIA,IAAI8T,MAAM,CAAC,qBAAD,CAAN,KAAkC9T,SAAtC,EAAiD;IAC7Ca,QAAQ,CAAC03B,mBAAT,GAA+B18B,cAAc,CAACiY,MAAM,CAAC,qBAAD,CAAP,CAA7C;EACH;;EACD,IAAIA,MAAM,CAAC,aAAD,CAAN,KAA0B9T,SAA9B,EAAyC;IACrCa,QAAQ,CAAC+vB,WAAT,GAAuB2I,gDAAgD,CAACzlB,MAAM,CAAC,aAAD,CAAP,EAAwBtV,OAAxB,CAAvE;EACH;;EACD,OAAOqC,QAAP;AACH,CAZD;;AAaA,IAAI44B,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAU3lB,MAAV,EAAkBtV,OAAlB,EAA2B;EACvD,IAAIqC,QAAQ,GAAG;IACXT,GAAG,EAAEJ,SADM;IAEXovB,KAAK,EAAEpvB;EAFI,CAAf;;EAIA,IAAI8T,MAAM,CAAC,KAAD,CAAN,KAAkB9T,SAAtB,EAAiC;IAC7Ba,QAAQ,CAACT,GAAT,GAAevE,cAAc,CAACiY,MAAM,CAAC,KAAD,CAAP,CAA7B;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAACuuB,KAAT,GAAiBvzB,cAAc,CAACiY,MAAM,CAAC,OAAD,CAAP,CAA/B;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIwc,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAUvJ,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1D,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO8O,yBAAyB,CAAC9O,KAAD,EAAQnsB,OAAR,CAAhC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIqhC,iCAAiC,GAAG,SAApCA,iCAAoC,CAAU/rB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC/D,IAAIqC,QAAQ,GAAG;IACX4uB,OAAO,EAAEzvB,SADE;IAEX2vB,UAAU,EAAE3vB;EAFD,CAAf;;EAIA,IAAI8T,MAAM,CAAC,SAAD,CAAN,KAAsB9T,SAA1B,EAAqC;IACjCa,QAAQ,CAAC4uB,OAAT,GAAmBiM,6BAA6B,CAAC5nB,MAAM,CAAC,SAAD,CAAP,EAAoBtV,OAApB,CAAhD;EACH;;EACD,IAAIsV,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACpCa,QAAQ,CAAC8uB,UAAT,GAAsB9zB,cAAc,CAACiY,MAAM,CAAC,YAAD,CAAP,CAApC;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIs8B,kCAAkC,GAAG,SAArCA,kCAAqC,CAAUrpB,MAAV,EAAkBtV,OAAlB,EAA2B;EAChE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOkV,iCAAiC,CAAClV,KAAD,EAAQnsB,OAAR,CAAxC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIshC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAUhsB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC3D,IAAIqC,QAAQ,GAAG;IACX8sB,IAAI,EAAE3tB,SADK;IAEX+pB,UAAU,EAAE/pB;EAFD,CAAf;;EAIA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC8sB,IAAT,GAAgB9wB,kBAAkB,CAACiX,MAAM,CAAC,MAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,YAAD,CAAN,KAAyB9T,SAA7B,EAAwC;IACpCa,QAAQ,CAACkpB,UAAT,GAAsBluB,cAAc,CAACiY,MAAM,CAAC,YAAD,CAAP,CAApC;EACH;;EACD,OAAOjT,QAAP;AACH,CAZD;;AAaA,IAAIi7B,iCAAiC,GAAG,SAApCA,iCAAoC,CAAUhoB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC/D,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOmV,6BAA6B,CAACnV,KAAD,EAAQnsB,OAAR,CAApC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIuhC,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUjsB,MAAV,EAAkBtV,OAAlB,EAA2B;EACtE,IAAIqC,QAAQ,GAAG;IACXmE,EAAE,EAAEhF,SADO;IAEX44B,QAAQ,EAAE54B,SAFC;IAGXkyB,MAAM,EAAElyB,SAHG;IAIXirB,MAAM,EAAEjrB;EAJG,CAAf;;EAMA,IAAI8T,MAAM,CAAC,IAAD,CAAN,KAAiB9T,SAArB,EAAgC;IAC5Ba,QAAQ,CAACmE,EAAT,GAAcnJ,cAAc,CAACiY,MAAM,CAAC,IAAD,CAAP,CAA5B;EACH;;EACD,IAAIA,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IAC/Ba,QAAQ,CAAC+3B,QAAT,GAAoB/8B,cAAc,CAACiY,MAAM,CAAC,OAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC0oB,KAAP,KAAiB,EAArB,EAAyB;IACrB37B,QAAQ,CAACqxB,MAAT,GAAkB,EAAlB;EACH,CAFD,MAGK,IAAIpe,MAAM,CAAC,OAAD,CAAN,KAAoB9T,SAAxB,EAAmC;IACpCa,QAAQ,CAACqxB,MAAT,GAAkBiJ,+BAA+B,CAACh/B,sBAAsB,CAAC2X,MAAM,CAAC,OAAD,CAAP,CAAvB,EAA0CtV,OAA1C,CAAjD;EACH;;EACD,IAAIsV,MAAM,CAAC,QAAD,CAAN,KAAqB9T,SAAzB,EAAoC;IAChCa,QAAQ,CAACoqB,MAAT,GAAkBwR,qDAAqD,CAAC3oB,MAAM,CAAC,QAAD,CAAP,EAAmBtV,OAAnB,CAAvE;EACH;;EACD,OAAOqC,QAAP;AACH,CAvBD;;AAwBA,IAAIob,4CAA4C,GAAG,SAA/CA,4CAA+C,CAAUnI,MAAV,EAAkBtV,OAAlB,EAA2B;EAC1E,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOoV,wCAAwC,CAACpV,KAAD,EAAQnsB,OAAR,CAA/C;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIwhC,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAUlsB,MAAV,EAAkBtV,OAAlB,EAA2B;EAC9D,IAAIqC,QAAQ,GAAG;IACXyxB,IAAI,EAAEtyB,SADK;IAEX2tB,IAAI,EAAE3tB,SAFK;IAGXgD,YAAY,EAAEhD;EAHH,CAAf;;EAKA,IAAI8T,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAACyxB,IAAT,GAAgB72B,eAAe,CAACgB,sBAAsB,CAACqX,MAAM,CAAC,MAAD,CAAP,CAAvB,CAA/B;EACH;;EACD,IAAIA,MAAM,CAAC,MAAD,CAAN,KAAmB9T,SAAvB,EAAkC;IAC9Ba,QAAQ,CAAC8sB,IAAT,GAAgB9wB,kBAAkB,CAACiX,MAAM,CAAC,MAAD,CAAP,CAAlC;EACH;;EACD,IAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B9T,SAA/B,EAA0C;IACtCa,QAAQ,CAACmC,YAAT,GAAwBnH,cAAc,CAACiY,MAAM,CAAC,cAAD,CAAP,CAAtC;EACH;;EACD,OAAOjT,QAAP;AACH,CAhBD;;AAiBA,IAAIi8B,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAUhpB,MAAV,EAAkBtV,OAAlB,EAA2B;EAClE,OAAO,CAACsV,MAAM,IAAI,EAAX,EACF2W,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFpqB,GAFE,CAEE,UAAUqqB,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOqV,gCAAgC,CAACrV,KAAD,EAAQnsB,OAAR,CAAvC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAI0V,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUJ,MAAV,EAAkB;EACxC,IAAIrV,EAAJ;;EACA,OAAQ;IACJwhC,cAAc,EAAEnsB,MAAM,CAACC,UADnB;IAEJmsB,SAAS,EAAE,CAACzhC,EAAE,GAAGqV,MAAM,CAAC/U,OAAP,CAAe,kBAAf,CAAN,MAA8C,IAA9C,IAAsDN,EAAE,KAAK,KAAK,CAAlE,GAAsEA,EAAtE,GAA2EqV,MAAM,CAAC/U,OAAP,CAAe,mBAAf,CAFlF;IAGJohC,iBAAiB,EAAErsB,MAAM,CAAC/U,OAAP,CAAe,YAAf,CAHf;IAIJqhC,IAAI,EAAEtsB,MAAM,CAAC/U,OAAP,CAAe,aAAf;EAJF,CAAR;AAMH,CARD;;AASA,IAAIoV,WAAW,GAAG,SAAdA,WAAc,CAAUksB,UAAV,EAAsB7hC,OAAtB,EAA+B;EAC7C,IAAI6hC,UAAU,KAAK,KAAK,CAAxB,EAA2B;IAAEA,UAAU,GAAG,IAAIC,UAAJ,EAAb;EAAgC;;EAC7D,IAAID,UAAU,YAAYC,UAA1B,EAAsC;IAClC,OAAOlsB,OAAO,CAACC,OAAR,CAAgBgsB,UAAhB,CAAP;EACH;;EACD,OAAO7hC,OAAO,CAAC+hC,eAAR,CAAwBF,UAAxB,KAAuCjsB,OAAO,CAACC,OAAR,CAAgB,IAAIisB,UAAJ,EAAhB,CAA9C;AACH,CAND;;AAOA,IAAI/jB,iBAAiB,GAAG,SAApBA,iBAAoB,CAAU8jB,UAAV,EAAsB7hC,OAAtB,EAA+B;EACnD,OAAO2V,WAAW,CAACksB,UAAD,EAAa7hC,OAAb,CAAX,CAAiCgiC,IAAjC,CAAsC,UAAUrhC,IAAV,EAAgB;IAAE,OAAOX,OAAO,CAACiiC,WAAR,CAAoBthC,IAApB,CAAP;EAAmC,CAA3F,CAAP;AACH,CAFD;;AAGA,IAAIM,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAU6oB,KAAV,EAAiB;EAC7C,OAAOA,KAAK,KAAKtoB,SAAV,IACHsoB,KAAK,KAAK,IADP,IAEHA,KAAK,KAAK,EAFP,KAGF,CAACvkB,MAAM,CAAC28B,mBAAP,CAA2BpY,KAA3B,EAAkCqY,QAAlC,CAA2C,QAA3C,CAAD,IAAyDrY,KAAK,CAACroB,MAAN,IAAgB,CAHvE,MAIF,CAAC8D,MAAM,CAAC28B,mBAAP,CAA2BpY,KAA3B,EAAkCqY,QAAlC,CAA2C,MAA3C,CAAD,IAAuDrY,KAAK,CAACsY,IAAN,IAAc,CAJnE,CAAP;AAKH,CAND;;AAOA,IAAIjsB,SAAS,GAAG,SAAZA,SAAY,CAAU0rB,UAAV,EAAsB7hC,OAAtB,EAA+B;EAC3C,OAAO+d,iBAAiB,CAAC8jB,UAAD,EAAa7hC,OAAb,CAAjB,CAAuCgiC,IAAvC,CAA4C,UAAUK,OAAV,EAAmB;IAClE,IAAIA,OAAO,CAAC5gC,MAAZ,EAAoB;MAChB,IAAI6gC,SAAS,GAAGxjC,QAAQ,CAACujC,OAAD,EAAU;QAC9BE,mBAAmB,EAAE,EADS;QAE9BC,gBAAgB,EAAE,KAFY;QAG9BC,cAAc,EAAE,KAHc;QAI9BC,UAAU,EAAE,KAJkB;QAK9BC,iBAAiB,EAAE,2BAAUC,GAAV,EAAe;UAAE,OAAQA,GAAG,CAACC,IAAJ,OAAe,EAAf,IAAqBD,GAAG,CAACT,QAAJ,CAAa,IAAb,CAArB,GAA0C,EAA1C,GAA+CvjC,UAAU,CAACgkC,GAAD,CAAjE;QAA0E;MALhF,CAAV,CAAxB;MAOA,IAAIE,YAAY,GAAG,OAAnB;MACA,IAAIC,GAAG,GAAGx9B,MAAM,CAACC,IAAP,CAAY88B,SAAZ,EAAuB,CAAvB,CAAV;MACA,IAAIU,iBAAiB,GAAGV,SAAS,CAACS,GAAD,CAAjC;;MACA,IAAIC,iBAAiB,CAACF,YAAD,CAArB,EAAqC;QACjCE,iBAAiB,CAACD,GAAD,CAAjB,GAAyBC,iBAAiB,CAACF,YAAD,CAA1C;QACA,OAAOE,iBAAiB,CAACF,YAAD,CAAxB;MACH;;MACD,OAAOjlC,sBAAsB,CAACmlC,iBAAD,CAA7B;IACH;;IACD,OAAO,EAAP;EACH,CAnBM,CAAP;AAoBH,CArBD;;AAsBA,IAAI3sB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUf,MAAV,EAAkBsB,IAAlB,EAAwB;EAC/C,IAAIA,IAAI,CAACH,IAAL,KAAcjV,SAAlB,EAA6B;IACzB,OAAOoV,IAAI,CAACH,IAAZ;EACH;;EACD,IAAInB,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;IAC1B,OAAO,UAAP;EACH;;EACD,OAAO,EAAP;AACH,CARD"},"metadata":{},"sourceType":"module"}