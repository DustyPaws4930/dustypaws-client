{"ast":null,"code":"import { __assign, __asyncValues, __awaiter, __extends, __generator, __read } from \"tslib\";\nimport { AbortController } from \"@aws-sdk/abort-controller\";\nimport { CompleteMultipartUploadCommand, CreateMultipartUploadCommand, PutObjectCommand, PutObjectTaggingCommand, UploadPartCommand } from \"@aws-sdk/client-s3\";\nimport { extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nimport { EventEmitter } from \"events\";\nimport { byteLength } from \"./bytelength\";\nimport { getChunk } from \"./chunker\";\nvar MIN_PART_SIZE = 1024 * 1024 * 5;\n\nvar Upload = function (_super) {\n  __extends(Upload, _super);\n\n  function Upload(options) {\n    var _this = _super.call(this) || this;\n\n    _this.MAX_PARTS = 10000;\n    _this.queueSize = 4;\n    _this.partSize = MIN_PART_SIZE;\n    _this.leavePartsOnError = false;\n    _this.tags = [];\n    _this.concurrentUploaders = [];\n    _this.uploadedParts = [];\n    _this.isMultiPart = true;\n    _this.queueSize = options.queueSize || _this.queueSize;\n    _this.partSize = options.partSize || _this.partSize;\n    _this.leavePartsOnError = options.leavePartsOnError || _this.leavePartsOnError;\n    _this.tags = options.tags || _this.tags;\n    _this.client = options.client;\n    _this.params = options.params;\n\n    _this.__validateInput();\n\n    _this.totalBytes = byteLength(_this.params.Body);\n    _this.bytesUploadedSoFar = 0;\n    _this.abortController = new AbortController();\n    return _this;\n  }\n\n  Upload.prototype.abort = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.abortController.abort();\n        return [2];\n      });\n    });\n  };\n\n  Upload.prototype.done = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, Promise.race([this.__doMultipartUpload(), this.__abortTimeout(this.abortController.signal)])];\n\n          case 1:\n            return [2, _a.sent()];\n        }\n      });\n    });\n  };\n\n  Upload.prototype.on = function (event, listener) {\n    this.uploadEvent = event;\n    return _super.prototype.on.call(this, event, listener);\n  };\n\n  Upload.prototype.__uploadUsingPut = function (dataPart) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params, _a, putResult, endpoint, locationKey, locationBucket, Location, totalSize;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            this.isMultiPart = false;\n            params = __assign(__assign({}, this.params), {\n              Body: dataPart.data\n            });\n            return [4, Promise.all([this.client.send(new PutObjectCommand(params)), this.client.config.endpoint()])];\n\n          case 1:\n            _a = __read.apply(void 0, [_b.sent(), 2]), putResult = _a[0], endpoint = _a[1];\n            locationKey = this.params.Key.split(\"/\").map(function (segment) {\n              return extendedEncodeURIComponent(segment);\n            }).join(\"/\");\n            locationBucket = extendedEncodeURIComponent(this.params.Bucket);\n            Location = this.client.config.forcePathStyle ? \"\".concat(endpoint.protocol, \"//\").concat(endpoint.hostname, \"/\").concat(locationBucket, \"/\").concat(locationKey) : \"\".concat(endpoint.protocol, \"//\").concat(locationBucket, \".\").concat(endpoint.hostname, \"/\").concat(locationKey);\n            this.singleUploadResult = __assign(__assign({}, putResult), {\n              Bucket: this.params.Bucket,\n              Key: this.params.Key,\n              Location: Location\n            });\n            totalSize = byteLength(dataPart.data);\n\n            this.__notifyProgress({\n              loaded: totalSize,\n              total: totalSize,\n              part: 1,\n              Key: this.params.Key,\n              Bucket: this.params.Bucket\n            });\n\n            return [2];\n        }\n      });\n    });\n  };\n\n  Upload.prototype.__createMultipartUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var createCommandParams, createMultipartUploadResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.createMultiPartPromise) {\n              createCommandParams = __assign(__assign({}, this.params), {\n                Body: undefined\n              });\n              this.createMultiPartPromise = this.client.send(new CreateMultipartUploadCommand(createCommandParams));\n            }\n\n            return [4, this.createMultiPartPromise];\n\n          case 1:\n            createMultipartUploadResult = _a.sent();\n            this.uploadId = createMultipartUploadResult.UploadId;\n            return [2];\n        }\n      });\n    });\n  };\n\n  Upload.prototype.__doConcurrentUpload = function (dataFeeder) {\n    var dataFeeder_1, dataFeeder_1_1;\n\n    var e_1, _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var dataPart, partResult, e_2, e_1_1;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 12, 13, 18]);\n\n            dataFeeder_1 = __asyncValues(dataFeeder);\n            _b.label = 1;\n\n          case 1:\n            return [4, dataFeeder_1.next()];\n\n          case 2:\n            if (!(dataFeeder_1_1 = _b.sent(), !dataFeeder_1_1.done)) return [3, 11];\n            dataPart = dataFeeder_1_1.value;\n\n            if (this.uploadedParts.length > this.MAX_PARTS) {\n              throw new Error(\"Exceeded \".concat(this.MAX_PARTS, \" as part of the upload to \").concat(this.params.Key, \" and \").concat(this.params.Bucket, \".\"));\n            }\n\n            _b.label = 3;\n\n          case 3:\n            _b.trys.push([3, 9,, 10]);\n\n            if (this.abortController.signal.aborted) {\n              return [2];\n            }\n\n            if (!(dataPart.partNumber === 1 && dataPart.lastPart)) return [3, 5];\n            return [4, this.__uploadUsingPut(dataPart)];\n\n          case 4:\n            return [2, _b.sent()];\n\n          case 5:\n            if (!!this.uploadId) return [3, 7];\n            return [4, this.__createMultipartUpload()];\n\n          case 6:\n            _b.sent();\n\n            if (this.abortController.signal.aborted) {\n              return [2];\n            }\n\n            _b.label = 7;\n\n          case 7:\n            return [4, this.client.send(new UploadPartCommand(__assign(__assign({}, this.params), {\n              UploadId: this.uploadId,\n              Body: dataPart.data,\n              PartNumber: dataPart.partNumber\n            })))];\n\n          case 8:\n            partResult = _b.sent();\n\n            if (this.abortController.signal.aborted) {\n              return [2];\n            }\n\n            this.uploadedParts.push(__assign(__assign(__assign(__assign({\n              PartNumber: dataPart.partNumber,\n              ETag: partResult.ETag\n            }, partResult.ChecksumCRC32 && {\n              ChecksumCRC32: partResult.ChecksumCRC32\n            }), partResult.ChecksumCRC32C && {\n              ChecksumCRC32C: partResult.ChecksumCRC32C\n            }), partResult.ChecksumSHA1 && {\n              ChecksumSHA1: partResult.ChecksumSHA1\n            }), partResult.ChecksumSHA256 && {\n              ChecksumSHA256: partResult.ChecksumSHA256\n            }));\n            this.bytesUploadedSoFar += byteLength(dataPart.data);\n\n            this.__notifyProgress({\n              loaded: this.bytesUploadedSoFar,\n              total: this.totalBytes,\n              part: dataPart.partNumber,\n              Key: this.params.Key,\n              Bucket: this.params.Bucket\n            });\n\n            return [3, 10];\n\n          case 9:\n            e_2 = _b.sent();\n\n            if (!this.uploadId) {\n              throw e_2;\n            }\n\n            if (this.leavePartsOnError) {\n              throw e_2;\n            }\n\n            return [3, 10];\n\n          case 10:\n            return [3, 1];\n\n          case 11:\n            return [3, 18];\n\n          case 12:\n            e_1_1 = _b.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3, 18];\n\n          case 13:\n            _b.trys.push([13,, 16, 17]);\n\n            if (!(dataFeeder_1_1 && !dataFeeder_1_1.done && (_a = dataFeeder_1.return))) return [3, 15];\n            return [4, _a.call(dataFeeder_1)];\n\n          case 14:\n            _b.sent();\n\n            _b.label = 15;\n\n          case 15:\n            return [3, 17];\n\n          case 16:\n            if (e_1) throw e_1.error;\n            return [7];\n\n          case 17:\n            return [7];\n\n          case 18:\n            return [2];\n        }\n      });\n    });\n  };\n\n  Upload.prototype.__doMultipartUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var dataFeeder, index, currentUpload, result, uploadCompleteParams;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            dataFeeder = getChunk(this.params.Body, this.partSize);\n\n            for (index = 0; index < this.queueSize; index++) {\n              currentUpload = this.__doConcurrentUpload(dataFeeder);\n              this.concurrentUploaders.push(currentUpload);\n            }\n\n            return [4, Promise.all(this.concurrentUploaders)];\n\n          case 1:\n            _a.sent();\n\n            if (this.abortController.signal.aborted) {\n              throw Object.assign(new Error(\"Upload aborted.\"), {\n                name: \"AbortError\"\n              });\n            }\n\n            if (!this.isMultiPart) return [3, 3];\n            this.uploadedParts.sort(function (a, b) {\n              return a.PartNumber - b.PartNumber;\n            });\n            uploadCompleteParams = __assign(__assign({}, this.params), {\n              Body: undefined,\n              UploadId: this.uploadId,\n              MultipartUpload: {\n                Parts: this.uploadedParts\n              }\n            });\n            return [4, this.client.send(new CompleteMultipartUploadCommand(uploadCompleteParams))];\n\n          case 2:\n            result = _a.sent();\n            return [3, 4];\n\n          case 3:\n            result = this.singleUploadResult;\n            _a.label = 4;\n\n          case 4:\n            if (!this.tags.length) return [3, 6];\n            return [4, this.client.send(new PutObjectTaggingCommand(__assign(__assign({}, this.params), {\n              Tagging: {\n                TagSet: this.tags\n              }\n            })))];\n\n          case 5:\n            _a.sent();\n\n            _a.label = 6;\n\n          case 6:\n            return [2, result];\n        }\n      });\n    });\n  };\n\n  Upload.prototype.__notifyProgress = function (progress) {\n    if (this.uploadEvent) {\n      this.emit(this.uploadEvent, progress);\n    }\n  };\n\n  Upload.prototype.__abortTimeout = function (abortSignal) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2, new Promise(function (resolve, reject) {\n          abortSignal.onabort = function () {\n            var abortError = new Error(\"Upload aborted.\");\n            abortError.name = \"AbortError\";\n            reject(abortError);\n          };\n        })];\n      });\n    });\n  };\n\n  Upload.prototype.__validateInput = function () {\n    if (!this.params) {\n      throw new Error(\"InputError: Upload requires params to be passed to upload.\");\n    }\n\n    if (!this.client) {\n      throw new Error(\"InputError: Upload requires a AWS client to do uploads with.\");\n    }\n\n    if (this.partSize < MIN_PART_SIZE) {\n      throw new Error(\"EntityTooSmall: Your proposed upload partsize [\".concat(this.partSize, \"] is smaller than the minimum allowed size [\").concat(MIN_PART_SIZE, \"] (5MB)\"));\n    }\n\n    if (this.queueSize < 1) {\n      throw new Error(\"Queue size: Must have at least one uploading queue.\");\n    }\n  };\n\n  return Upload;\n}(EventEmitter);\n\nexport { Upload };","map":{"version":3,"names":["__assign","__asyncValues","__awaiter","__extends","__generator","__read","AbortController","CompleteMultipartUploadCommand","CreateMultipartUploadCommand","PutObjectCommand","PutObjectTaggingCommand","UploadPartCommand","extendedEncodeURIComponent","EventEmitter","byteLength","getChunk","MIN_PART_SIZE","Upload","_super","options","_this","call","MAX_PARTS","queueSize","partSize","leavePartsOnError","tags","concurrentUploaders","uploadedParts","isMultiPart","client","params","__validateInput","totalBytes","Body","bytesUploadedSoFar","abortController","prototype","abort","_a","done","label","Promise","race","__doMultipartUpload","__abortTimeout","signal","sent","on","event","listener","uploadEvent","__uploadUsingPut","dataPart","putResult","endpoint","locationKey","locationBucket","Location","totalSize","_b","data","all","send","config","apply","Key","split","map","segment","join","Bucket","forcePathStyle","concat","protocol","hostname","singleUploadResult","__notifyProgress","loaded","total","part","__createMultipartUpload","createCommandParams","createMultipartUploadResult","createMultiPartPromise","undefined","uploadId","UploadId","__doConcurrentUpload","dataFeeder","dataFeeder_1","dataFeeder_1_1","e_1","partResult","e_2","e_1_1","trys","push","next","value","length","Error","aborted","partNumber","lastPart","PartNumber","ETag","ChecksumCRC32","ChecksumCRC32C","ChecksumSHA1","ChecksumSHA256","error","return","index","currentUpload","result","uploadCompleteParams","Object","assign","name","sort","a","b","MultipartUpload","Parts","Tagging","TagSet","progress","emit","abortSignal","resolve","reject","onabort","abortError"],"sources":["C:/Users/param/OneDrive/Documents/sem3/client/node_modules/@aws-sdk/lib-storage/dist-es/Upload.js"],"sourcesContent":["import { __assign, __asyncValues, __awaiter, __extends, __generator, __read } from \"tslib\";\nimport { AbortController } from \"@aws-sdk/abort-controller\";\nimport { CompleteMultipartUploadCommand, CreateMultipartUploadCommand, PutObjectCommand, PutObjectTaggingCommand, UploadPartCommand, } from \"@aws-sdk/client-s3\";\nimport { extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nimport { EventEmitter } from \"events\";\nimport { byteLength } from \"./bytelength\";\nimport { getChunk } from \"./chunker\";\nvar MIN_PART_SIZE = 1024 * 1024 * 5;\nvar Upload = (function (_super) {\n    __extends(Upload, _super);\n    function Upload(options) {\n        var _this = _super.call(this) || this;\n        _this.MAX_PARTS = 10000;\n        _this.queueSize = 4;\n        _this.partSize = MIN_PART_SIZE;\n        _this.leavePartsOnError = false;\n        _this.tags = [];\n        _this.concurrentUploaders = [];\n        _this.uploadedParts = [];\n        _this.isMultiPart = true;\n        _this.queueSize = options.queueSize || _this.queueSize;\n        _this.partSize = options.partSize || _this.partSize;\n        _this.leavePartsOnError = options.leavePartsOnError || _this.leavePartsOnError;\n        _this.tags = options.tags || _this.tags;\n        _this.client = options.client;\n        _this.params = options.params;\n        _this.__validateInput();\n        _this.totalBytes = byteLength(_this.params.Body);\n        _this.bytesUploadedSoFar = 0;\n        _this.abortController = new AbortController();\n        return _this;\n    }\n    Upload.prototype.abort = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.abortController.abort();\n                return [2];\n            });\n        });\n    };\n    Upload.prototype.done = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, Promise.race([this.__doMultipartUpload(), this.__abortTimeout(this.abortController.signal)])];\n                    case 1: return [2, _a.sent()];\n                }\n            });\n        });\n    };\n    Upload.prototype.on = function (event, listener) {\n        this.uploadEvent = event;\n        return _super.prototype.on.call(this, event, listener);\n    };\n    Upload.prototype.__uploadUsingPut = function (dataPart) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, _a, putResult, endpoint, locationKey, locationBucket, Location, totalSize;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.isMultiPart = false;\n                        params = __assign(__assign({}, this.params), { Body: dataPart.data });\n                        return [4, Promise.all([\n                                this.client.send(new PutObjectCommand(params)),\n                                this.client.config.endpoint(),\n                            ])];\n                    case 1:\n                        _a = __read.apply(void 0, [_b.sent(), 2]), putResult = _a[0], endpoint = _a[1];\n                        locationKey = this.params\n                            .Key.split(\"/\")\n                            .map(function (segment) { return extendedEncodeURIComponent(segment); })\n                            .join(\"/\");\n                        locationBucket = extendedEncodeURIComponent(this.params.Bucket);\n                        Location = this.client.config.forcePathStyle\n                            ? \"\".concat(endpoint.protocol, \"//\").concat(endpoint.hostname, \"/\").concat(locationBucket, \"/\").concat(locationKey)\n                            : \"\".concat(endpoint.protocol, \"//\").concat(locationBucket, \".\").concat(endpoint.hostname, \"/\").concat(locationKey);\n                        this.singleUploadResult = __assign(__assign({}, putResult), { Bucket: this.params.Bucket, Key: this.params.Key, Location: Location });\n                        totalSize = byteLength(dataPart.data);\n                        this.__notifyProgress({\n                            loaded: totalSize,\n                            total: totalSize,\n                            part: 1,\n                            Key: this.params.Key,\n                            Bucket: this.params.Bucket,\n                        });\n                        return [2];\n                }\n            });\n        });\n    };\n    Upload.prototype.__createMultipartUpload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var createCommandParams, createMultipartUploadResult;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.createMultiPartPromise) {\n                            createCommandParams = __assign(__assign({}, this.params), { Body: undefined });\n                            this.createMultiPartPromise = this.client.send(new CreateMultipartUploadCommand(createCommandParams));\n                        }\n                        return [4, this.createMultiPartPromise];\n                    case 1:\n                        createMultipartUploadResult = _a.sent();\n                        this.uploadId = createMultipartUploadResult.UploadId;\n                        return [2];\n                }\n            });\n        });\n    };\n    Upload.prototype.__doConcurrentUpload = function (dataFeeder) {\n        var dataFeeder_1, dataFeeder_1_1;\n        var e_1, _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var dataPart, partResult, e_2, e_1_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 12, 13, 18]);\n                        dataFeeder_1 = __asyncValues(dataFeeder);\n                        _b.label = 1;\n                    case 1: return [4, dataFeeder_1.next()];\n                    case 2:\n                        if (!(dataFeeder_1_1 = _b.sent(), !dataFeeder_1_1.done)) return [3, 11];\n                        dataPart = dataFeeder_1_1.value;\n                        if (this.uploadedParts.length > this.MAX_PARTS) {\n                            throw new Error(\"Exceeded \".concat(this.MAX_PARTS, \" as part of the upload to \").concat(this.params.Key, \" and \").concat(this.params.Bucket, \".\"));\n                        }\n                        _b.label = 3;\n                    case 3:\n                        _b.trys.push([3, 9, , 10]);\n                        if (this.abortController.signal.aborted) {\n                            return [2];\n                        }\n                        if (!(dataPart.partNumber === 1 && dataPart.lastPart)) return [3, 5];\n                        return [4, this.__uploadUsingPut(dataPart)];\n                    case 4: return [2, _b.sent()];\n                    case 5:\n                        if (!!this.uploadId) return [3, 7];\n                        return [4, this.__createMultipartUpload()];\n                    case 6:\n                        _b.sent();\n                        if (this.abortController.signal.aborted) {\n                            return [2];\n                        }\n                        _b.label = 7;\n                    case 7: return [4, this.client.send(new UploadPartCommand(__assign(__assign({}, this.params), { UploadId: this.uploadId, Body: dataPart.data, PartNumber: dataPart.partNumber })))];\n                    case 8:\n                        partResult = _b.sent();\n                        if (this.abortController.signal.aborted) {\n                            return [2];\n                        }\n                        this.uploadedParts.push(__assign(__assign(__assign(__assign({ PartNumber: dataPart.partNumber, ETag: partResult.ETag }, (partResult.ChecksumCRC32 && { ChecksumCRC32: partResult.ChecksumCRC32 })), (partResult.ChecksumCRC32C && { ChecksumCRC32C: partResult.ChecksumCRC32C })), (partResult.ChecksumSHA1 && { ChecksumSHA1: partResult.ChecksumSHA1 })), (partResult.ChecksumSHA256 && { ChecksumSHA256: partResult.ChecksumSHA256 })));\n                        this.bytesUploadedSoFar += byteLength(dataPart.data);\n                        this.__notifyProgress({\n                            loaded: this.bytesUploadedSoFar,\n                            total: this.totalBytes,\n                            part: dataPart.partNumber,\n                            Key: this.params.Key,\n                            Bucket: this.params.Bucket,\n                        });\n                        return [3, 10];\n                    case 9:\n                        e_2 = _b.sent();\n                        if (!this.uploadId) {\n                            throw e_2;\n                        }\n                        if (this.leavePartsOnError) {\n                            throw e_2;\n                        }\n                        return [3, 10];\n                    case 10: return [3, 1];\n                    case 11: return [3, 18];\n                    case 12:\n                        e_1_1 = _b.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3, 18];\n                    case 13:\n                        _b.trys.push([13, , 16, 17]);\n                        if (!(dataFeeder_1_1 && !dataFeeder_1_1.done && (_a = dataFeeder_1.return))) return [3, 15];\n                        return [4, _a.call(dataFeeder_1)];\n                    case 14:\n                        _b.sent();\n                        _b.label = 15;\n                    case 15: return [3, 17];\n                    case 16:\n                        if (e_1) throw e_1.error;\n                        return [7];\n                    case 17: return [7];\n                    case 18: return [2];\n                }\n            });\n        });\n    };\n    Upload.prototype.__doMultipartUpload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var dataFeeder, index, currentUpload, result, uploadCompleteParams;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        dataFeeder = getChunk(this.params.Body, this.partSize);\n                        for (index = 0; index < this.queueSize; index++) {\n                            currentUpload = this.__doConcurrentUpload(dataFeeder);\n                            this.concurrentUploaders.push(currentUpload);\n                        }\n                        return [4, Promise.all(this.concurrentUploaders)];\n                    case 1:\n                        _a.sent();\n                        if (this.abortController.signal.aborted) {\n                            throw Object.assign(new Error(\"Upload aborted.\"), { name: \"AbortError\" });\n                        }\n                        if (!this.isMultiPart) return [3, 3];\n                        this.uploadedParts.sort(function (a, b) { return a.PartNumber - b.PartNumber; });\n                        uploadCompleteParams = __assign(__assign({}, this.params), { Body: undefined, UploadId: this.uploadId, MultipartUpload: {\n                                Parts: this.uploadedParts,\n                            } });\n                        return [4, this.client.send(new CompleteMultipartUploadCommand(uploadCompleteParams))];\n                    case 2:\n                        result = _a.sent();\n                        return [3, 4];\n                    case 3:\n                        result = this.singleUploadResult;\n                        _a.label = 4;\n                    case 4:\n                        if (!this.tags.length) return [3, 6];\n                        return [4, this.client.send(new PutObjectTaggingCommand(__assign(__assign({}, this.params), { Tagging: {\n                                    TagSet: this.tags,\n                                } })))];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2, result];\n                }\n            });\n        });\n    };\n    Upload.prototype.__notifyProgress = function (progress) {\n        if (this.uploadEvent) {\n            this.emit(this.uploadEvent, progress);\n        }\n    };\n    Upload.prototype.__abortTimeout = function (abortSignal) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2, new Promise(function (resolve, reject) {\n                        abortSignal.onabort = function () {\n                            var abortError = new Error(\"Upload aborted.\");\n                            abortError.name = \"AbortError\";\n                            reject(abortError);\n                        };\n                    })];\n            });\n        });\n    };\n    Upload.prototype.__validateInput = function () {\n        if (!this.params) {\n            throw new Error(\"InputError: Upload requires params to be passed to upload.\");\n        }\n        if (!this.client) {\n            throw new Error(\"InputError: Upload requires a AWS client to do uploads with.\");\n        }\n        if (this.partSize < MIN_PART_SIZE) {\n            throw new Error(\"EntityTooSmall: Your proposed upload partsize [\".concat(this.partSize, \"] is smaller than the minimum allowed size [\").concat(MIN_PART_SIZE, \"] (5MB)\"));\n        }\n        if (this.queueSize < 1) {\n            throw new Error(\"Queue size: Must have at least one uploading queue.\");\n        }\n    };\n    return Upload;\n}(EventEmitter));\nexport { Upload };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}